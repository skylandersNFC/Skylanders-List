"use strict";
(self.webpackChunkskylander_list = self.webpackChunkskylander_list || []).push([[179], {
            728: () => {
                function pe(n) {
                    return "function" == typeof n
                }
                function Ps(n) {
                    const e = n(i => {
                        Error.call(i),
                        i.stack = (new Error).stack
                    });
                    return e.prototype = Object.create(Error.prototype),
                    e.prototype.constructor = e,
                    e
                }
                const Oc = Ps(n => function (e) {
                    n(this),
                    this.message = e ? `${e.length} errors occurred during unsubscription:\n${e.map((i, r) => `${r + 1}) ${i.toString()}`).join("\n  ")}` : "",
                    this.name = "UnsubscriptionError",
                    this.errors = e
                });
                function ho(n, t) {
                    if (n) {
                        const e = n.indexOf(t);
                        0 <= e && n.splice(e, 1)
                    }
                }
                class nt {
                    constructor(t) {
                        this.initialTeardown = t,
                        this.closed = !1,
                        this._parentage = null,
                        this._finalizers = null
                    }
                    unsubscribe() {
                        let t;
                        if (!this.closed) {
                            this.closed = !0;
                            const {
                                _parentage: e
                            } = this;
                            if (e)
                                if (this._parentage = null, Array.isArray(e))
                                    for (const o of e)
                                        o.remove(this);
                                else
                                    e.remove(this);
                            const {
                                initialTeardown: i
                            } = this;
                            if (pe(i))
                                try {
                                    i()
                                } catch (o) {
                                    t = o instanceof Oc ? o.errors : [o]
                                }
                            const {
                                _finalizers: r
                            } = this;
                            if (r) {
                                this._finalizers = null;
                                for (const o of r)
                                    try {
                                        V_(o)
                                    } catch (s) {
                                        t = t ?? [],
                                        s instanceof Oc ? t = [...t, ...s.errors] : t.push(s)
                                    }
                            }
                            if (t)
                                throw new Oc(t)
                        }
                    }
                    add(t) {
                        var e;
                        if (t && t !== this)
                            if (this.closed)
                                V_(t);
                            else {
                                if (t instanceof nt) {
                                    if (t.closed || t._hasParent(this))
                                        return;
                                    t._addParent(this)
                                }
                                (this._finalizers = null !== (e = this._finalizers) && void 0 !== e ? e : []).push(t)
                            }
                    }
                    _hasParent(t) {
                        const {
                            _parentage: e
                        } = this;
                        return e === t || Array.isArray(e) && e.includes(t)
                    }
                    _addParent(t) {
                        const {
                            _parentage: e
                        } = this;
                        this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t
                    }
                    _removeParent(t) {
                        const {
                            _parentage: e
                        } = this;
                        e === t ? this._parentage = null : Array.isArray(e) && ho(e, t)
                    }
                    remove(t) {
                        const {
                            _finalizers: e
                        } = this;
                        e && ho(e, t),
                        t instanceof nt && t._removeParent(this)
                    }
                }
                nt.EMPTY = (() => {
                    const n = new nt;
                    return n.closed = !0,
                    n
                })();
                const N_ = nt.EMPTY;
                function L_(n) {
                    return n instanceof nt || n && "closed" in n && pe(n.remove) && pe(n.add) && pe(n.unsubscribe)
                }
                function V_(n) {
                    pe(n) ? n() : n.unsubscribe()
                }
                const vr = {
                    onUnhandledError: null,
                    onStoppedNotification: null,
                    Promise: void 0,
                    useDeprecatedSynchronousErrorHandling: !1,
                    useDeprecatedNextContext: !1
                },
                Rc = {
                    setTimeout(n, t, ...e) {
                        const {
                            delegate: i
                        } = Rc;
                        return i?.setTimeout ? i.setTimeout(n, t, ...e) : setTimeout(n, t, ...e)
                    },
                    clearTimeout(n) {
                        const {
                            delegate: t
                        } = Rc;
                        return (t?.clearTimeout || clearTimeout)(n)
                    },
                    delegate: void 0
                };
                function B_(n) {
                    Rc.setTimeout(() => {
                        const {
                            onUnhandledError: t
                        } = vr;
                        if (!t)
                            throw n;
                        t(n)
                    })
                }
                function Fs() {}
                const NT = th("C", void 0, void 0);
                function th(n, t, e) {
                    return {
                        kind: n,
                        value: t,
                        error: e
                    }
                }
                let yr = null;
                function Pc(n) {
                    if (vr.useDeprecatedSynchronousErrorHandling) {
                        const t = !yr;
                        if (t && (yr = {
                                    errorThrown: !1,
                                    error: null
                                }), n(), t) {
                            const {
                                errorThrown: e,
                                error: i
                            } = yr;
                            if (yr = null, e)
                                throw i
                        }
                    } else
                        n()
                }
                class nh extends nt {
                    constructor(t) {
                        super(),
                        this.isStopped = !1,
                        t ? (this.destination = t, L_(t) && t.add(this)) : this.destination = $T
                    }
                    static create(t, e, i) {
                        return new Ns(t, e, i)
                    }
                    next(t) {
                        this.isStopped ? rh(function VT(n) {
                            return th("N", n, void 0)
                        }
                            (t), this) : this._next(t)
                    }
                    error(t) {
                        this.isStopped ? rh(function LT(n) {
                            return th("E", void 0, n)
                        }
                            (t), this) : (this.isStopped = !0, this._error(t))
                    }
                    complete() {
                        this.isStopped ? rh(NT, this) : (this.isStopped = !0, this._complete())
                    }
                    unsubscribe() {
                        this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null)
                    }
                    _next(t) {
                        this.destination.next(t)
                    }
                    _error(t) {
                        try {
                            this.destination.error(t)
                        } finally {
                            this.unsubscribe()
                        }
                    }
                    _complete() {
                        try {
                            this.destination.complete()
                        } finally {
                            this.unsubscribe()
                        }
                    }
                }
                const jT = Function.prototype.bind;
                function ih(n, t) {
                    return jT.call(n, t)
                }
                class HT {
                    constructor(t) {
                        this.partialObserver = t
                    }
                    next(t) {
                        const {
                            partialObserver: e
                        } = this;
                        if (e.next)
                            try {
                                e.next(t)
                            } catch (i) {
                                Fc(i)
                            }
                    }
                    error(t) {
                        const {
                            partialObserver: e
                        } = this;
                        if (e.error)
                            try {
                                e.error(t)
                            } catch (i) {
                                Fc(i)
                            }
                        else
                            Fc(t)
                    }
                    complete() {
                        const {
                            partialObserver: t
                        } = this;
                        if (t.complete)
                            try {
                                t.complete()
                            } catch (e) {
                                Fc(e)
                            }
                    }
                }
                class Ns extends nh {
                    constructor(t, e, i) {
                        let r;
                        if (super(), pe(t) || !t)
                            r = {
                                next: t ?? void 0,
                                error: e ?? void 0,
                                complete: i ?? void 0
                            };
                        else {
                            let o;
                            this && vr.useDeprecatedNextContext ? (o = Object.create(t), o.unsubscribe = () => this.unsubscribe(), r = {
                                    next: t.next && ih(t.next, o),
                                    error: t.error && ih(t.error, o),
                                    complete: t.complete && ih(t.complete, o)
                                }) : r = t
                        }
                        this.destination = new HT(r)
                    }
                }
                function Fc(n) {
                    vr.useDeprecatedSynchronousErrorHandling ? function BT(n) {
                        vr.useDeprecatedSynchronousErrorHandling && yr && (yr.errorThrown = !0, yr.error = n)
                    }
                    (n) : B_(n)
                }
                function rh(n, t) {
                    const {
                        onStoppedNotification: e
                    } = vr;
                    e && Rc.setTimeout(() => e(n, t))
                }
                const $T = {
                    closed: !0,
                    next: Fs,
                    error: function UT(n) {
                        throw n
                    },
                    complete: Fs
                },
                oh = "function" == typeof Symbol && Symbol.observable || "@@observable";
                function Hi(n) {
                    return n
                }
                function j_(n) {
                    return 0 === n.length ? Hi : 1 === n.length ? n[0] : function (e) {
                        return n.reduce((i, r) => r(i), e)
                    }
                }
                let Ae = (() => {
                    class n {
                        constructor(e) {
                            e && (this._subscribe = e)
                        }
                        lift(e) {
                            const i = new n;
                            return i.source = this,
                            i.operator = e,
                            i
                        }
                        subscribe(e, i, r) {
                            const o = function WT(n) {
                                return n && n instanceof nh || function GT(n) {
                                    return n && pe(n.next) && pe(n.error) && pe(n.complete)
                                }
                                (n) && L_(n)
                            }
                            (e) ? e : new Ns(e, i, r);
                            return Pc(() => {
                                const {
                                    operator: s,
                                    source: a
                                } = this;
                                o.add(s ? s.call(o, a) : a ? this._subscribe(o) : this._trySubscribe(o))
                            }),
                            o
                        }
                        _trySubscribe(e) {
                            try {
                                return this._subscribe(e)
                            } catch (i) {
                                e.error(i)
                            }
                        }
                        forEach(e, i) {
                            return new(i = H_(i))((r, o) => {
                                const s = new Ns({
                                    next: a => {
                                        try {
                                            e(a)
                                        } catch (c) {
                                            o(c),
                                            s.unsubscribe()
                                        }
                                    },
                                    error: o,
                                    complete: r
                                });
                                this.subscribe(s)
                            })
                        }
                        _subscribe(e) {
                            var i;
                            return null === (i = this.source) || void 0 === i ? void 0 : i.subscribe(e)
                        }
                        [oh]() {
                            return this
                        }
                        pipe(...e) {
                            return j_(e)(this)
                        }
                        toPromise(e) {
                            return new(e = H_(e))((i, r) => {
                                let o;
                                this.subscribe(s => o = s, s => r(s), () => i(o))
                            })
                        }
                    }
                    return n.create = t => new n(t),
                    n
                })();
                function H_(n) {
                    var t;
                    return null !== (t = n ?? vr.Promise) && void 0 !== t ? t : Promise
                }
                const qT = Ps(n => function () {
                    n(this),
                    this.name = "ObjectUnsubscribedError",
                    this.message = "object unsubscribed"
                });
                let K = (() => {
                    class n extends Ae {
                        constructor() {
                            super(),
                            this.closed = !1,
                            this.currentObservers = null,
                            this.observers = [],
                            this.isStopped = !1,
                            this.hasError = !1,
                            this.thrownError = null
                        }
                        lift(e) {
                            const i = new U_(this, this);
                            return i.operator = e,
                            i
                        }
                        _throwIfClosed() {
                            if (this.closed)
                                throw new qT
                        }
                        next(e) {
                            Pc(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    this.currentObservers || (this.currentObservers = Array.from(this.observers));
                                    for (const i of this.currentObservers)
                                        i.next(e)
                                }
                            })
                        }
                        error(e) {
                            Pc(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    this.hasError = this.isStopped = !0,
                                    this.thrownError = e;
                                    const {
                                        observers: i
                                    } = this;
                                    for (; i.length; )
                                        i.shift().error(e)
                                }
                            })
                        }
                        complete() {
                            Pc(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    this.isStopped = !0;
                                    const {
                                        observers: e
                                    } = this;
                                    for (; e.length; )
                                        e.shift().complete()
                                }
                            })
                        }
                        unsubscribe() {
                            this.isStopped = this.closed = !0,
                            this.observers = this.currentObservers = null
                        }
                        get observed() {
                            var e;
                            return (null === (e = this.observers) || void 0 === e ? void 0 : e.length) > 0
                        }
                        _trySubscribe(e) {
                            return this._throwIfClosed(),
                            super._trySubscribe(e)
                        }
                        _subscribe(e) {
                            return this._throwIfClosed(),
                            this._checkFinalizedStatuses(e),
                            this._innerSubscribe(e)
                        }
                        _innerSubscribe(e) {
                            const {
                                hasError: i,
                                isStopped: r,
                                observers: o
                            } = this;
                            return i || r ? N_ : (this.currentObservers = null, o.push(e), new nt(() => {
                                    this.currentObservers = null,
                                    ho(o, e)
                                }))
                        }
                        _checkFinalizedStatuses(e) {
                            const {
                                hasError: i,
                                thrownError: r,
                                isStopped: o
                            } = this;
                            i ? e.error(r) : o && e.complete()
                        }
                        asObservable() {
                            const e = new Ae;
                            return e.source = this,
                            e
                        }
                    }
                    return n.create = (t, e) => new U_(t, e),
                    n
                })();
                class U_ extends K {
                    constructor(t, e) {
                        super(),
                        this.destination = t,
                        this.source = e
                    }
                    next(t) {
                        var e,
                        i;
                        null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.next) || void 0 === i || i.call(e, t)
                    }
                    error(t) {
                        var e,
                        i;
                        null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.error) || void 0 === i || i.call(e, t)
                    }
                    complete() {
                        var t,
                        e;
                        null === (e = null === (t = this.destination) || void 0 === t ? void 0 : t.complete) || void 0 === e || e.call(t)
                    }
                    _subscribe(t) {
                        var e,
                        i;
                        return null !== (i = null === (e = this.source) || void 0 === e ? void 0 : e.subscribe(t)) && void 0 !== i ? i : N_
                    }
                }
                function $_(n) {
                    return pe(n?.lift)
                }
                function Be(n) {
                    return t => {
                        if ($_(t))
                            return t.lift(function (e) {
                                try {
                                    return n(e, this)
                                } catch (i) {
                                    this.error(i)
                                }
                            });
                        throw new TypeError("Unable to lift unknown Observable type")
                    }
                }
                function Ve(n, t, e, i, r) {
                    return new YT(n, t, e, i, r)
                }
                class YT extends nh {
                    constructor(t, e, i, r, o, s) {
                        super(t),
                        this.onFinalize = o,
                        this.shouldUnsubscribe = s,
                        this._next = e ? function (a) {
                            try {
                                e(a)
                            } catch (c) {
                                t.error(c)
                            }
                        }
                         : super._next,
                        this._error = r ? function (a) {
                            try {
                                r(a)
                            } catch (c) {
                                t.error(c)
                            } finally {
                                this.unsubscribe()
                            }
                        }
                         : super._error,
                        this._complete = i ? function () {
                            try {
                                i()
                            } catch (a) {
                                t.error(a)
                            } finally {
                                this.unsubscribe()
                            }
                        }
                         : super._complete
                    }
                    unsubscribe() {
                        var t;
                        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
                            const {
                                closed: e
                            } = this;
                            super.unsubscribe(),
                            !e && (null === (t = this.onFinalize) || void 0 === t || t.call(this))
                        }
                    }
                }
                function j(n, t) {
                    return Be((e, i) => {
                        let r = 0;
                        e.subscribe(Ve(i, o => {
                                i.next(n.call(t, o, r++))
                            }))
                    })
                }
                function wr(n) {
                    return this instanceof wr ? (this.v = n, this) : new wr(n)
                }
                function XT(n, t, e) {
                    if (!Symbol.asyncIterator)
                        throw new TypeError("Symbol.asyncIterator is not defined.");
                    var r,
                    i = e.apply(n, t || []),
                    o = [];
                    return r = {},
                    s("next"),
                    s("throw"),
                    s("return"),
                    r[Symbol.asyncIterator] = function () {
                        return this
                    },
                    r;
                    function s(h) {
                        i[h] && (r[h] = function (f) {
                            return new Promise(function (m, _) {
                                o.push([h, f, m, _]) > 1 || a(h, f)
                            })
                        })
                    }
                    function a(h, f) {
                        try {
                            !function c(h) {
                                h.value instanceof wr ? Promise.resolve(h.value.v).then(l, d) : u(o[0][2], h)
                            }
                            (i[h](f))
                        } catch (m) {
                            u(o[0][3], m)
                        }
                    }
                    function l(h) {
                        a("next", h)
                    }
                    function d(h) {
                        a("throw", h)
                    }
                    function u(h, f) {
                        h(f),
                        o.shift(),
                        o.length && a(o[0][0], o[0][1])
                    }
                }
                function QT(n) {
                    if (!Symbol.asyncIterator)
                        throw new TypeError("Symbol.asyncIterator is not defined.");
                    var e,
                    t = n[Symbol.asyncIterator];
                    return t ? t.call(n) : (n = function W_(n) {
                        var t = "function" == typeof Symbol && Symbol.iterator,
                        e = t && n[t],
                        i = 0;
                        if (e)
                            return e.call(n);
                        if (n && "number" == typeof n.length)
                            return {
                                next: function () {
                                    return n && i >= n.length && (n = void 0), {
                                        value: n && n[i++],
                                        done: !n
                                    }
                                }
                            };
                        throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
                    }
                        (n), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function () {
                        return this
                    }, e);
                    function i(o) {
                        e[o] = n[o] && function (s) {
                            return new Promise(function (a, c) {
                                !function r(o, s, a, c) {
                                    Promise.resolve(c).then(function (l) {
                                        o({
                                            value: l,
                                            done: a
                                        })
                                    }, s)
                                }
                                (a, c, (s = n[o](s)).done, s.value)
                            })
                        }
                    }
                }
                const ah = n => n && "number" == typeof n.length && "function" != typeof n;
                function q_(n) {
                    return pe(n?.then)
                }
                function Y_(n) {
                    return pe(n[oh])
                }
                function K_(n) {
                    return Symbol.asyncIterator && pe(n?.[Symbol.asyncIterator])
                }
                function Z_(n) {
                    return new TypeError(`You provided ${null !== n && "object" == typeof n ? "an invalid object" : `'${n}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)
                }
                const X_ = function eA() {
                    return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
                }
                ();
                function Q_(n) {
                    return pe(n?.[X_])
                }
                function J_(n) {
                    return XT(this, arguments, function  * () {
                        const e = n.getReader();
                        try {
                            for (; ; ) {
                                const {
                                    value: i,
                                    done: r
                                } = yield wr(e.read());
                                if (r)
                                    return yield wr(void 0);
                                yield yield wr(i)
                            }
                        } finally {
                            e.releaseLock()
                        }
                    })
                }
                function eb(n) {
                    return pe(n?.getReader)
                }
                function Rt(n) {
                    if (n instanceof Ae)
                        return n;
                    if (null != n) {
                        if (Y_(n))
                            return function tA(n) {
                                return new Ae(t => {
                                    const e = n[oh]();
                                    if (pe(e.subscribe))
                                        return e.subscribe(t);
                                    throw new TypeError("Provided object does not correctly implement Symbol.observable")
                                })
                            }
                        (n);
                        if (ah(n))
                            return function nA(n) {
                                return new Ae(t => {
                                    for (let e = 0; e < n.length && !t.closed; e++)
                                        t.next(n[e]);
                                    t.complete()
                                })
                            }
                        (n);
                        if (q_(n))
                            return function iA(n) {
                                return new Ae(t => {
                                    n.then(e => {
                                        t.closed || (t.next(e), t.complete())
                                    }, e => t.error(e)).then(null, B_)
                                })
                            }
                        (n);
                        if (K_(n))
                            return tb(n);
                        if (Q_(n))
                            return function rA(n) {
                                return new Ae(t => {
                                    for (const e of n)
                                        if (t.next(e), t.closed)
                                            return;
                                    t.complete()
                                })
                            }
                        (n);
                        if (eb(n))
                            return function oA(n) {
                                return tb(J_(n))
                            }
                        (n)
                    }
                    throw Z_(n)
                }
                function tb(n) {
                    return new Ae(t => {
                        (function sA(n, t) {
                            var e,
                            i,
                            r,
                            o;
                            return function KT(n, t, e, i) {
                                return new(e || (e = Promise))(function (o, s) {
                                    function a(d) {
                                        try {
                                            l(i.next(d))
                                        } catch (u) {
                                            s(u)
                                        }
                                    }
                                    function c(d) {
                                        try {
                                            l(i.throw(d))
                                        } catch (u) {
                                            s(u)
                                        }
                                    }
                                    function l(d) {
                                        d.done ? o(d.value) : function r(o) {
                                            return o instanceof e ? o : new e(function (s) {
                                                s(o)
                                            })
                                        }
                                        (d.value).then(a, c)
                                    }
                                    l((i = i.apply(n, t || [])).next())
                                })
                            }
                            (this, void 0, void 0, function  * () {
                                try {
                                    for (e = QT(n); !(i = yield e.next()).done; )
                                        if (t.next(i.value), t.closed)
                                            return
                                } catch (s) {
                                    r = {
                                        error: s
                                    }
                                } finally {
                                    try {
                                        i && !i.done && (o = e.return) && (yield o.call(e))
                                    } finally {
                                        if (r)
                                            throw r.error
                                    }
                                }
                                t.complete()
                            })
                        })(n, t).catch(e => t.error(e))
                    })
                }
                function _i(n, t, e, i = 0, r = !1) {
                    const o = t.schedule(function () {
                        e(),
                        r ? n.add(this.schedule(null, i)) : this.unsubscribe()
                    }, i);
                    if (n.add(o), !r)
                        return o
                }
                function ut(n, t, e = 1 / 0) {
                    return pe(t) ? ut((i, r) => j((o, s) => t(i, o, r, s))(Rt(n(i, r))), e) : ("number" == typeof t && (e = t), Be((i, r) => function aA(n, t, e, i, r, o, s, a) {
                            const c = [];
                            let l = 0,
                            d = 0,
                            u = !1;
                            const h = () => {
                                u && !c.length && !l && t.complete()
                            },
                            f = _ => l < i ? m(_) : c.push(_),
                            m = _ => {
                                o && t.next(_),
                                l++;
                                let C = !1;
                                Rt(e(_, d++)).subscribe(Ve(t, D => {
                                        r?.(D),
                                        o ? f(D) : t.next(D)
                                    }, () => {
                                        C = !0
                                    }, void 0, () => {
                                        if (C)
                                            try {
                                                for (l--; c.length && l < i; ) {
                                                    const D = c.shift();
                                                    s ? _i(t, s, () => m(D)) : m(D)
                                                }
                                                h()
                                            } catch (D) {
                                                t.error(D)
                                            }
                                    }))
                            };
                            return n.subscribe(Ve(t, f, () => {
                                    u = !0,
                                    h()
                                })),
                            () => {
                                a?.()
                            }
                        }
                            (i, r, n, e)))
                }
                function fo(n = 1 / 0) {
                    return ut(Hi, n)
                }
                const Xn = new Ae(n => n.complete());
                function nb(n) {
                    return n && pe(n.schedule)
                }
                function ch(n) {
                    return n[n.length - 1]
                }
                function ib(n) {
                    return pe(ch(n)) ? n.pop() : void 0
                }
                function Ls(n) {
                    return nb(ch(n)) ? n.pop() : void 0
                }
                function rb(n, t = 0) {
                    return Be((e, i) => {
                        e.subscribe(Ve(i, r => _i(i, n, () => i.next(r), t), () => _i(i, n, () => i.complete(), t), r => _i(i, n, () => i.error(r), t)))
                    })
                }
                function ob(n, t = 0) {
                    return Be((e, i) => {
                        i.add(n.schedule(() => e.subscribe(i), t))
                    })
                }
                function sb(n, t) {
                    if (!n)
                        throw new Error("Iterable cannot be null");
                    return new Ae(e => {
                        _i(e, t, () => {
                            const i = n[Symbol.asyncIterator]();
                            _i(e, t, () => {
                                i.next().then(r => {
                                    r.done ? e.complete() : e.next(r.value)
                                })
                            }, 0, !0)
                        })
                    })
                }
                function it(n, t) {
                    return t ? function mA(n, t) {
                        if (null != n) {
                            if (Y_(n))
                                return function dA(n, t) {
                                    return Rt(n).pipe(ob(t), rb(t))
                                }
                            (n, t);
                            if (ah(n))
                                return function hA(n, t) {
                                    return new Ae(e => {
                                        let i = 0;
                                        return t.schedule(function () {
                                            i === n.length ? e.complete() : (e.next(n[i++]), e.closed || this.schedule())
                                        })
                                    })
                                }
                            (n, t);
                            if (q_(n))
                                return function uA(n, t) {
                                    return Rt(n).pipe(ob(t), rb(t))
                                }
                            (n, t);
                            if (K_(n))
                                return sb(n, t);
                            if (Q_(n))
                                return function fA(n, t) {
                                    return new Ae(e => {
                                        let i;
                                        return _i(e, t, () => {
                                            i = n[X_](),
                                            _i(e, t, () => {
                                                let r,
                                                o;
                                                try {
                                                    ({
                                                        value: r,
                                                        done: o
                                                    } = i.next())
                                                } catch (s) {
                                                    return void e.error(s)
                                                }
                                                o ? e.complete() : e.next(r)
                                            }, 0, !0)
                                        }),
                                        () => pe(i?.return ) && i.return()
                                    })
                                }
                            (n, t);
                            if (eb(n))
                                return function pA(n, t) {
                                    return sb(J_(n), t)
                                }
                            (n, t)
                        }
                        throw Z_(n)
                    }
                    (n, t) : Rt(n)
                }
                function Cr(...n) {
                    const t = Ls(n),
                    e = function lA(n, t) {
                        return "number" == typeof ch(n) ? n.pop() : t
                    }
                    (n, 1 / 0),
                    i = n;
                    return i.length ? 1 === i.length ? Rt(i[0]) : fo(e)(it(i, t)) : Xn
                }
                function lh(n = {}) {
                    const {
                        connector: t = (() => new K),
                        resetOnError: e = !0,
                        resetOnComplete: i = !0,
                        resetOnRefCountZero: r = !0
                    } = n;
                    return o => {
                        let s,
                        a,
                        c,
                        l = 0,
                        d = !1,
                        u = !1;
                        const h = () => {
                            a?.unsubscribe(),
                            a = void 0
                        },
                        f = () => {
                            h(),
                            s = c = void 0,
                            d = u = !1
                        },
                        m = () => {
                            const _ = s;
                            f(),
                            _?.unsubscribe()
                        };
                        return Be((_, C) => {
                            l++,
                            !u && !d && h();
                            const D = c = c ?? t();
                            C.add(() => {
                                l--,
                                0 === l && !u && !d && (a = dh(m, r))
                            }),
                            D.subscribe(C),
                            !s && l > 0 && (s = new Ns({
                                    next: A => D.next(A),
                                    error: A => {
                                        u = !0,
                                        h(),
                                        a = dh(f, e, A),
                                        D.error(A)
                                    },
                                    complete: () => {
                                        d = !0,
                                        h(),
                                        a = dh(f, i),
                                        D.complete()
                                    }
                                }), Rt(_).subscribe(s))
                        })(o)
                    }
                }
                function dh(n, t, ...e) {
                    if (!0 === t)
                        return void n();
                    if (!1 === t)
                        return;
                    const i = new Ns({
                        next: () => {
                            i.unsubscribe(),
                            n()
                        }
                    });
                    return t(...e).subscribe(i)
                }
                function ke(n) {
                    for (let t in n)
                        if (n[t] === ke)
                            return t;
                    throw Error("Could not find renamed property on target object.")
                }
                function uh(n, t) {
                    for (const e in t)
                        t.hasOwnProperty(e) && !n.hasOwnProperty(e) && (n[e] = t[e])
                }
                function Ie(n) {
                    if ("string" == typeof n)
                        return n;
                    if (Array.isArray(n))
                        return "[" + n.map(Ie).join(", ") + "]";
                    if (null == n)
                        return "" + n;
                    if (n.overriddenName)
                        return `${n.overriddenName}`;
                    if (n.name)
                        return `${n.name}`;
                    const t = n.toString();
                    if (null == t)
                        return "" + t;
                    const e = t.indexOf("\n");
                    return -1 === e ? t : t.substring(0, e)
                }
                function hh(n, t) {
                    return null == n || "" === n ? null === t ? "" : t : null == t || "" === t ? n : n + " " + t
                }
                const gA = ke({
                    __forward_ref__: ke
                });
                function Ce(n) {
                    return n.__forward_ref__ = Ce,
                    n.toString = function () {
                        return Ie(this())
                    },
                    n
                }
                function G(n) {
                    return fh(n) ? n() : n
                }
                function fh(n) {
                    return "function" == typeof n && n.hasOwnProperty(gA) && n.__forward_ref__ === Ce
                }
                function ph(n) {
                    return n && !!n. \u0275providers
                }
                const Nc = "https://g.co/ng/security#xss";
                class E extends Error {
                    constructor(t, e) {
                        super(function Lc(n, t) {
                            return `NG0${Math.abs(n)}${t ? ": " + t.trim() : ""}`
                        }
                            (t, e)),
                        this.code = t
                    }
                }
                function ee(n) {
                    return "string" == typeof n ? n : null == n ? "" : String(n)
                }
                function Vc(n, t) {
                    throw new E(-201, !1)
                }
                function tn(n, t) {
                    null == n && function Me(n, t, e, i) {
                        throw new Error(`ASSERTION ERROR: ${n}` + (null == i ? "" : ` [Expected=> ${e} ${i} ${t} <=Actual]`))
                    }
                    (t, n, null, "!=")
                }
                function k(n) {
                    return {
                        token: n.token,
                        providedIn: n.providedIn || null,
                        factory: n.factory,
                        value: void 0
                    }
                }
                function he(n) {
                    return {
                        providers: n.providers || [],
                        imports: n.imports || []
                    }
                }
                function Bc(n) {
                    return ab(n, jc) || ab(n, lb)
                }
                function ab(n, t) {
                    return n.hasOwnProperty(t) ? n[t] : null
                }
                function cb(n) {
                    return n && (n.hasOwnProperty(mh) || n.hasOwnProperty(EA)) ? n[mh] : null
                }
                const jc = ke({
                     \u0275prov: ke
                }),
                mh = ke({
                     \u0275inj: ke
                }),
                lb = ke({
                    ngInjectableDef: ke
                }),
                EA = ke({
                    ngInjectorDef: ke
                });
                var W = (() => ((W = W || {})[W.Default = 0] = "Default", W[W.Host = 1] = "Host", W[W.Self = 2] = "Self", W[W.SkipSelf = 4] = "SkipSelf", W[W.Optional = 8] = "Optional", W))();
                let gh;
                function bn(n) {
                    const t = gh;
                    return gh = n,
                    t
                }
                function db(n, t, e) {
                    const i = Bc(n);
                    return i && "root" == i.providedIn ? void 0 === i.value ? i.value = i.factory() : i.value : e & W.Optional ? null : void 0 !== t ? t : void Vc(Ie(n))
                }
                const Re = (() => typeof globalThis < "u" && globalThis || typeof global < "u" && global || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self)(),
                Vs = {},
                _h = "__NG_DI_FLAG__",
                Hc = "ngTempTokenPath",
                TA = /\n/gm,
                ub = "__source";
                let Bs;
                function po(n) {
                    const t = Bs;
                    return Bs = n,
                    t
                }
                function kA(n, t = W.Default) {
                    if (void 0 === Bs)
                        throw new E(-203, !1);
                    return null === Bs ? db(n, void 0, t) : Bs.get(n, t & W.Optional ? null : void 0, t)
                }
                function v(n, t = W.Default) {
                    return (function SA() {
                        return gh
                    }
                        () || kA)(G(n), t)
                }
                function ce(n, t = W.Default) {
                    return v(n, Uc(t))
                }
                function Uc(n) {
                    return typeof n > "u" || "number" == typeof n ? n : 0 | (n.optional && 8) | (n.host && 1) | (n.self && 2) | (n.skipSelf && 4)
                }
                function bh(n) {
                    const t = [];
                    for (let e = 0; e < n.length; e++) {
                        const i = G(n[e]);
                        if (Array.isArray(i)) {
                            if (0 === i.length)
                                throw new E(900, !1);
                            let r,
                            o = W.Default;
                            for (let s = 0; s < i.length; s++) {
                                const a = i[s],
                                c = IA(a);
                                "number" == typeof c ? -1 === c ? r = a.token : o |= c : r = a
                            }
                            t.push(v(r, o))
                        } else
                            t.push(v(i))
                    }
                    return t
                }
                function js(n, t) {
                    return n[_h] = t,
                    n.prototype[_h] = t,
                    n
                }
                function IA(n) {
                    return n[_h]
                }
                function Ui(n) {
                    return {
                        toString: n
                    }
                    .toString()
                }
                var In = (() => ((In = In || {})[In.OnPush = 0] = "OnPush", In[In.Default = 1] = "Default", In))(),
                On = (() => {
                    return (n = On || (On = {}))[n.Emulated = 0] = "Emulated",
                    n[n.None = 2] = "None",
                    n[n.ShadowDom = 3] = "ShadowDom",
                    On;
                    var n
                })();
                const vi = {},
                De = [],
                $c = ke({
                     \u0275cmp: ke
                }),
                vh = ke({
                     \u0275dir: ke
                }),
                yh = ke({
                     \u0275pipe: ke
                }),
                fb = ke({
                     \u0275mod: ke
                }),
                yi = ke({
                     \u0275fac: ke
                }),
                Hs = ke({
                    __NG_ELEMENT_ID__: ke
                });
                let PA = 0;
                function Z(n) {
                    return Ui(() => {
                        const e = !0 === n.standalone,
                        i = {},
                        r = {
                            type: n.type,
                            providersResolver: null,
                            decls: n.decls,
                            vars: n.vars,
                            factory: null,
                            template: n.template || null,
                            consts: n.consts || null,
                            ngContentSelectors: n.ngContentSelectors,
                            hostBindings: n.hostBindings || null,
                            hostVars: n.hostVars || 0,
                            hostAttrs: n.hostAttrs || null,
                            contentQueries: n.contentQueries || null,
                            declaredInputs: i,
                            inputs: null,
                            outputs: null,
                            exportAs: n.exportAs || null,
                            onPush: n.changeDetection === In.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            standalone: e,
                            dependencies: e && n.dependencies || null,
                            getStandaloneInjector: null,
                            selectors: n.selectors || De,
                            viewQuery: n.viewQuery || null,
                            features: n.features || null,
                            data: n.data || {},
                            encapsulation: n.encapsulation || On.Emulated,
                            id: "c" + PA++,
                            styles: n.styles || De,
                            _: null,
                            setInput: null,
                            schemas: n.schemas || null,
                            tView: null,
                            findHostDirectiveDefs: null,
                            hostDirectives: null
                        },
                        o = n.dependencies,
                        s = n.features;
                        return r.inputs = gb(n.inputs, i),
                        r.outputs = gb(n.outputs),
                        s && s.forEach(a => a(r)),
                        r.directiveDefs = o ? () => ("function" == typeof o ? o() : o).map(pb).filter(mb) : null,
                        r.pipeDefs = o ? () => ("function" == typeof o ? o() : o).map(Pt).filter(mb) : null,
                        r
                    })
                }
                function pb(n) {
                    return Te(n) || St(n)
                }
                function mb(n) {
                    return null !== n
                }
                function me(n) {
                    return Ui(() => ({
                            type: n.type,
                            bootstrap: n.bootstrap || De,
                            declarations: n.declarations || De,
                            imports: n.imports || De,
                            exports: n.exports || De,
                            transitiveCompileScopes: null,
                            schemas: n.schemas || null,
                            id: n.id || null
                        }))
                }
                function gb(n, t) {
                    if (null == n)
                        return vi;
                    const e = {};
                    for (const i in n)
                        if (n.hasOwnProperty(i)) {
                            let r = n[i],
                            o = r;
                            Array.isArray(r) && (o = r[1], r = r[0]),
                            e[r] = i,
                            t && (t[r] = o)
                        }
                    return e
                }
                const N = Z;
                function Gt(n) {
                    return {
                        type: n.type,
                        name: n.name,
                        factory: null,
                        pure: !1 !== n.pure,
                        standalone: !0 === n.standalone,
                        onDestroy: n.type.prototype.ngOnDestroy || null
                    }
                }
                function Te(n) {
                    return n[$c] || null
                }
                function St(n) {
                    return n[vh] || null
                }
                function Pt(n) {
                    return n[yh] || null
                }
                function nn(n, t) {
                    const e = n[fb] || null;
                    if (!e && !0 === t)
                        throw new Error(`Type ${Ie(n)} does not have '\u0275mod' property.`);
                    return e
                }
                function Wt(n) {
                    return Array.isArray(n) && "object" == typeof n[1]
                }
                function Pn(n) {
                    return Array.isArray(n) && !0 === n[1]
                }
                function Dh(n) {
                    return 0 != (4 & n.flags)
                }
                function qc(n) {
                    return n.componentOffset > -1
                }
                function Yc(n) {
                    return 1 == (1 & n.flags)
                }
                function Fn(n) {
                    return null !== n.template
                }
                function jA(n) {
                    return 0 != (256 & n[2])
                }
                function Mr(n, t) {
                    return n.hasOwnProperty(yi) ? n[yi] : null
                }
                class $A {
                    constructor(t, e, i) {
                        this.previousValue = t,
                        this.currentValue = e,
                        this.firstChange = i
                    }
                    isFirstChange() {
                        return this.firstChange
                    }
                }
                function Ft() {
                    return vb
                }
                function vb(n) {
                    return n.type.prototype.ngOnChanges && (n.setInput = GA),
                    zA
                }
                function zA() {
                    const n = wb(this),
                    t = n?.current;
                    if (t) {
                        const e = n.previous;
                        if (e === vi)
                            n.previous = t;
                        else
                            for (let i in t)
                                e[i] = t[i];
                        n.current = null,
                        this.ngOnChanges(t)
                    }
                }
                function GA(n, t, e, i) {
                    const r = this.declaredInputs[e],
                    o = wb(n) || function WA(n, t) {
                        return n[yb] = t
                    }
                    (n, {
                        previous: vi,
                        current: null
                    }),
                    s = o.current || (o.current = {}),
                    a = o.previous,
                    c = a[r];
                    s[r] = new $A(c && c.currentValue, t, a === vi),
                    n[i] = t
                }
                Ft.ngInherit = !0;
                const yb = "__ngSimpleChanges__";
                function wb(n) {
                    return n[yb] || null
                }
                function ht(n) {
                    for (; Array.isArray(n); )
                        n = n[0];
                    return n
                }
                function Kc(n, t) {
                    return ht(t[n])
                }
                function on(n, t) {
                    return ht(t[n.index])
                }
                function Th(n, t) {
                    return n.data[t]
                }
                function vo(n, t) {
                    return n[t]
                }
                function sn(n, t) {
                    const e = t[n];
                    return Wt(e) ? e : e[0]
                }
                function Zc(n) {
                    return 64 == (64 & n[2])
                }
                function $i(n, t) {
                    return null == t ? null : n[t]
                }
                function Cb(n) {
                    n[18] = 0
                }
                function Ah(n, t) {
                    n[5] += t;
                    let e = n,
                    i = n[3];
                    for (; null !== i && (1 === t && 1 === e[5] || -1 === t && 0 === e[5]); )
                        i[5] += t, e = i, i = i[3]
                }
                const J = {
                    lFrame: Ob(null),
                    bindingsEnabled: !0
                };
                function xb() {
                    return J.bindingsEnabled
                }
                function M() {
                    return J.lFrame.lView
                }
                function _e() {
                    return J.lFrame.tView
                }
                function He(n) {
                    return J.lFrame.contextLView = n,
                    n[8]
                }
                function Ue(n) {
                    return J.lFrame.contextLView = null,
                    n
                }
                function Ct() {
                    let n = Eb();
                    for (; null !== n && 64 === n.type; )
                        n = n.parent;
                    return n
                }
                function Eb() {
                    return J.lFrame.currentTNode
                }
                function Qn(n, t) {
                    const e = J.lFrame;
                    e.currentTNode = n,
                    e.isParent = t
                }
                function kh() {
                    return J.lFrame.isParent
                }
                function Ih() {
                    J.lFrame.isParent = !1
                }
                function Nt() {
                    const n = J.lFrame;
                    let t = n.bindingRootIndex;
                    return -1 === t && (t = n.bindingRootIndex = n.tView.bindingStartIndex),
                    t
                }
                function wi() {
                    return J.lFrame.bindingIndex
                }
                function yo() {
                    return J.lFrame.bindingIndex++
                }
                function Ci(n) {
                    const t = J.lFrame,
                    e = t.bindingIndex;
                    return t.bindingIndex = t.bindingIndex + n,
                    e
                }
                function ak(n, t) {
                    const e = J.lFrame;
                    e.bindingIndex = e.bindingRootIndex = n,
                    Oh(t)
                }
                function Oh(n) {
                    J.lFrame.currentDirectiveIndex = n
                }
                function Rh(n) {
                    const t = J.lFrame.currentDirectiveIndex;
                    return -1 === t ? null : n[t]
                }
                function Ab() {
                    return J.lFrame.currentQueryIndex
                }
                function Ph(n) {
                    J.lFrame.currentQueryIndex = n
                }
                function lk(n) {
                    const t = n[1];
                    return 2 === t.type ? t.declTNode : 1 === t.type ? n[6] : null
                }
                function kb(n, t, e) {
                    if (e & W.SkipSelf) {
                        let r = t,
                        o = n;
                        for (; !(r = r.parent, null !== r || e & W.Host || (r = lk(o), null === r || (o = o[15], 10 & r.type))); );
                        if (null === r)
                            return !1;
                        t = r,
                        n = o
                    }
                    const i = J.lFrame = Ib();
                    return i.currentTNode = t,
                    i.lView = n,
                    !0
                }
                function Fh(n) {
                    const t = Ib(),
                    e = n[1];
                    J.lFrame = t,
                    t.currentTNode = e.firstChild,
                    t.lView = n,
                    t.tView = e,
                    t.contextLView = n,
                    t.bindingIndex = e.bindingStartIndex,
                    t.inI18n = !1
                }
                function Ib() {
                    const n = J.lFrame,
                    t = null === n ? null : n.child;
                    return null === t ? Ob(n) : t
                }
                function Ob(n) {
                    const t = {
                        currentTNode: null,
                        isParent: !0,
                        lView: null,
                        tView: null,
                        selectedIndex: -1,
                        contextLView: null,
                        elementDepthCount: 0,
                        currentNamespace: null,
                        currentDirectiveIndex: -1,
                        bindingRootIndex: -1,
                        bindingIndex: -1,
                        currentQueryIndex: 0,
                        parent: n,
                        child: null,
                        inI18n: !1
                    };
                    return null !== n && (n.child = t),
                    t
                }
                function Rb() {
                    const n = J.lFrame;
                    return J.lFrame = n.parent,
                    n.currentTNode = null,
                    n.lView = null,
                    n
                }
                const Pb = Rb;
                function Nh() {
                    const n = Rb();
                    n.isParent = !0,
                    n.tView = null,
                    n.selectedIndex = -1,
                    n.contextLView = null,
                    n.elementDepthCount = 0,
                    n.currentDirectiveIndex = -1,
                    n.currentNamespace = null,
                    n.bindingRootIndex = -1,
                    n.bindingIndex = -1,
                    n.currentQueryIndex = 0
                }
                function Lt() {
                    return J.lFrame.selectedIndex
                }
                function Tr(n) {
                    J.lFrame.selectedIndex = n
                }
                function We() {
                    const n = J.lFrame;
                    return Th(n.tView, n.selectedIndex)
                }
                function Xc() {
                    J.lFrame.currentNamespace = "svg"
                }
                function Qc(n, t) {
                    for (let e = t.directiveStart, i = t.directiveEnd; e < i; e++) {
                        const o = n.data[e].type.prototype, {
                            ngAfterContentInit: s,
                            ngAfterContentChecked: a,
                            ngAfterViewInit: c,
                            ngAfterViewChecked: l,
                            ngOnDestroy: d
                        } = o;
                        s && (n.contentHooks || (n.contentHooks = [])).push(-e, s),
                        a && ((n.contentHooks || (n.contentHooks = [])).push(e, a), (n.contentCheckHooks || (n.contentCheckHooks = [])).push(e, a)),
                        c && (n.viewHooks || (n.viewHooks = [])).push(-e, c),
                        l && ((n.viewHooks || (n.viewHooks = [])).push(e, l), (n.viewCheckHooks || (n.viewCheckHooks = [])).push(e, l)),
                        null != d && (n.destroyHooks || (n.destroyHooks = [])).push(e, d)
                    }
                }
                function Jc(n, t, e) {
                    Fb(n, t, 3, e)
                }
                function el(n, t, e, i) {
                    (3 & n[2]) === e && Fb(n, t, e, i)
                }
                function Vh(n, t) {
                    let e = n[2];
                    (3 & e) === t && (e &= 2047, e += 1, n[2] = e)
                }
                function Fb(n, t, e, i) {
                    const o = i ?? -1,
                    s = t.length - 1;
                    let a = 0;
                    for (let c = void 0 !== i ? 65535 & n[18] : 0; c < s; c++)
                        if ("number" == typeof t[c + 1]) {
                            if (a = t[c], null != i && a >= i)
                                break
                        } else
                            t[c] < 0 && (n[18] += 65536), (a < o || -1 == o) && (gk(n, e, t, c), n[18] = (4294901760 & n[18]) + c + 2), c++
                }
                function gk(n, t, e, i) {
                    const r = e[i] < 0,
                    o = e[i + 1],
                    a = n[r ? -e[i] : e[i]];
                    if (r) {
                        if (n[2] >> 11 < n[18] >> 16 && (3 & n[2]) === t) {
                            n[2] += 2048;
                            try {
                                o.call(a)
                            } finally {}
                        }
                    } else
                        try {
                            o.call(a)
                        } finally {}
                }
                class qs {
                    constructor(t, e, i) {
                        this.factory = t,
                        this.resolving = !1,
                        this.canSeeViewProviders = e,
                        this.injectImpl = i
                    }
                }
                function jh(n, t, e) {
                    let i = 0;
                    for (; i < e.length; ) {
                        const r = e[i];
                        if ("number" == typeof r) {
                            if (0 !== r)
                                break;
                            i++;
                            const o = e[i++],
                            s = e[i++],
                            a = e[i++];
                            n.setAttribute(t, s, a, o)
                        } else {
                            const o = r,
                            s = e[++i];
                            Lb(o) ? n.setProperty(t, o, s) : n.setAttribute(t, o, s),
                            i++
                        }
                    }
                    return i
                }
                function Nb(n) {
                    return 3 === n || 4 === n || 6 === n
                }
                function Lb(n) {
                    return 64 === n.charCodeAt(0)
                }
                function Ks(n, t) {
                    if (null !== t && 0 !== t.length)
                        if (null === n || 0 === n.length)
                            n = t.slice();
                        else {
                            let e = -1;
                            for (let i = 0; i < t.length; i++) {
                                const r = t[i];
                                "number" == typeof r ? e = r : 0 === e || Vb(n, e, r, null, -1 === e || 2 === e ? t[++i] : null)
                            }
                        }
                    return n
                }
                function Vb(n, t, e, i, r) {
                    let o = 0,
                    s = n.length;
                    if (-1 === t)
                        s = -1;
                    else
                        for (; o < n.length; ) {
                            const a = n[o++];
                            if ("number" == typeof a) {
                                if (a === t) {
                                    s = -1;
                                    break
                                }
                                if (a > t) {
                                    s = o - 1;
                                    break
                                }
                            }
                        }
                    for (; o < n.length; ) {
                        const a = n[o];
                        if ("number" == typeof a)
                            break;
                        if (a === e) {
                            if (null === i)
                                return void(null !== r && (n[o + 1] = r));
                            if (i === n[o + 1])
                                return void(n[o + 2] = r)
                        }
                        o++,
                        null !== i && o++,
                        null !== r && o++
                    }
                    -1 !== s && (n.splice(s, 0, t), o = s + 1),
                    n.splice(o++, 0, e),
                    null !== i && n.splice(o++, 0, i),
                    null !== r && n.splice(o++, 0, r)
                }
                function Bb(n) {
                    return -1 !== n
                }
                function wo(n) {
                    return 32767 & n
                }
                function Co(n, t) {
                    let e = function wk(n) {
                        return n >> 16
                    }
                    (n),
                    i = t;
                    for (; e > 0; )
                        i = i[15], e--;
                    return i
                }
                let Hh = !0;
                function tl(n) {
                    const t = Hh;
                    return Hh = n,
                    t
                }
                let Ck = 0;
                const Jn = {};
                function nl(n, t) {
                    const e = $h(n, t);
                    if (-1 !== e)
                        return e;
                    const i = t[1];
                    i.firstCreatePass && (n.injectorIndex = t.length, Uh(i.data, n), Uh(t, null), Uh(i.blueprint, null));
                    const r = il(n, t),
                    o = n.injectorIndex;
                    if (Bb(r)) {
                        const s = wo(r),
                        a = Co(r, t),
                        c = a[1].data;
                        for (let l = 0; l < 8; l++)
                            t[o + l] = a[s + l] | c[s + l]
                    }
                    return t[o + 8] = r,
                    o
                }
                function Uh(n, t) {
                    n.push(0, 0, 0, 0, 0, 0, 0, 0, t)
                }
                function $h(n, t) {
                    return -1 === n.injectorIndex || n.parent && n.parent.injectorIndex === n.injectorIndex || null === t[n.injectorIndex + 8] ? -1 : n.injectorIndex
                }
                function il(n, t) {
                    if (n.parent && -1 !== n.parent.injectorIndex)
                        return n.parent.injectorIndex;
                    let e = 0,
                    i = null,
                    r = t;
                    for (; null !== r; ) {
                        if (i = Yb(r), null === i)
                            return -1;
                        if (e++, r = r[15], -1 !== i.injectorIndex)
                            return i.injectorIndex | e << 16
                    }
                    return -1
                }
                function zh(n, t, e) {
                    !function Dk(n, t, e) {
                        let i;
                        "string" == typeof e ? i = e.charCodeAt(0) || 0 : e.hasOwnProperty(Hs) && (i = e[Hs]),
                        null == i && (i = e[Hs] = Ck++);
                        const r = 255 & i;
                        t.data[n + (r >> 5)] |= 1 << r
                    }
                    (n, t, e)
                }
                function Ub(n, t, e) {
                    if (e & W.Optional || void 0 !== n)
                        return n;
                    Vc()
                }
                function $b(n, t, e, i) {
                    if (e & W.Optional && void 0 === i && (i = null), 0 == (e & (W.Self | W.Host))) {
                        const r = n[9],
                        o = bn(void 0);
                        try {
                            return r ? r.get(t, i, e & W.Optional) : db(t, i, e & W.Optional)
                        } finally {
                            bn(o)
                        }
                    }
                    return Ub(i, 0, e)
                }
                function zb(n, t, e, i = W.Default, r) {
                    if (null !== n) {
                        if (1024 & t[2]) {
                            const s = function Tk(n, t, e, i, r) {
                                let o = n,
                                s = t;
                                for (; null !== o && null !== s && 1024 & s[2] && !(256 & s[2]); ) {
                                    const a = Gb(o, s, e, i | W.Self, Jn);
                                    if (a !== Jn)
                                        return a;
                                    let c = o.parent;
                                    if (!c) {
                                        const l = s[21];
                                        if (l) {
                                            const d = l.get(e, Jn, i);
                                            if (d !== Jn)
                                                return d
                                        }
                                        c = Yb(s),
                                        s = s[15]
                                    }
                                    o = c
                                }
                                return r
                            }
                            (n, t, e, i, Jn);
                            if (s !== Jn)
                                return s
                        }
                        const o = Gb(n, t, e, i, Jn);
                        if (o !== Jn)
                            return o
                    }
                    return $b(t, e, i, r)
                }
                function Gb(n, t, e, i, r) {
                    const o = function Sk(n) {
                        if ("string" == typeof n)
                            return n.charCodeAt(0) || 0;
                        const t = n.hasOwnProperty(Hs) ? n[Hs] : void 0;
                        return "number" == typeof t ? t >= 0 ? 255 & t : Mk : t
                    }
                    (e);
                    if ("function" == typeof o) {
                        if (!kb(t, n, i))
                            return i & W.Host ? Ub(r, 0, i) : $b(t, e, i, r);
                        try {
                            const s = o(i);
                            if (null != s || i & W.Optional)
                                return s;
                            Vc()
                        } finally {
                            Pb()
                        }
                    } else if ("number" == typeof o) {
                        let s = null,
                        a = $h(n, t),
                        c = -1,
                        l = i & W.Host ? t[16][6] : null;
                        for ((-1 === a || i & W.SkipSelf) && (c = -1 === a ? il(n, t) : t[a + 8], -1 !== c && qb(i, !1) ? (s = t[1], a = wo(c), t = Co(c, t)) : a = -1); -1 !== a; ) {
                            const d = t[1];
                            if (Wb(o, a, d.data)) {
                                const u = Ek(a, t, e, s, i, l);
                                if (u !== Jn)
                                    return u
                            }
                            c = t[a + 8],
                            -1 !== c && qb(i, t[1].data[a + 8] === l) && Wb(o, a, t) ? (s = d, a = wo(c), t = Co(c, t)) : a = -1
                        }
                    }
                    return r
                }
                function Ek(n, t, e, i, r, o) {
                    const s = t[1],
                    a = s.data[n + 8],
                    d = rl(a, s, e, null == i ? qc(a) && Hh : i != s && 0 != (3 & a.type), r & W.Host && o === a);
                    return null !== d ? Do(t, s, d, a) : Jn
                }
                function rl(n, t, e, i, r) {
                    const o = n.providerIndexes,
                    s = t.data,
                    a = 1048575 & o,
                    c = n.directiveStart,
                    d = o >> 20,
                    h = r ? a + d : n.directiveEnd;
                    for (let f = i ? a : a + d; f < h; f++) {
                        const m = s[f];
                        if (f < c && e === m || f >= c && m.type === e)
                            return f
                    }
                    if (r) {
                        const f = s[c];
                        if (f && Fn(f) && f.type === e)
                            return c
                    }
                    return null
                }
                function Do(n, t, e, i) {
                    let r = n[e];
                    const o = t.data;
                    if (function _k(n) {
                        return n instanceof qs
                    }
                        (r)) {
                        const s = r;
                        s.resolving && function _A(n, t) {
                            const e = t ? `. Dependency path: ${t.join(" > ")} > ${n}` : "";
                            throw new E(-200, `Circular dependency in DI detected for ${n}${e}`)
                        }
                        (function Se(n) {
                            return "function" == typeof n ? n.name || n.toString() : "object" == typeof n && null != n && "function" == typeof n.type ? n.type.name || n.type.toString() : ee(n)
                        }
                            (o[e]));
                        const a = tl(s.canSeeViewProviders);
                        s.resolving = !0;
                        const c = s.injectImpl ? bn(s.injectImpl) : null;
                        kb(n, i, W.Default);
                        try {
                            r = n[e] = s.factory(void 0, o, n, i),
                            t.firstCreatePass && e >= i.directiveStart && function mk(n, t, e) {
                                const {
                                    ngOnChanges: i,
                                    ngOnInit: r,
                                    ngDoCheck: o
                                } = t.type.prototype;
                                if (i) {
                                    const s = vb(t);
                                    (e.preOrderHooks || (e.preOrderHooks = [])).push(n, s),
                                    (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(n, s)
                                }
                                r && (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - n, r),
                                o && ((e.preOrderHooks || (e.preOrderHooks = [])).push(n, o), (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(n, o))
                            }
                            (e, o[e], t)
                        } finally {
                            null !== c && bn(c),
                            tl(a),
                            s.resolving = !1,
                            Pb()
                        }
                    }
                    return r
                }
                function Wb(n, t, e) {
                    return !!(e[t + (n >> 5)] & 1 << n)
                }
                function qb(n, t) {
                    return !(n & W.Self || n & W.Host && t)
                }
                class xo {
                    constructor(t, e) {
                        this._tNode = t,
                        this._lView = e
                    }
                    get(t, e, i) {
                        return zb(this._tNode, this._lView, t, Uc(i), e)
                    }
                }
                function Mk() {
                    return new xo(Ct(), M())
                }
                function Ze(n) {
                    return Ui(() => {
                        const t = n.prototype.constructor,
                        e = t[yi] || Gh(t),
                        i = Object.prototype;
                        let r = Object.getPrototypeOf(n.prototype).constructor;
                        for (; r && r !== i; ) {
                            const o = r[yi] || Gh(r);
                            if (o && o !== e)
                                return o;
                            r = Object.getPrototypeOf(r)
                        }
                        return o => new o
                    })
                }
                function Gh(n) {
                    return fh(n) ? () => {
                        const t = Gh(G(n));
                        return t && t()
                    }
                     : Mr(n)
                }
                function Yb(n) {
                    const t = n[1],
                    e = t.type;
                    return 2 === e ? t.declTNode : 1 === e ? n[6] : null
                }
                function Gi(n) {
                    return function xk(n, t) {
                        if ("class" === t)
                            return n.classes;
                        if ("style" === t)
                            return n.styles;
                        const e = n.attrs;
                        if (e) {
                            const i = e.length;
                            let r = 0;
                            for (; r < i; ) {
                                const o = e[r];
                                if (Nb(o))
                                    break;
                                if (0 === o)
                                    r += 2;
                                else if ("number" == typeof o)
                                    for (r++; r < i && "string" == typeof e[r]; )
                                        r++;
                                else {
                                    if (o === t)
                                        return e[r + 1];
                                    r += 2
                                }
                            }
                        }
                        return null
                    }
                    (Ct(), n)
                }
                const So = "__parameters__";
                function To(n, t, e) {
                    return Ui(() => {
                        const i = function Wh(n) {
                            return function (...e) {
                                if (n) {
                                    const i = n(...e);
                                    for (const r in i)
                                        this[r] = i[r]
                                }
                            }
                        }
                        (t);
                        function r(...o) {
                            if (this instanceof r)
                                return i.apply(this, o), this;
                            const s = new r(...o);
                            return a.annotation = s,
                            a;
                            function a(c, l, d) {
                                const u = c.hasOwnProperty(So) ? c[So] : Object.defineProperty(c, So, {
                                    value: []
                                })[So];
                                for (; u.length <= d; )
                                    u.push(null);
                                return (u[d] = u[d] || []).push(s),
                                c
                            }
                        }
                        return e && (r.prototype = Object.create(e.prototype)),
                        r.prototype.ngMetadataName = n,
                        r.annotationCls = r,
                        r
                    })
                }
                class T {
                    constructor(t, e) {
                        this._desc = t,
                        this.ngMetadataName = "InjectionToken",
                        this. \u0275prov = void 0,
                        "number" == typeof e ? this.__NG_ELEMENT_ID__ = e : void 0 !== e && (this. \u0275prov = k({
                                    token: this,
                                    providedIn: e.providedIn || "root",
                                    factory: e.factory
                                }))
                    }
                    get multi() {
                        return this
                    }
                    toString() {
                        return `InjectionToken ${this._desc}`
                    }
                }
                function an(n, t) {
                    void 0 === t && (t = n);
                    for (let e = 0; e < n.length; e++) {
                        let i = n[e];
                        Array.isArray(i) ? (t === n && (t = n.slice(0, e)), an(i, t)) : t !== n && t.push(i)
                    }
                    return t
                }
                function Ar(n, t) {
                    n.forEach(e => Array.isArray(e) ? Ar(e, t) : t(e))
                }
                function Zb(n, t, e) {
                    t >= n.length ? n.push(e) : n.splice(t, 0, e)
                }
                function ol(n, t) {
                    return t >= n.length - 1 ? n.pop() : n.splice(t, 1)[0]
                }
                function Qs(n, t) {
                    const e = [];
                    for (let i = 0; i < n; i++)
                        e.push(t);
                    return e
                }
                function cn(n, t, e) {
                    let i = Ao(n, t);
                    return i >= 0 ? n[1 | i] = e : (i = ~i, function Ok(n, t, e, i) {
                        let r = n.length;
                        if (r == t)
                            n.push(e, i);
                        else if (1 === r)
                            n.push(i, n[0]), n[0] = e;
                        else {
                            for (r--, n.push(n[r - 1], n[r]); r > t; )
                                n[r] = n[r - 2], r--;
                            n[t] = e,
                            n[t + 1] = i
                        }
                    }
                            (n, i, t, e)),
                    i
                }
                function Yh(n, t) {
                    const e = Ao(n, t);
                    if (e >= 0)
                        return n[1 | e]
                }
                function Ao(n, t) {
                    return function Jb(n, t, e) {
                        let i = 0,
                        r = n.length >> e;
                        for (; r !== i; ) {
                            const o = i + (r - i >> 1),
                            s = n[o << e];
                            if (t === s)
                                return o << e;
                            s > t ? r = o : i = o + 1
                        }
                        return ~(r << e)
                    }
                    (n, t, 1)
                }
                const Wi = js(To("Optional"), 8),
                ko = js(To("SkipSelf"), 4);
                var qt = (() => ((qt = qt || {})[qt.Important = 1] = "Important", qt[qt.DashCase = 2] = "DashCase", qt))();
                const ef = new Map;
                let eI = 0;
                const nf = "__ngContext__";
                function At(n, t) {
                    Wt(t) ? (n[nf] = t[20], function nI(n) {
                        ef.set(n[20], n)
                    }
                        (t)) : n[nf] = t
                }
                function sf(n, t) {
                    return undefined(n, t)
                }
                function na(n) {
                    const t = n[3];
                    return Pn(t) ? t[3] : t
                }
                function af(n) {
                    return yv(n[13])
                }
                function cf(n) {
                    return yv(n[4])
                }
                function yv(n) {
                    for (; null !== n && !Pn(n); )
                        n = n[4];
                    return n
                }
                function Oo(n, t, e, i, r) {
                    if (null != i) {
                        let o,
                        s = !1;
                        Pn(i) ? o = i : Wt(i) && (s = !0, i = i[0]);
                        const a = ht(i);
                        0 === n && null !== e ? null == r ? Sv(t, e, a) : kr(t, e, a, r || null, !0) : 1 === n && null !== e ? kr(t, e, a, r || null, !0) : 2 === n ? function mf(n, t, e) {
                            const i = ll(n, t);
                            i && function DI(n, t, e, i) {
                                n.removeChild(t, e, i)
                            }
                            (n, i, t, e)
                        }
                        (t, a, s) : 3 === n && t.destroyNode(a),
                        null != o && function SI(n, t, e, i, r) {
                            const o = e[7];
                            o !== ht(e) && Oo(t, n, i, o, r);
                            for (let a = 10; a < e.length; a++) {
                                const c = e[a];
                                ia(c[1], c, n, t, i, o)
                            }
                        }
                        (t, n, o, e, r)
                    }
                }
                function df(n, t, e) {
                    return n.createElement(t, e)
                }
                function Cv(n, t) {
                    const e = n[9],
                    i = e.indexOf(t),
                    r = t[3];
                    512 & t[2] && (t[2] &= -513, Ah(r, -1)),
                    e.splice(i, 1)
                }
                function uf(n, t) {
                    if (n.length <= 10)
                        return;
                    const e = 10 + t,
                    i = n[e];
                    if (i) {
                        const r = i[17];
                        null !== r && r !== n && Cv(r, i),
                        t > 0 && (n[e - 1][4] = i[4]);
                        const o = ol(n, 10 + t);
                        !function mI(n, t) {
                            ia(n, t, t[11], 2, null, null),
                            t[0] = null,
                            t[6] = null
                        }
                        (i[1], i);
                        const s = o[19];
                        null !== s && s.detachView(o[1]),
                        i[3] = null,
                        i[4] = null,
                        i[2] &= -65
                    }
                    return i
                }
                function Dv(n, t) {
                    if (!(128 & t[2])) {
                        const e = t[11];
                        e.destroyNode && ia(n, t, e, 3, null, null),
                        function bI(n) {
                            let t = n[13];
                            if (!t)
                                return hf(n[1], n);
                            for (; t; ) {
                                let e = null;
                                if (Wt(t))
                                    e = t[13];
                                else {
                                    const i = t[10];
                                    i && (e = i)
                                }
                                if (!e) {
                                    for (; t && !t[4] && t !== n; )
                                        Wt(t) && hf(t[1], t), t = t[3];
                                    null === t && (t = n),
                                    Wt(t) && hf(t[1], t),
                                    e = t && t[4]
                                }
                                t = e
                            }
                        }
                        (t)
                    }
                }
                function hf(n, t) {
                    if (!(128 & t[2])) {
                        t[2] &= -65,
                        t[2] |= 128,
                        function CI(n, t) {
                            let e;
                            if (null != n && null != (e = n.destroyHooks))
                                for (let i = 0; i < e.length; i += 2) {
                                    const r = t[e[i]];
                                    if (!(r instanceof qs)) {
                                        const o = e[i + 1];
                                        if (Array.isArray(o))
                                            for (let s = 0; s < o.length; s += 2) {
                                                const a = r[o[s]],
                                                c = o[s + 1];
                                                try {
                                                    c.call(a)
                                                } finally {}
                                            }
                                        else
                                            try {
                                                o.call(r)
                                            } finally {}
                                    }
                                }
                        }
                        (n, t),
                        function wI(n, t) {
                            const e = n.cleanup,
                            i = t[7];
                            let r = -1;
                            if (null !== e)
                                for (let o = 0; o < e.length - 1; o += 2)
                                    if ("string" == typeof e[o]) {
                                        const s = e[o + 3];
                                        s >= 0 ? i[r = s]() : i[r = -s].unsubscribe(),
                                        o += 2
                                    } else {
                                        const s = i[r = e[o + 1]];
                                        e[o].call(s)
                                    }
                            if (null !== i) {
                                for (let o = r + 1; o < i.length; o++)
                                    (0, i[o])();
                                t[7] = null
                            }
                        }
                        (n, t),
                        1 === t[1].type && t[11].destroy();
                        const e = t[17];
                        if (null !== e && Pn(t[3])) {
                            e !== t[3] && Cv(e, t);
                            const i = t[19];
                            null !== i && i.detachView(n)
                        }
                        !function iI(n) {
                            ef.delete(n[20])
                        }
                        (t)
                    }
                }
                function xv(n, t, e) {
                    return function Ev(n, t, e) {
                        let i = t;
                        for (; null !== i && 40 & i.type; )
                            i = (t = i).parent;
                        if (null === i)
                            return e[0]; {
                            const {
                                componentOffset: r
                            } = i;
                            if (r > -1) {
                                const {
                                    encapsulation: o
                                } = n.data[i.directiveStart + r];
                                if (o === On.None || o === On.Emulated)
                                    return null
                            }
                            return on(i, e)
                        }
                    }
                    (n, t.parent, e)
                }
                function kr(n, t, e, i, r) {
                    n.insertBefore(t, e, i, r)
                }
                function Sv(n, t, e) {
                    n.appendChild(t, e)
                }
                function Mv(n, t, e, i, r) {
                    null !== i ? kr(n, t, e, i, r) : Sv(n, t, e)
                }
                function ll(n, t) {
                    return n.parentNode(t)
                }
                function Tv(n, t, e) {
                    return kv(n, t, e)
                }
                let hl,
                bf,
                kv = function Av(n, t, e) {
                    return 40 & n.type ? on(n, e) : null
                };
                function dl(n, t, e, i) {
                    const r = xv(n, i, t),
                    o = t[11],
                    a = Tv(i.parent || t[6], i, t);
                    if (null != r)
                        if (Array.isArray(e))
                            for (let c = 0; c < e.length; c++)
                                Mv(o, r, e[c], a, !1);
                        else
                            Mv(o, r, e, a, !1)
                }
                function ul(n, t) {
                    if (null !== t) {
                        const e = t.type;
                        if (3 & e)
                            return on(t, n);
                        if (4 & e)
                            return pf(-1, n[t.index]);
                        if (8 & e) {
                            const i = t.child;
                            if (null !== i)
                                return ul(n, i); {
                                const r = n[t.index];
                                return Pn(r) ? pf(-1, r) : ht(r)
                            }
                        }
                        if (32 & e)
                            return sf(t, n)() || ht(n[t.index]); {
                            const i = Ov(n, t);
                            return null !== i ? Array.isArray(i) ? i[0] : ul(na(n[16]), i) : ul(n, t.next)
                        }
                    }
                    return null
                }
                function Ov(n, t) {
                    return null !== t ? n[16][6].projection[t.projection] : null
                }
                function pf(n, t) {
                    const e = 10 + n + 1;
                    if (e < t.length) {
                        const i = t[e],
                        r = i[1].firstChild;
                        if (null !== r)
                            return ul(i, r)
                    }
                    return t[7]
                }
                function gf(n, t, e, i, r, o, s) {
                    for (; null != e; ) {
                        const a = i[e.index],
                        c = e.type;
                        if (s && 0 === t && (a && At(ht(a), i), e.flags |= 2), 32 != (32 & e.flags))
                            if (8 & c)
                                gf(n, t, e.child, i, r, o, !1), Oo(t, n, r, a, o);
                            else if (32 & c) {
                                const l = sf(e, i);
                                let d;
                                for (; d = l(); )
                                    Oo(t, n, r, d, o);
                                Oo(t, n, r, a, o)
                            } else
                                16 & c ? Rv(n, t, i, e, r, o) : Oo(t, n, r, a, o);
                        e = s ? e.projectionNext : e.next
                    }
                }
                function ia(n, t, e, i, r, o) {
                    gf(e, i, n.firstChild, t, r, o, !1)
                }
                function Rv(n, t, e, i, r, o) {
                    const s = e[16],
                    c = s[6].projection[i.projection];
                    if (Array.isArray(c))
                        for (let l = 0; l < c.length; l++)
                            Oo(t, n, r, c[l], o);
                    else
                        gf(n, t, c, s[3], r, o, !0)
                }
                function Pv(n, t, e) {
                    "" === e ? n.removeAttribute(t, "class") : n.setAttribute(t, "class", e)
                }
                function Fv(n, t, e) {
                    const {
                        mergedAttrs: i,
                        classes: r,
                        styles: o
                    } = e;
                    null !== i && jh(n, t, i),
                    null !== r && Pv(n, t, r),
                    null !== o && function TI(n, t, e) {
                        n.setAttribute(t, "style", e)
                    }
                    (n, t, o)
                }
                function Ir(n) {
                    return function _f() {
                        if (void 0 === hl && (hl = null, Re.trustedTypes))
                            try {
                                hl = Re.trustedTypes.createPolicy("angular", {
                                    createHTML: n => n,
                                    createScript: n => n,
                                    createScriptURL: n => n
                                })
                            } catch {}
                        return hl
                    }
                    ()?.createHTML(n) || n
                }
                class Or {
                    constructor(t) {
                        this.changingThisBreaksApplicationSecurity = t
                    }
                    toString() {
                        return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Nc})`
                    }
                }
                class RI extends Or {
                    getTypeName() {
                        return "HTML"
                    }
                }
                class PI extends Or {
                    getTypeName() {
                        return "Style"
                    }
                }
                class FI extends Or {
                    getTypeName() {
                        return "Script"
                    }
                }
                class NI extends Or {
                    getTypeName() {
                        return "URL"
                    }
                }
                class LI extends Or {
                    getTypeName() {
                        return "ResourceURL"
                    }
                }
                function ln(n) {
                    return n instanceof Or ? n.changingThisBreaksApplicationSecurity : n
                }
                function ei(n, t) {
                    const e = function VI(n) {
                        return n instanceof Or && n.getTypeName() || null
                    }
                    (n);
                    if (null != e && e !== t) {
                        if ("ResourceURL" === e && "URL" === t)
                            return !0;
                        throw new Error(`Required a safe ${t}, got a ${e} (see ${Nc})`)
                    }
                    return e === t
                }
                class zI {
                    constructor(t) {
                        this.inertDocumentHelper = t
                    }
                    getInertBodyElement(t) {
                        t = "<body><remove></remove>" + t;
                        try {
                            const e = (new window.DOMParser).parseFromString(Ir(t), "text/html").body;
                            return null === e ? this.inertDocumentHelper.getInertBodyElement(t) : (e.removeChild(e.firstChild), e)
                        } catch {
                            return null
                        }
                    }
                }
                class GI {
                    constructor(t) {
                        if (this.defaultDoc = t, this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"), null == this.inertDocument.body) {
                            const e = this.inertDocument.createElement("html");
                            this.inertDocument.appendChild(e);
                            const i = this.inertDocument.createElement("body");
                            e.appendChild(i)
                        }
                    }
                    getInertBodyElement(t) {
                        const e = this.inertDocument.createElement("template");
                        if ("content" in e)
                            return e.innerHTML = Ir(t), e;
                        const i = this.inertDocument.createElement("body");
                        return i.innerHTML = Ir(t),
                        this.defaultDoc.documentMode && this.stripCustomNsAttrs(i),
                        i
                    }
                    stripCustomNsAttrs(t) {
                        const e = t.attributes;
                        for (let r = e.length - 1; 0 < r; r--) {
                            const s = e.item(r).name;
                            ("xmlns:ns1" === s || 0 === s.indexOf("ns1:")) && t.removeAttribute(s)
                        }
                        let i = t.firstChild;
                        for (; i; )
                            i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i), i = i.nextSibling
                    }
                }
                const qI = /^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;
                function pl(n) {
                    return (n = String(n)).match(qI) ? n : "unsafe:" + n
                }
                function Di(n) {
                    const t = {};
                    for (const e of n.split(","))
                        t[e] = !0;
                    return t
                }
                function ra(...n) {
                    const t = {};
                    for (const e of n)
                        for (const i in e)
                            e.hasOwnProperty(i) && (t[i] = !0);
                    return t
                }
                const Hv = Di("area,br,col,hr,img,wbr"),
                Uv = Di("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
                $v = Di("rp,rt"),
                yf = ra(Hv, ra(Uv, Di("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), ra($v, Di("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), ra($v, Uv)),
                wf = Di("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
                zv = ra(wf, Di("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), Di("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),
                YI = Di("script,style,template");
                class KI {
                    constructor() {
                        this.sanitizedSomething = !1,
                        this.buf = []
                    }
                    sanitizeChildren(t) {
                        let e = t.firstChild,
                        i = !0;
                        for (; e; )
                            if (e.nodeType === Node.ELEMENT_NODE ? i = this.startElement(e) : e.nodeType === Node.TEXT_NODE ? this.chars(e.nodeValue) : this.sanitizedSomething = !0, i && e.firstChild)
                                e = e.firstChild;
                            else
                                for (; e; ) {
                                    e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                                    let r = this.checkClobberedElement(e, e.nextSibling);
                                    if (r) {
                                        e = r;
                                        break
                                    }
                                    e = this.checkClobberedElement(e, e.parentNode)
                                }
                        return this.buf.join("")
                    }
                    startElement(t) {
                        const e = t.nodeName.toLowerCase();
                        if (!yf.hasOwnProperty(e))
                            return this.sanitizedSomething = !0, !YI.hasOwnProperty(e);
                        this.buf.push("<"),
                        this.buf.push(e);
                        const i = t.attributes;
                        for (let r = 0; r < i.length; r++) {
                            const o = i.item(r),
                            s = o.name,
                            a = s.toLowerCase();
                            if (!zv.hasOwnProperty(a)) {
                                this.sanitizedSomething = !0;
                                continue
                            }
                            let c = o.value;
                            wf[a] && (c = pl(c)),
                            this.buf.push(" ", s, '="', Gv(c), '"')
                        }
                        return this.buf.push(">"),
                        !0
                    }
                    endElement(t) {
                        const e = t.nodeName.toLowerCase();
                        yf.hasOwnProperty(e) && !Hv.hasOwnProperty(e) && (this.buf.push("</"), this.buf.push(e), this.buf.push(">"))
                    }
                    chars(t) {
                        this.buf.push(Gv(t))
                    }
                    checkClobberedElement(t, e) {
                        if (e && (t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY)
                            throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);
                        return e
                    }
                }
                const ZI = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                XI = /([^\#-~ |!])/g;
                function Gv(n) {
                    return n.replace(/&/g, "&amp;").replace(ZI, function (t) {
                        return "&#" + (1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320) + 65536) + ";"
                    }).replace(XI, function (t) {
                        return "&#" + t.charCodeAt(0) + ";"
                    }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
                }
                let ml;
                function Wv(n, t) {
                    let e = null;
                    try {
                        ml = ml || function jv(n) {
                            const t = new GI(n);
                            return function WI() {
                                try {
                                    return !!(new window.DOMParser).parseFromString(Ir(""), "text/html")
                                } catch {
                                    return !1
                                }
                            }
                            () ? new zI(t) : t
                        }
                        (n);
                        let i = t ? String(t) : "";
                        e = ml.getInertBodyElement(i);
                        let r = 5,
                        o = i;
                        do {
                            if (0 === r)
                                throw new Error("Failed to sanitize html because the input is unstable");
                            r--,
                            i = o,
                            o = e.innerHTML,
                            e = ml.getInertBodyElement(i)
                        } while (i !== o);
                        return Ir((new KI).sanitizeChildren(Cf(e) || e))
                    } finally {
                        if (e) {
                            const i = Cf(e) || e;
                            for (; i.firstChild; )
                                i.removeChild(i.firstChild)
                        }
                    }
                }
                function Cf(n) {
                    return "content" in n && function QI(n) {
                        return n.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === n.nodeName
                    }
                    (n) ? n.content : null
                }
                var xe = (() => ((xe = xe || {})[xe.NONE = 0] = "NONE", xe[xe.HTML = 1] = "HTML", xe[xe.STYLE = 2] = "STYLE", xe[xe.SCRIPT = 3] = "SCRIPT", xe[xe.URL = 4] = "URL", xe[xe.RESOURCE_URL = 5] = "RESOURCE_URL", xe))();
                function wn(n) {
                    const t = function oa() {
                        const n = M();
                        return n && n[12]
                    }
                    ();
                    return t ? t.sanitize(xe.URL, n) || "" : ei(n, "URL") ? ln(n) : pl(ee(n))
                }
                const gl = new T("ENVIRONMENT_INITIALIZER"),
                Kv = new T("INJECTOR", -1),
                Zv = new T("INJECTOR_DEF_TYPES");
                class Xv {
                    get(t, e = Vs) {
                        if (e === Vs) {
                            const i = new Error(`NullInjectorError: No provider for ${Ie(t)}!`);
                            throw i.name = "NullInjectorError",
                            i
                        }
                        return e
                    }
                }
                function a1(...n) {
                    return {
                         \u0275providers: Qv(0, n),
                         \u0275fromNgModule: !0
                    }
                }
                function Qv(n, ...t) {
                    const e = [],
                    i = new Set;
                    let r;
                    return Ar(t, o => {
                        const s = o;
                        Df(s, e, [], i) && (r || (r = []), r.push(s))
                    }),
                    void 0 !== r && Jv(r, e),
                    e
                }
                function Jv(n, t) {
                    for (let e = 0; e < n.length; e++) {
                        const {
                            providers: r
                        } = n[e];
                        xf(r, o => {
                            t.push(o)
                        })
                    }
                }
                function Df(n, t, e, i) {
                    if (!(n = G(n)))
                        return !1;
                    let r = null,
                    o = cb(n);
                    const s = !o && Te(n);
                    if (o || s) {
                        if (s && !s.standalone)
                            return !1;
                        r = n
                    } else {
                        const c = n.ngModule;
                        if (o = cb(c), !o)
                            return !1;
                        r = c
                    }
                    const a = i.has(r);
                    if (s) {
                        if (a)
                            return !1;
                        if (i.add(r), s.dependencies) {
                            const c = "function" == typeof s.dependencies ? s.dependencies() : s.dependencies;
                            for (const l of c)
                                Df(l, t, e, i)
                        }
                    } else {
                        if (!o)
                            return !1; {
                            if (null != o.imports && !a) {
                                let l;
                                i.add(r);
                                try {
                                    Ar(o.imports, d => {
                                        Df(d, t, e, i) && (l || (l = []), l.push(d))
                                    })
                                } finally {}
                                void 0 !== l && Jv(l, t)
                            }
                            if (!a) {
                                const l = Mr(r) || (() => new r);
                                t.push({
                                    provide: r,
                                    useFactory: l,
                                    deps: De
                                }, {
                                    provide: Zv,
                                    useValue: r,
                                    multi: !0
                                }, {
                                    provide: gl,
                                    useValue: () => v(r),
                                    multi: !0
                                })
                            }
                            const c = o.providers;
                            null == c || a || xf(c, d => {
                                t.push(d)
                            })
                        }
                    }
                    return r !== n && void 0 !== n.providers
                }
                function xf(n, t) {
                    for (let e of n)
                        ph(e) && (e = e. \u0275providers), Array.isArray(e) ? xf(e, t) : t(e)
                }
                const c1 = ke({
                    provide: String,
                    useValue: ke
                });
                function Ef(n) {
                    return null !== n && "object" == typeof n && c1 in n
                }
                function Rr(n) {
                    return "function" == typeof n
                }
                const Sf = new T("Set Injector scope."),
                _l = {},
                d1 = {};
                let Mf;
                function bl() {
                    return void 0 === Mf && (Mf = new Xv),
                    Mf
                }
                class xi {}
                class ny extends xi {
                    constructor(t, e, i, r) {
                        super(),
                        this.parent = e,
                        this.source = i,
                        this.scopes = r,
                        this.records = new Map,
                        this._ngOnDestroyHooks = new Set,
                        this._onDestroyHooks = [],
                        this._destroyed = !1,
                        Af(t, s => this.processProvider(s)),
                        this.records.set(Kv, Ro(void 0, this)),
                        r.has("environment") && this.records.set(xi, Ro(void 0, this));
                        const o = this.records.get(Sf);
                        null != o && "string" == typeof o.value && this.scopes.add(o.value),
                        this.injectorDefTypes = new Set(this.get(Zv.multi, De, W.Self))
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                    destroy() {
                        this.assertNotDestroyed(),
                        this._destroyed = !0;
                        try {
                            for (const t of this._ngOnDestroyHooks)
                                t.ngOnDestroy();
                            for (const t of this._onDestroyHooks)
                                t()
                        } finally {
                            this.records.clear(),
                            this._ngOnDestroyHooks.clear(),
                            this.injectorDefTypes.clear(),
                            this._onDestroyHooks.length = 0
                        }
                    }
                    onDestroy(t) {
                        this._onDestroyHooks.push(t)
                    }
                    runInContext(t) {
                        this.assertNotDestroyed();
                        const e = po(this),
                        i = bn(void 0);
                        try {
                            return t()
                        } finally {
                            po(e),
                            bn(i)
                        }
                    }
                    get(t, e = Vs, i = W.Default) {
                        this.assertNotDestroyed(),
                        i = Uc(i);
                        const r = po(this),
                        o = bn(void 0);
                        try {
                            if (!(i & W.SkipSelf)) {
                                let a = this.records.get(t);
                                if (void 0 === a) {
                                    const c = function m1(n) {
                                        return "function" == typeof n || "object" == typeof n && n instanceof T
                                    }
                                    (t) && Bc(t);
                                    a = c && this.injectableDefInScope(c) ? Ro(Tf(t), _l) : null,
                                    this.records.set(t, a)
                                }
                                if (null != a)
                                    return this.hydrate(t, a)
                            }
                            return (i & W.Self ? bl() : this.parent).get(t, e = i & W.Optional && e === Vs ? null : e)
                        } catch (s) {
                            if ("NullInjectorError" === s.name) {
                                if ((s[Hc] = s[Hc] || []).unshift(Ie(t)), r)
                                    throw s;
                                return function OA(n, t, e, i) {
                                    const r = n[Hc];
                                    throw t[ub] && r.unshift(t[ub]),
                                    n.message = function RA(n, t, e, i = null) {
                                        n = n && "\n" === n.charAt(0) && "\u0275" == n.charAt(1) ? n.slice(2) : n;
                                        let r = Ie(t);
                                        if (Array.isArray(t))
                                            r = t.map(Ie).join(" -> ");
                                        else if ("object" == typeof t) {
                                            let o = [];
                                            for (let s in t)
                                                if (t.hasOwnProperty(s)) {
                                                    let a = t[s];
                                                    o.push(s + ":" + ("string" == typeof a ? JSON.stringify(a) : Ie(a)))
                                                }
                                            r = `{${o.join(", ")}}`
                                        }
                                        return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${n.replace(TA, "\n  ")}`
                                    }
                                    ("\n" + n.message, r, e, i),
                                    n.ngTokenPath = r,
                                    n[Hc] = null,
                                    n
                                }
                                (s, t, "R3InjectorError", this.source)
                            }
                            throw s
                        } finally {
                            bn(o),
                            po(r)
                        }
                    }
                    resolveInjectorInitializers() {
                        const t = po(this),
                        e = bn(void 0);
                        try {
                            const i = this.get(gl.multi, De, W.Self);
                            for (const r of i)
                                r()
                        } finally {
                            po(t),
                            bn(e)
                        }
                    }
                    toString() {
                        const t = [],
                        e = this.records;
                        for (const i of e.keys())
                            t.push(Ie(i));
                        return `R3Injector[${t.join(", ")}]`
                    }
                    assertNotDestroyed() {
                        if (this._destroyed)
                            throw new E(205, !1)
                    }
                    processProvider(t) {
                        let e = Rr(t = G(t)) ? t : G(t && t.provide);
                        const i = function h1(n) {
                            return Ef(n) ? Ro(void 0, n.useValue) : Ro(iy(n), _l)
                        }
                        (t);
                        if (Rr(t) || !0 !== t.multi)
                            this.records.get(e);
                        else {
                            let r = this.records.get(e);
                            r || (r = Ro(void 0, _l, !0), r.factory = () => bh(r.multi), this.records.set(e, r)),
                            e = t,
                            r.multi.push(t)
                        }
                        this.records.set(e, i)
                    }
                    hydrate(t, e) {
                        return e.value === _l && (e.value = d1, e.value = e.factory()),
                        "object" == typeof e.value && e.value && function p1(n) {
                            return null !== n && "object" == typeof n && "function" == typeof n.ngOnDestroy
                        }
                        (e.value) && this._ngOnDestroyHooks.add(e.value),
                        e.value
                    }
                    injectableDefInScope(t) {
                        if (!t.providedIn)
                            return !1;
                        const e = G(t.providedIn);
                        return "string" == typeof e ? "any" === e || this.scopes.has(e) : this.injectorDefTypes.has(e)
                    }
                }
                function Tf(n) {
                    const t = Bc(n),
                    e = null !== t ? t.factory : Mr(n);
                    if (null !== e)
                        return e;
                    if (n instanceof T)
                        throw new E(204, !1);
                    if (n instanceof Function)
                        return function u1(n) {
                            const t = n.length;
                            if (t > 0)
                                throw Qs(t, "?"), new E(204, !1);
                            const e = function DA(n) {
                                const t = n && (n[jc] || n[lb]);
                                if (t) {
                                    const e = function xA(n) {
                                        if (n.hasOwnProperty("name"))
                                            return n.name;
                                        const t = ("" + n).match(/^function\s*([^\s(]+)/);
                                        return null === t ? "" : t[1]
                                    }
                                    (n);
                                    return console.warn(`DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`),
                                    t
                                }
                                return null
                            }
                            (n);
                            return null !== e ? () => e.factory(n) : () => new n
                        }
                    (n);
                    throw new E(204, !1)
                }
                function iy(n, t, e) {
                    let i;
                    if (Rr(n)) {
                        const r = G(n);
                        return Mr(r) || Tf(r)
                    }
                    if (Ef(n))
                        i = () => G(n.useValue);
                    else if (function ty(n) {
                        return !(!n || !n.useFactory)
                    }
                        (n))
                        i = () => n.useFactory(...bh(n.deps || []));
                    else if (function ey(n) {
                        return !(!n || !n.useExisting)
                    }
                        (n))
                        i = () => v(G(n.useExisting));
                    else {
                        const r = G(n && (n.useClass || n.provide));
                        if (!function f1(n) {
                            return !!n.deps
                        }
                            (n))
                            return Mr(r) || Tf(r);
                        i = () => new r(...bh(n.deps))
                    }
                    return i
                }
                function Ro(n, t, e = !1) {
                    return {
                        factory: n,
                        value: t,
                        multi: e ? [] : void 0
                    }
                }
                function Af(n, t) {
                    for (const e of n)
                        Array.isArray(e) ? Af(e, t) : e && ph(e) ? Af(e. \u0275providers, t) : t(e)
                }
                class g1 {}
                class ry {}
                class b1 {
                    resolveComponentFactory(t) {
                        throw function _1(n) {
                            const t = Error(`No component factory found for ${Ie(n)}. Did you add it to @NgModule.entryComponents?`);
                            return t.ngComponent = n,
                            t
                        }
                        (t)
                    }
                }
                let Pr = (() => {
                    class n {}
                    return n.NULL = new b1,
                    n
                })();
                function v1() {
                    return Po(Ct(), M())
                }
                function Po(n, t) {
                    return new se(on(n, t))
                }
                let se = (() => {
                    class n {
                        constructor(e) {
                            this.nativeElement = e
                        }
                    }
                    return n.__NG_ELEMENT_ID__ = v1,
                    n
                })();
                function y1(n) {
                    return n instanceof se ? n.nativeElement : n
                }
                class sa {}
                let Ei = (() => {
                    class n {}
                    return n.__NG_ELEMENT_ID__ = () => function w1() {
                        const n = M(),
                        e = sn(Ct().index, n);
                        return (Wt(e) ? e : n)[11]
                    }
                    (),
                    n
                })(),
                C1 = (() => {
                    class n {}
                    return n. \u0275prov = k({
                        token: n,
                        providedIn: "root",
                        factory: () => null
                    }),
                    n
                })();
                class Fr {
                    constructor(t) {
                        this.full = t,
                        this.major = t.split(".")[0],
                        this.minor = t.split(".")[1],
                        this.patch = t.split(".").slice(2).join(".")
                    }
                }
                const D1 = new Fr("15.0.1"),
                kf = {};
                function Of(n) {
                    return n.ngOriginalError
                }
                class Si {
                    constructor() {
                        this._console = console
                    }
                    handleError(t) {
                        const e = this._findOriginalError(t);
                    }
                    _findOriginalError(t) {
                        let e = t && Of(t);
                        for (; e && Of(e); )
                            e = Of(e);
                        return e || null
                    }
                }
                function Mi(n) {
                    return n instanceof Function ? n() : n
                }
                function ay(n, t, e) {
                    let i = n.length;
                    for (; ; ) {
                        const r = n.indexOf(t, e);
                        if (-1 === r)
                            return r;
                        if (0 === r || n.charCodeAt(r - 1) <= 32) {
                            const o = t.length;
                            if (r + o === i || n.charCodeAt(r + o) <= 32)
                                return r
                        }
                        e = r + 1
                    }
                }
                const cy = "ng-template";
                function P1(n, t, e) {
                    let i = 0;
                    for (; i < n.length; ) {
                        let r = n[i++];
                        if (e && "class" === r) {
                            if (r = n[i], -1 !== ay(r.toLowerCase(), t, 0))
                                return !0
                        } else if (1 === r) {
                            for (; i < n.length && "string" == typeof(r = n[i++]); )
                                if (r.toLowerCase() === t)
                                    return !0;
                            return !1
                        }
                    }
                    return !1
                }
                function ly(n) {
                    return 4 === n.type && n.value !== cy
                }
                function F1(n, t, e) {
                    return t === (4 !== n.type || e ? n.value : cy)
                }
                function N1(n, t, e) {
                    let i = 4;
                    const r = n.attrs || [],
                    o = function B1(n) {
                        for (let t = 0; t < n.length; t++)
                            if (Nb(n[t]))
                                return t;
                        return n.length
                    }
                    (r);
                    let s = !1;
                    for (let a = 0; a < t.length; a++) {
                        const c = t[a];
                        if ("number" != typeof c) {
                            if (!s)
                                if (4 & i) {
                                    if (i = 2 | 1 & i, "" !== c && !F1(n, c, e) || "" === c && 1 === t.length) {
                                        if (Nn(i))
                                            return !1;
                                        s = !0
                                    }
                                } else {
                                    const l = 8 & i ? c : t[++a];
                                    if (8 & i && null !== n.attrs) {
                                        if (!P1(n.attrs, l, e)) {
                                            if (Nn(i))
                                                return !1;
                                            s = !0
                                        }
                                        continue
                                    }
                                    const u = L1(8 & i ? "class" : c, r, ly(n), e);
                                    if (-1 === u) {
                                        if (Nn(i))
                                            return !1;
                                        s = !0;
                                        continue
                                    }
                                    if ("" !== l) {
                                        let h;
                                        h = u > o ? "" : r[u + 1].toLowerCase();
                                        const f = 8 & i ? h : null;
                                        if (f && -1 !== ay(f, l, 0) || 2 & i && l !== h) {
                                            if (Nn(i))
                                                return !1;
                                            s = !0
                                        }
                                    }
                                }
                        } else {
                            if (!s && !Nn(i) && !Nn(c))
                                return !1;
                            if (s && Nn(c))
                                continue;
                            s = !1,
                            i = c | 1 & i
                        }
                    }
                    return Nn(i) || s
                }
                function Nn(n) {
                    return 0 == (1 & n)
                }
                function L1(n, t, e, i) {
                    if (null === t)
                        return -1;
                    let r = 0;
                    if (i || !e) {
                        let o = !1;
                        for (; r < t.length; ) {
                            const s = t[r];
                            if (s === n)
                                return r;
                            if (3 === s || 6 === s)
                                o = !0;
                            else {
                                if (1 === s || 2 === s) {
                                    let a = t[++r];
                                    for (; "string" == typeof a; )
                                        a = t[++r];
                                    continue
                                }
                                if (4 === s)
                                    break;
                                if (0 === s) {
                                    r += 4;
                                    continue
                                }
                            }
                            r += o ? 1 : 2
                        }
                        return -1
                    }
                    return function j1(n, t) {
                        let e = n.indexOf(4);
                        if (e > -1)
                            for (e++; e < n.length; ) {
                                const i = n[e];
                                if ("number" == typeof i)
                                    return -1;
                                if (i === t)
                                    return e;
                                e++
                            }
                        return -1
                    }
                    (t, n)
                }
                function dy(n, t, e = !1) {
                    for (let i = 0; i < t.length; i++)
                        if (N1(n, t[i], e))
                            return !0;
                    return !1
                }
                function H1(n, t) {
                    e: for (let e = 0; e < t.length; e++) {
                        const i = t[e];
                        if (n.length === i.length) {
                            for (let r = 0; r < n.length; r++)
                                if (n[r] !== i[r])
                                    continue e;
                            return !0
                        }
                    }
                    return !1
                }
                function uy(n, t) {
                    return n ? ":not(" + t.trim() + ")" : t
                }
                function U1(n) {
                    let t = n[0],
                    e = 1,
                    i = 2,
                    r = "",
                    o = !1;
                    for (; e < n.length; ) {
                        let s = n[e];
                        if ("string" == typeof s)
                            if (2 & i) {
                                const a = n[++e];
                                r += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]"
                            } else
                                8 & i ? r += "." + s : 4 & i && (r += " " + s);
                        else
                            "" !== r && !Nn(s) && (t += uy(o, r), r = ""), i = s, o = o || !Nn(i);
                        e++
                    }
                    return "" !== r && (t += uy(o, r)),
                    t
                }
                const te = {};
                function w(n) {
                    hy(_e(), M(), Lt() + n, !1)
                }
                function hy(n, t, e, i) {
                    if (!i)
                        if (3 == (3 & t[2])) {
                            const o = n.preOrderCheckHooks;
                            null !== o && Jc(t, o, e)
                        } else {
                            const o = n.preOrderHooks;
                            null !== o && el(t, o, 0, e)
                        }
                    Tr(e)
                }
                function gy(n, t = null, e = null, i) {
                    const r = _y(n, t, e, i);
                    return r.resolveInjectorInitializers(),
                    r
                }
                function _y(n, t = null, e = null, i, r = new Set) {
                    const o = [e || De, a1(n)];
                    return i = i || ("object" == typeof n ? void 0 : Ie(n)),
                    new ny(o, t || bl(), i || null, r)
                }
                let rt = (() => {
                    class n {
                        static create(e, i) {
                            if (Array.isArray(e))
                                return gy({
                                    name: ""
                                }, i, e, ""); {
                                const r = e.name ?? "";
                                return gy({
                                    name: r
                                }, e.parent, e.providers, r)
                            }
                        }
                    }
                    return n.THROW_IF_NOT_FOUND = Vs,
                    n.NULL = new Xv,
                    n. \u0275prov = k({
                        token: n,
                        providedIn: "any",
                        factory: () => v(Kv)
                    }),
                    n.__NG_ELEMENT_ID__ = -1,
                    n
                })();
                function p(n, t = W.Default) {
                    const e = M();
                    return null === e ? v(n, t) : zb(Ct(), e, G(n), t)
                }
                function qi() {
                    throw new Error("invalid")
                }
                function yl(n, t) {
                    return n << 17 | t << 2
                }
                function Ln(n) {
                    return n >> 17 & 32767
                }
                function Lf(n) {
                    return 2 | n
                }
                function Ti(n) {
                    return (131068 & n) >> 2
                }
                function Vf(n, t) {
                    return -131069 & n | t << 2
                }
                function Bf(n) {
                    return 1 | n
                }
                function Py(n, t) {
                    const e = n.contentQueries;
                    if (null !== e)
                        for (let i = 0; i < e.length; i += 2) {
                            const r = e[i],
                            o = e[i + 1];
                            if (-1 !== o) {
                                const s = n.data[o];
                                Ph(r),
                                s.contentQueries(2, t[o], o)
                            }
                        }
                }
                function Dl(n, t, e, i, r, o, s, a, c, l, d) {
                    const u = t.blueprint.slice();
                    return u[0] = r,
                    u[2] = 76 | i,
                    (null !== d || n && 1024 & n[2]) && (u[2] |= 1024),
                    Cb(u),
                    u[3] = u[15] = n,
                    u[8] = e,
                    u[10] = s || n && n[10],
                    u[11] = a || n && n[11],
                    u[12] = c || n && n[12] || null,
                    u[9] = l || n && n[9] || null,
                    u[6] = o,
                    u[20] = function tI() {
                        return eI++
                    }
                    (),
                    u[21] = d,
                    u[16] = 2 == t.type ? n[16] : u,
                    u
                }
                function Lo(n, t, e, i, r) {
                    let o = n.data[t];
                    if (null === o)
                        o = function qf(n, t, e, i, r) {
                            const o = Eb(),
                            s = kh(),
                            c = n.data[t] = function xO(n, t, e, i, r, o) {
                                return {
                                    type: e,
                                    index: i,
                                    insertBeforeIndex: null,
                                    injectorIndex: t ? t.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    componentOffset: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: r,
                                    attrs: o,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: t,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0
                                }
                            }
                            (0, s ? o : o && o.parent, e, t, i, r);
                            return null === n.firstChild && (n.firstChild = c),
                            null !== o && (s ? null == o.child && null !== c.parent && (o.child = c) : null === o.next && (o.next = c)),
                            c
                        }
                    (n, t, e, i, r),
                    function sk() {
                        return J.lFrame.inI18n
                    }
                    () && (o.flags |= 32);
                    else if (64 & o.type) {
                        o.type = e,
                        o.value = i,
                        o.attrs = r;
                        const s = function Ws() {
                            const n = J.lFrame,
                            t = n.currentTNode;
                            return n.isParent ? t : t.parent
                        }
                        ();
                        o.injectorIndex = null === s ? -1 : s.injectorIndex
                    }
                    return Qn(o, !0),
                    o
                }
                function aa(n, t, e, i) {
                    if (0 === e)
                        return -1;
                    const r = t.length;
                    for (let o = 0; o < e; o++)
                        t.push(i), n.blueprint.push(i), n.data.push(null);
                    return r
                }
                function Yf(n, t, e) {
                    Fh(t);
                    try {
                        const i = n.viewQuery;
                        null !== i && rp(1, i, e);
                        const r = n.template;
                        null !== r && Fy(n, t, r, 1, e),
                        n.firstCreatePass && (n.firstCreatePass = !1),
                        n.staticContentQueries && Py(n, t),
                        n.staticViewQueries && rp(2, n.viewQuery, e);
                        const o = n.components;
                        null !== o && function wO(n, t) {
                            for (let e = 0; e < t.length; e++)
                                $O(n, t[e])
                        }
                        (t, o)
                    } catch (i) {
                        throw n.firstCreatePass && (n.incompleteFirstPass = !0, n.firstCreatePass = !1),
                        i
                    } finally {
                        t[2] &= -5,
                        Nh()
                    }
                }
                function xl(n, t, e, i) {
                    const r = t[2];
                    if (128 != (128 & r)) {
                        Fh(t);
                        try {
                            Cb(t),
                            function Mb(n) {
                                return J.lFrame.bindingIndex = n
                            }
                            (n.bindingStartIndex),
                            null !== e && Fy(n, t, e, 2, i);
                            const s = 3 == (3 & r);
                            if (s) {
                                const l = n.preOrderCheckHooks;
                                null !== l && Jc(t, l, null)
                            } else {
                                const l = n.preOrderHooks;
                                null !== l && el(t, l, 0, null),
                                Vh(t, 0)
                            }
                            if (function HO(n) {
                                for (let t = af(n); null !== t; t = cf(t)) {
                                    if (!t[2])
                                        continue;
                                    const e = t[9];
                                    for (let i = 0; i < e.length; i++) {
                                        const r = e[i],
                                        o = r[3];
                                        0 == (512 & r[2]) && Ah(o, 1),
                                        r[2] |= 512
                                    }
                                }
                            }
                                (t), function jO(n) {
                                for (let t = af(n); null !== t; t = cf(t))
                                    for (let e = 10; e < t.length; e++) {
                                        const i = t[e],
                                        r = i[1];
                                        Zc(i) && xl(r, i, r.template, i[8])
                                    }
                            }
                                (t), null !== n.contentQueries && Py(n, t), s) {
                                const l = n.contentCheckHooks;
                                null !== l && Jc(t, l)
                            } else {
                                const l = n.contentHooks;
                                null !== l && el(t, l, 1),
                                Vh(t, 1)
                            }
                            !function vO(n, t) {
                                const e = n.hostBindingOpCodes;
                                if (null !== e)
                                    try {
                                        for (let i = 0; i < e.length; i++) {
                                            const r = e[i];
                                            if (r < 0)
                                                Tr(~r);
                                            else {
                                                const o = r,
                                                s = e[++i],
                                                a = e[++i];
                                                ak(s, o),
                                                a(2, t[o])
                                            }
                                        }
                                    } finally {
                                    Tr(-1)
                                }
                            }
                            (n, t);
                            const a = n.components;
                            null !== a && function yO(n, t) {
                                for (let e = 0; e < t.length; e++)
                                    UO(n, t[e])
                            }
                            (t, a);
                            const c = n.viewQuery;
                            if (null !== c && rp(2, c, i), s) {
                                const l = n.viewCheckHooks;
                                null !== l && Jc(t, l)
                            } else {
                                const l = n.viewHooks;
                                null !== l && el(t, l, 2),
                                Vh(t, 2)
                            }
                            !0 === n.firstUpdatePass && (n.firstUpdatePass = !1),
                            t[2] &= -41,
                            512 & t[2] && (t[2] &= -513, Ah(t[3], -1))
                        } finally {
                            Nh()
                        }
                    }
                }
                function Fy(n, t, e, i, r) {
                    const o = Lt(),
                    s = 2 & i;
                    try {
                        Tr(-1),
                        s && t.length > 22 && hy(n, t, 22, !1),
                        e(i, r)
                    } finally {
                        Tr(o)
                    }
                }
                function Kf(n, t, e) {
                    if (Dh(t)) {
                        const r = t.directiveEnd;
                        for (let o = t.directiveStart; o < r; o++) {
                            const s = n.data[o];
                            s.contentQueries && s.contentQueries(1, e[o], o)
                        }
                    }
                }
                function Zf(n, t, e) {
                    !xb() || (function kO(n, t, e, i) {
                        const r = e.directiveStart,
                        o = e.directiveEnd;
                        n.firstCreatePass || nl(e, t),
                        At(i, t);
                        const s = e.initialInputs;
                        for (let a = r; a < o; a++) {
                            const c = n.data[a],
                            l = Fn(c);
                            l && LO(t, e, c);
                            const d = Do(t, n, a, e);
                            At(d, t),
                            null !== s && VO(0, a - r, d, c, 0, s),
                            l && (sn(e.index, t)[8] = d)
                        }
                    }
                        (n, t, e, on(e, t)), 64 == (64 & e.flags) && Uy(n, t, e))
                }
                function Xf(n, t, e = on) {
                    const i = t.localNames;
                    if (null !== i) {
                        let r = t.index + 1;
                        for (let o = 0; o < i.length; o += 2) {
                            const s = i[o + 1],
                            a = -1 === s ? e(t, n) : n[s];
                            n[r++] = a
                        }
                    }
                }
                function Ny(n) {
                    const t = n.tView;
                    return null === t || t.incompleteFirstPass ? n.tView = Qf(1, null, n.template, n.decls, n.vars, n.directiveDefs, n.pipeDefs, n.viewQuery, n.schemas, n.consts) : t
                }
                function Qf(n, t, e, i, r, o, s, a, c, l) {
                    const d = 22 + i,
                    u = d + r,
                    h = function CO(n, t) {
                        const e = [];
                        for (let i = 0; i < t; i++)
                            e.push(i < n ? null : te);
                        return e
                    }
                    (d, u),
                    f = "function" == typeof l ? l() : l;
                    return h[1] = {
                        type: n,
                        blueprint: h,
                        template: e,
                        queries: null,
                        viewQuery: a,
                        declTNode: t,
                        data: h.slice().fill(null, d),
                        bindingStartIndex: d,
                        expandoStartIndex: u,
                        hostBindingOpCodes: null,
                        firstCreatePass: !0,
                        firstUpdatePass: !0,
                        staticViewQueries: !1,
                        staticContentQueries: !1,
                        preOrderHooks: null,
                        preOrderCheckHooks: null,
                        contentHooks: null,
                        contentCheckHooks: null,
                        viewHooks: null,
                        viewCheckHooks: null,
                        destroyHooks: null,
                        cleanup: null,
                        contentQueries: null,
                        components: null,
                        directiveRegistry: "function" == typeof o ? o() : o,
                        pipeRegistry: "function" == typeof s ? s() : s,
                        firstChild: null,
                        schemas: c,
                        consts: f,
                        incompleteFirstPass: !1
                    }
                }
                function Ly(n, t, e, i) {
                    const r = zy(t);
                    null === e ? r.push(i) : (r.push(e), n.firstCreatePass && Gy(n).push(i, r.length - 1))
                }
                function Vy(n, t, e, i) {
                    for (let r in n)
                        if (n.hasOwnProperty(r)) {
                            e = null === e ? {}
                             : e;
                            const o = n[r];
                            null === i ? By(e, t, r, o) : i.hasOwnProperty(r) && By(e, t, i[r], o)
                        }
                    return e
                }
                function By(n, t, e, i) {
                    n.hasOwnProperty(e) ? n[e].push(t, i) : n[e] = [t, i]
                }
                function dn(n, t, e, i, r, o, s, a) {
                    const c = on(t, e);
                    let d,
                    l = t.inputs;
                    !a && null != l && (d = l[i]) ? (op(n, e, d, i, r), qc(t) && jy(e, t.index)) : 3 & t.type && (i = function SO(n) {
                        return "class" === n ? "className" : "for" === n ? "htmlFor" : "formaction" === n ? "formAction" : "innerHtml" === n ? "innerHTML" : "readonly" === n ? "readOnly" : "tabindex" === n ? "tabIndex" : n
                    }
                        (i), r = null != s ? s(r, t.value || "", i) : r, o.setProperty(c, i, r))
                }
                function jy(n, t) {
                    const e = sn(t, n);
                    16 & e[2] || (e[2] |= 32)
                }
                function Jf(n, t, e, i) {
                    let r = !1;
                    if (xb()) {
                        const o = null === i ? null : {
                            "": -1
                        },
                        s = function OO(n, t) {
                            const e = n.directiveRegistry;
                            let i = null,
                            r = null;
                            if (e)
                                for (let o = 0; o < e.length; o++) {
                                    const s = e[o];
                                    if (dy(t, s.selectors, !1))
                                        if (i || (i = []), Fn(s))
                                            if (null !== s.findHostDirectiveDefs) {
                                                const a = [];
                                                r = r || new Map,
                                                s.findHostDirectiveDefs(s, a, r),
                                                i.unshift(...a, s),
                                                ep(n, t, a.length)
                                            } else
                                                i.unshift(s), ep(n, t, 0);
                                        else
                                            r = r || new Map, s.findHostDirectiveDefs?.(s, i, r), i.push(s)
                                }
                            return null === i ? null : [i, r]
                        }
                        (n, e);
                        let a,
                        c;
                        null === s ? a = c = null : [a, c] = s,
                        null !== a && (r = !0, Hy(n, t, e, a, o, c)),
                        o && function RO(n, t, e) {
                            if (t) {
                                const i = n.localNames = [];
                                for (let r = 0; r < t.length; r += 2) {
                                    const o = e[t[r + 1]];
                                    if (null == o)
                                        throw new E(-301, !1);
                                    i.push(t[r], o)
                                }
                            }
                        }
                        (e, i, o)
                    }
                    return e.mergedAttrs = Ks(e.mergedAttrs, e.attrs),
                    r
                }
                function Hy(n, t, e, i, r, o) {
                    for (let l = 0; l < i.length; l++)
                        zh(nl(e, t), n, i[l].type);
                    !function FO(n, t, e) {
                        n.flags |= 1,
                        n.directiveStart = t,
                        n.directiveEnd = t + e,
                        n.providerIndexes = t
                    }
                    (e, n.data.length, i.length);
                    for (let l = 0; l < i.length; l++) {
                        const d = i[l];
                        d.providersResolver && d.providersResolver(d)
                    }
                    let s = !1,
                    a = !1,
                    c = aa(n, t, i.length, null);
                    for (let l = 0; l < i.length; l++) {
                        const d = i[l];
                        e.mergedAttrs = Ks(e.mergedAttrs, d.hostAttrs),
                        NO(n, e, t, c, d),
                        PO(c, d, r),
                        null !== d.contentQueries && (e.flags |= 4),
                        (null !== d.hostBindings || null !== d.hostAttrs || 0 !== d.hostVars) && (e.flags |= 64);
                        const u = d.type.prototype;
                        !s && (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) && ((n.preOrderHooks || (n.preOrderHooks = [])).push(e.index), s = !0),
                        !a && (u.ngOnChanges || u.ngDoCheck) && ((n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(e.index), a = !0),
                        c++
                    }
                    !function EO(n, t, e) {
                        const r = t.directiveEnd,
                        o = n.data,
                        s = t.attrs,
                        a = [];
                        let c = null,
                        l = null;
                        for (let d = t.directiveStart; d < r; d++) {
                            const u = o[d],
                            h = e ? e.get(u) : null,
                            m = h ? h.outputs : null;
                            c = Vy(u.inputs, d, c, h ? h.inputs : null),
                            l = Vy(u.outputs, d, l, m);
                            const _ = null === c || null === s || ly(t) ? null : BO(c, d, s);
                            a.push(_)
                        }
                        null !== c && (c.hasOwnProperty("class") && (t.flags |= 8), c.hasOwnProperty("style") && (t.flags |= 16)),
                        t.initialInputs = a,
                        t.inputs = c,
                        t.outputs = l
                    }
                    (n, e, o)
                }
                function Uy(n, t, e) {
                    const i = e.directiveStart,
                    r = e.directiveEnd,
                    o = e.index,
                    s = function ck() {
                        return J.lFrame.currentDirectiveIndex
                    }
                    ();
                    try {
                        Tr(o);
                        for (let a = i; a < r; a++) {
                            const c = n.data[a],
                            l = t[a];
                            Oh(a),
                            (null !== c.hostBindings || 0 !== c.hostVars || null !== c.hostAttrs) && IO(c, l)
                        }
                    } finally {
                        Tr(-1),
                        Oh(s)
                    }
                }
                function IO(n, t) {
                    null !== n.hostBindings && n.hostBindings(1, t)
                }
                function ep(n, t, e) {
                    t.componentOffset = e,
                    (n.components || (n.components = [])).push(t.index)
                }
                function PO(n, t, e) {
                    if (e) {
                        if (t.exportAs)
                            for (let i = 0; i < t.exportAs.length; i++)
                                e[t.exportAs[i]] = n;
                        Fn(t) && (e[""] = n)
                    }
                }
                function NO(n, t, e, i, r) {
                    n.data[i] = r;
                    const o = r.factory || (r.factory = Mr(r.type)),
                    s = new qs(o, Fn(r), p);
                    n.blueprint[i] = s,
                    e[i] = s,
                    function TO(n, t, e, i, r) {
                        const o = r.hostBindings;
                        if (o) {
                            let s = n.hostBindingOpCodes;
                            null === s && (s = n.hostBindingOpCodes = []);
                            const a = ~t.index;
                            (function AO(n) {
                                let t = n.length;
                                for (; t > 0; ) {
                                    const e = n[--t];
                                    if ("number" == typeof e && e < 0)
                                        return e
                                }
                                return 0
                            })(s) != a && s.push(a),
                            s.push(e, i, o)
                        }
                    }
                    (n, t, i, aa(n, e, r.hostVars, te), r)
                }
                function LO(n, t, e) {
                    const i = on(t, n),
                    r = Ny(e),
                    o = n[10],
                    s = El(n, Dl(n, r, null, e.onPush ? 32 : 16, i, t, o, o.createRenderer(i, e), null, null, null));
                    n[t.index] = s
                }
                function ti(n, t, e, i, r, o) {
                    const s = on(n, t);
                    !function tp(n, t, e, i, r, o, s) {
                        if (null == o)
                            n.removeAttribute(t, r, e);
                        else {
                            const a = null == s ? ee(o) : s(o, i || "", r);
                            n.setAttribute(t, r, a, e)
                        }
                    }
                    (t[11], s, o, n.value, e, i, r)
                }
                function VO(n, t, e, i, r, o) {
                    const s = o[t];
                    if (null !== s) {
                        const a = i.setInput;
                        for (let c = 0; c < s.length; ) {
                            const l = s[c++],
                            d = s[c++],
                            u = s[c++];
                            null !== a ? i.setInput(e, u, l, d) : e[d] = u
                        }
                    }
                }
                function BO(n, t, e) {
                    let i = null,
                    r = 0;
                    for (; r < e.length; ) {
                        const o = e[r];
                        if (0 !== o)
                            if (5 !== o) {
                                if ("number" == typeof o)
                                    break;
                                if (n.hasOwnProperty(o)) {
                                    null === i && (i = []);
                                    const s = n[o];
                                    for (let a = 0; a < s.length; a += 2)
                                        if (s[a] === t) {
                                            i.push(o, s[a + 1], e[r + 1]);
                                            break
                                        }
                                }
                                r += 2
                            } else
                                r += 2;
                        else
                            r += 4
                    }
                    return i
                }
                function $y(n, t, e, i) {
                    return new Array(n, !0, !1, t, null, 0, i, e, null, null)
                }
                function UO(n, t) {
                    const e = sn(t, n);
                    if (Zc(e)) {
                        const i = e[1];
                        48 & e[2] ? xl(i, e, i.template, e[8]) : e[5] > 0 && np(e)
                    }
                }
                function np(n) {
                    for (let i = af(n); null !== i; i = cf(i))
                        for (let r = 10; r < i.length; r++) {
                            const o = i[r];
                            if (Zc(o))
                                if (512 & o[2]) {
                                    const s = o[1];
                                    xl(s, o, s.template, o[8])
                                } else
                                    o[5] > 0 && np(o)
                        }
                    const e = n[1].components;
                    if (null !== e)
                        for (let i = 0; i < e.length; i++) {
                            const r = sn(e[i], n);
                            Zc(r) && r[5] > 0 && np(r)
                        }
                }
                function $O(n, t) {
                    const e = sn(t, n),
                    i = e[1];
                    (function zO(n, t) {
                        for (let e = t.length; e < n.blueprint.length; e++)
                            t.push(n.blueprint[e])
                    })(i, e),
                    Yf(i, e, e[8])
                }
                function El(n, t) {
                    return n[13] ? n[14][4] = t : n[13] = t,
                    n[14] = t,
                    t
                }
                function ip(n) {
                    for (; n; ) {
                        n[2] |= 32;
                        const t = na(n);
                        if (jA(n) && !t)
                            return n;
                        n = t
                    }
                    return null
                }
                function Sl(n, t, e, i = !0) {
                    const r = t[10];
                    r.begin && r.begin();
                    try {
                        xl(n, t, n.template, e)
                    } catch (s) {
                        throw i && qy(t, s),
                        s
                    } finally {
                        r.end && r.end()
                    }
                }
                function rp(n, t, e) {
                    Ph(0),
                    t(n, e)
                }
                function zy(n) {
                    return n[7] || (n[7] = [])
                }
                function Gy(n) {
                    return n.cleanup || (n.cleanup = [])
                }
                function Wy(n, t, e) {
                    return (null === n || Fn(n)) && (e = function ZA(n) {
                        for (; Array.isArray(n); ) {
                            if ("object" == typeof n[1])
                                return n;
                            n = n[0]
                        }
                        return null
                    }
                        (e[t.index])),
                    e[11]
                }
                function qy(n, t) {
                    const e = n[9],
                    i = e ? e.get(Si, null) : null;
                    i && i.handleError(t)
                }
                function op(n, t, e, i, r) {
                    for (let o = 0; o < e.length; ) {
                        const s = e[o++],
                        a = e[o++],
                        c = t[s],
                        l = n.data[s];
                        null !== l.setInput ? l.setInput(c, r, i, a) : c[a] = r
                    }
                }
                function Ai(n, t, e) {
                    const i = Kc(t, n);
                    !function wv(n, t, e) {
                        n.setValue(t, e)
                    }
                    (n[11], i, e)
                }
                function Ml(n, t, e) {
                    let i = e ? n.styles : null,
                    r = e ? n.classes : null,
                    o = 0;
                    if (null !== t)
                        for (let s = 0; s < t.length; s++) {
                            const a = t[s];
                            "number" == typeof a ? o = a : 1 == o ? r = hh(r, a) : 2 == o && (i = hh(i, a + ": " + t[++s] + ";"))
                        }
                    e ? n.styles = i : n.stylesWithoutHost = i,
                    e ? n.classes = r : n.classesWithoutHost = r
                }
                function Tl(n, t, e, i, r = !1) {
                    for (; null !== e; ) {
                        const o = t[e.index];
                        if (null !== o && i.push(ht(o)), Pn(o))
                            for (let a = 10; a < o.length; a++) {
                                const c = o[a],
                                l = c[1].firstChild;
                                null !== l && Tl(c[1], c, l, i)
                            }
                        const s = e.type;
                        if (8 & s)
                            Tl(n, t, e.child, i);
                        else if (32 & s) {
                            const a = sf(e, t);
                            let c;
                            for (; c = a(); )
                                i.push(c)
                        } else if (16 & s) {
                            const a = Ov(t, e);
                            if (Array.isArray(a))
                                i.push(...a);
                            else {
                                const c = na(t[16]);
                                Tl(c[1], c, a, i, !0)
                            }
                        }
                        e = r ? e.projectionNext : e.next
                    }
                    return i
                }
                class ca {
                    constructor(t, e) {
                        this._lView = t,
                        this._cdRefInjectingView = e,
                        this._appRef = null,
                        this._attachedToViewContainer = !1
                    }
                    get rootNodes() {
                        const t = this._lView,
                        e = t[1];
                        return Tl(e, t, e.firstChild, [])
                    }
                    get context() {
                        return this._lView[8]
                    }
                    set context(t) {
                        this._lView[8] = t
                    }
                    get destroyed() {
                        return 128 == (128 & this._lView[2])
                    }
                    destroy() {
                        if (this._appRef)
                            this._appRef.detachView(this);
                        else if (this._attachedToViewContainer) {
                            const t = this._lView[3];
                            if (Pn(t)) {
                                const e = t[8],
                                i = e ? e.indexOf(this) : -1;
                                i > -1 && (uf(t, i), ol(e, i))
                            }
                            this._attachedToViewContainer = !1
                        }
                        Dv(this._lView[1], this._lView)
                    }
                    onDestroy(t) {
                        Ly(this._lView[1], this._lView, null, t)
                    }
                    markForCheck() {
                        ip(this._cdRefInjectingView || this._lView)
                    }
                    detach() {
                        this._lView[2] &= -65
                    }
                    reattach() {
                        this._lView[2] |= 64
                    }
                    detectChanges() {
                        Sl(this._lView[1], this._lView, this.context)
                    }
                    checkNoChanges() {}
                    attachToViewContainerRef() {
                        if (this._appRef)
                            throw new E(902, !1);
                        this._attachedToViewContainer = !0
                    }
                    detachFromAppRef() {
                        this._appRef = null,
                        function _I(n, t) {
                            ia(n, t, t[11], 2, null, null)
                        }
                        (this._lView[1], this._lView)
                    }
                    attachToAppRef(t) {
                        if (this._attachedToViewContainer)
                            throw new E(902, !1);
                        this._appRef = t
                    }
                }
                class GO extends ca {
                    constructor(t) {
                        super(t),
                        this._view = t
                    }
                    detectChanges() {
                        const t = this._view;
                        Sl(t[1], t, t[8], !1)
                    }
                    checkNoChanges() {}
                    get context() {
                        return null
                    }
                }
                class sp extends Pr {
                    constructor(t) {
                        super(),
                        this.ngModule = t
                    }
                    resolveComponentFactory(t) {
                        const e = Te(t);
                        return new la(e, this.ngModule)
                    }
                }
                function Yy(n) {
                    const t = [];
                    for (let e in n)
                        n.hasOwnProperty(e) && t.push({
                            propName: n[e],
                            templateName: e
                        });
                    return t
                }
                class qO {
                    constructor(t, e) {
                        this.injector = t,
                        this.parentInjector = e
                    }
                    get(t, e, i) {
                        i = Uc(i);
                        const r = this.injector.get(t, kf, i);
                        return r !== kf || e === kf ? r : this.parentInjector.get(t, e, i)
                    }
                }
                class la extends ry {
                    constructor(t, e) {
                        super(),
                        this.componentDef = t,
                        this.ngModule = e,
                        this.componentType = t.type,
                        this.selector = function $1(n) {
                            return n.map(U1).join(",")
                        }
                        (t.selectors),
                        this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : [],
                        this.isBoundToModule = !!e
                    }
                    get inputs() {
                        return Yy(this.componentDef.inputs)
                    }
                    get outputs() {
                        return Yy(this.componentDef.outputs)
                    }
                    create(t, e, i, r) {
                        let o = (r = r || this.ngModule)instanceof xi ? r : r?.injector;
                        o && null !== this.componentDef.getStandaloneInjector && (o = this.componentDef.getStandaloneInjector(o) || o);
                        const s = o ? new qO(t, o) : t,
                        a = s.get(sa, null);
                        if (null === a)
                            throw new E(407, !1);
                        const c = s.get(C1, null),
                        l = a.createRenderer(null, this.componentDef),
                        d = this.componentDef.selectors[0][0] || "div",
                        u = i ? function DO(n, t, e) {
                            return n.selectRootElement(t, e === On.ShadowDom)
                        }
                        (l, i, this.componentDef.encapsulation) : df(l, d, function WO(n) {
                            const t = n.toLowerCase();
                            return "svg" === t ? "svg" : "math" === t ? "math" : null
                        }
                            (d)),
                        h = this.componentDef.onPush ? 288 : 272,
                        f = Qf(0, null, null, 1, 0, null, null, null, null, null),
                        m = Dl(null, f, null, h, null, null, a, l, c, s, null);
                        let _,
                        C;
                        Fh(m);
                        try {
                            const D = this.componentDef;
                            let A,
                            x = null;
                            D.findHostDirectiveDefs ? (A = [], x = new Map, D.findHostDirectiveDefs(D, A, x), A.push(D)) : A = [D];
                            const P = function ZO(n, t) {
                                const e = n[1];
                                return n[22] = t,
                                Lo(e, 22, 2, "#host", null)
                            }
                            (m, u),
                            de = function XO(n, t, e, i, r, o, s, a) {
                                const c = r[1];
                                !function QO(n, t, e, i) {
                                    for (const r of n)
                                        t.mergedAttrs = Ks(t.mergedAttrs, r.hostAttrs);
                                    null !== t.mergedAttrs && (Ml(t, t.mergedAttrs, !0), null !== e && Fv(i, e, t))
                                }
                                (i, n, t, s);
                                const l = o.createRenderer(t, e),
                                d = Dl(r, Ny(e), null, e.onPush ? 32 : 16, r[n.index], n, o, l, a || null, null, null);
                                return c.firstCreatePass && ep(c, n, i.length - 1),
                                El(r, d),
                                r[n.index] = d
                            }
                            (P, u, D, A, m, a, l);
                            C = Th(f, 22),
                            u && function eR(n, t, e, i) {
                                if (i)
                                    jh(n, e, ["ng-version", D1.full]);
                                else {
                                    const {
                                        attrs: r,
                                        classes: o
                                    } = function z1(n) {
                                        const t = [],
                                        e = [];
                                        let i = 1,
                                        r = 2;
                                        for (; i < n.length; ) {
                                            let o = n[i];
                                            if ("string" == typeof o)
                                                2 === r ? "" !== o && t.push(o, n[++i]) : 8 === r && e.push(o);
                                            else {
                                                if (!Nn(r))
                                                    break;
                                                r = o
                                            }
                                            i++
                                        }
                                        return {
                                            attrs: t,
                                            classes: e
                                        }
                                    }
                                    (t.selectors[0]);
                                    r && jh(n, e, r),
                                    o && o.length > 0 && Pv(n, e, o.join(" "))
                                }
                            }
                            (l, D, u, i),
                            void 0 !== e && function tR(n, t, e) {
                                const i = n.projection = [];
                                for (let r = 0; r < t.length; r++) {
                                    const o = e[r];
                                    i.push(null != o ? Array.from(o) : null)
                                }
                            }
                            (C, this.ngContentSelectors, e),
                            _ = function JO(n, t, e, i, r, o) {
                                const s = Ct(),
                                a = r[1],
                                c = on(s, r);
                                Hy(a, r, s, e, null, i);
                                for (let d = 0; d < e.length; d++)
                                    At(Do(r, a, s.directiveStart + d, s), r);
                                Uy(a, r, s),
                                c && At(c, r);
                                const l = Do(r, a, s.directiveStart + s.componentOffset, s);
                                if (n[8] = r[8] = l, null !== o)
                                    for (const d of o)
                                        d(l, t);
                                return Kf(a, s, n),
                                l
                            }
                            (de, D, A, x, m, [nR]),
                            Yf(f, m, null)
                        } finally {
                            Nh()
                        }
                        return new KO(this.componentType, _, Po(C, m), m, C)
                    }
                }
                class KO extends g1 {
                    constructor(t, e, i, r, o) {
                        super(),
                        this.location = i,
                        this._rootLView = r,
                        this._tNode = o,
                        this.instance = e,
                        this.hostView = this.changeDetectorRef = new GO(r),
                        this.componentType = t
                    }
                    setInput(t, e) {
                        const i = this._tNode.inputs;
                        let r;
                        if (null !== i && (r = i[t])) {
                            const o = this._rootLView;
                            op(o[1], o, r, t, e),
                            jy(o, this._tNode.index)
                        }
                    }
                    get injector() {
                        return new xo(this._tNode, this._rootLView)
                    }
                    destroy() {
                        this.hostView.destroy()
                    }
                    onDestroy(t) {
                        this.hostView.onDestroy(t)
                    }
                }
                function nR() {
                    const n = Ct();
                    Qc(M()[1], n)
                }
                function H(n) {
                    let t = function Ky(n) {
                        return Object.getPrototypeOf(n.prototype).constructor
                    }
                    (n.type),
                    e = !0;
                    const i = [n];
                    for (; t; ) {
                        let r;
                        if (Fn(n))
                            r = t. \u0275cmp || t. \u0275dir;
                        else {
                            if (t. \u0275cmp)
                                throw new E(903, !1);
                            r = t. \u0275dir
                        }
                        if (r) {
                            if (e) {
                                i.push(r);
                                const s = n;
                                s.inputs = ap(n.inputs),
                                s.declaredInputs = ap(n.declaredInputs),
                                s.outputs = ap(n.outputs);
                                const a = r.hostBindings;
                                a && sR(n, a);
                                const c = r.viewQuery,
                                l = r.contentQueries;
                                if (c && rR(n, c), l && oR(n, l), uh(n.inputs, r.inputs), uh(n.declaredInputs, r.declaredInputs), uh(n.outputs, r.outputs), Fn(r) && r.data.animation) {
                                    const d = n.data;
                                    d.animation = (d.animation || []).concat(r.data.animation)
                                }
                            }
                            const o = r.features;
                            if (o)
                                for (let s = 0; s < o.length; s++) {
                                    const a = o[s];
                                    a && a.ngInherit && a(n),
                                    a === H && (e = !1)
                                }
                        }
                        t = Object.getPrototypeOf(t)
                    }
                    !function iR(n) {
                        let t = 0,
                        e = null;
                        for (let i = n.length - 1; i >= 0; i--) {
                            const r = n[i];
                            r.hostVars = t += r.hostVars,
                            r.hostAttrs = Ks(r.hostAttrs, e = Ks(e, r.hostAttrs))
                        }
                    }
                    (i)
                }
                function ap(n) {
                    return n === vi ? {}
                     : n === De ? [] : n
                }
                function rR(n, t) {
                    const e = n.viewQuery;
                    n.viewQuery = e ? (i, r) => {
                        t(i, r),
                        e(i, r)
                    }
                     : t
                }
                function oR(n, t) {
                    const e = n.contentQueries;
                    n.contentQueries = e ? (i, r, o) => {
                        t(i, r, o),
                        e(i, r, o)
                    }
                     : t
                }
                function sR(n, t) {
                    const e = n.hostBindings;
                    n.hostBindings = e ? (i, r) => {
                        t(i, r),
                        e(i, r)
                    }
                     : t
                }
                let Al = null;
                function Nr() {
                    if (!Al) {
                        const n = Re.Symbol;
                        if (n && n.iterator)
                            Al = n.iterator;
                        else {
                            const t = Object.getOwnPropertyNames(Map.prototype);
                            for (let e = 0; e < t.length; ++e) {
                                const i = t[e];
                                "entries" !== i && "size" !== i && Map.prototype[i] === Map.prototype.entries && (Al = i)
                            }
                        }
                    }
                    return Al
                }
                function da(n) {
                    return !!cp(n) && (Array.isArray(n) || !(n instanceof Map) && Nr()in n)
                }
                function cp(n) {
                    return null !== n && ("function" == typeof n || "object" == typeof n)
                }
                function ni(n, t, e) {
                    return n[t] = e
                }
                function kt(n, t, e) {
                    return !Object.is(n[t], e) && (n[t] = e, !0)
                }
                function Lr(n, t, e, i) {
                    const r = kt(n, t, e);
                    return kt(n, t + 1, i) || r
                }
                function Ee(n, t, e, i) {
                    const r = M();
                    return kt(r, yo(), t) && (_e(), ti(We(), r, n, t, e, i)),
                    Ee
                }
                function Bo(n, t, e, i) {
                    return kt(n, yo(), e) ? t + ee(e) + i : te
                }
                function jo(n, t, e, i, r, o) {
                    const a = Lr(n, wi(), e, r);
                    return Ci(2),
                    a ? t + ee(e) + i + ee(r) + o : te
                }
                function Ho(n, t, e, i, r, o, s, a) {
                    const l = function kl(n, t, e, i, r) {
                        const o = Lr(n, t, e, i);
                        return kt(n, t + 2, r) || o
                    }
                    (n, wi(), e, r, s);
                    return Ci(3),
                    l ? t + ee(e) + i + ee(r) + o + ee(s) + a : te
                }
                function I(n, t, e, i, r, o, s, a) {
                    const c = M(),
                    l = _e(),
                    d = n + 22,
                    u = l.firstCreatePass ? function gR(n, t, e, i, r, o, s, a, c) {
                        const l = t.consts,
                        d = Lo(t, n, 4, s || null, $i(l, a));
                        Jf(t, e, d, $i(l, c)),
                        Qc(t, d);
                        const u = d.tViews = Qf(2, d, i, r, o, t.directiveRegistry, t.pipeRegistry, null, t.schemas, l);
                        return null !== t.queries && (t.queries.template(t, d), u.queries = t.queries.embeddedTView(d)),
                        d
                    }
                    (d, l, c, t, e, i, r, o, s) : l.data[d];
                    Qn(u, !1);
                    const h = c[11].createComment("");
                    dl(l, c, h, u),
                    At(h, c),
                    El(c, c[d] = $y(h, c, h, u)),
                    Yc(u) && Zf(l, c, u),
                    null != s && Xf(c, u, a)
                }
                function qo(n) {
                    return vo(function ok() {
                        return J.lFrame.contextLView
                    }
                        (), 22 + n)
                }
                function y(n, t, e) {
                    const i = M();
                    return kt(i, yo(), t) && dn(_e(), We(), i, n, t, i[11], e, !1),
                    y
                }
                function lp(n, t, e, i, r) {
                    const s = r ? "class" : "style";
                    op(n, e, t.inputs[s], s, i)
                }
                function g(n, t, e, i) {
                    const r = M(),
                    o = _e(),
                    s = 22 + n,
                    a = r[11],
                    c = r[s] = df(a, t, function pk() {
                        return J.lFrame.currentNamespace
                    }
                            ()),
                    l = o.firstCreatePass ? function bR(n, t, e, i, r, o, s) {
                        const a = t.consts,
                        l = Lo(t, n, 2, r, $i(a, o));
                        return Jf(t, e, l, $i(a, s)),
                        null !== l.attrs && Ml(l, l.attrs, !1),
                        null !== l.mergedAttrs && Ml(l, l.mergedAttrs, !0),
                        null !== t.queries && t.queries.elementStart(t, l),
                        l
                    }
                    (s, o, r, 0, t, e, i) : o.data[s];
                    return Qn(l, !0),
                    Fv(a, c, l),
                    32 != (32 & l.flags) && dl(o, r, c, l),
                    0 === function ek() {
                        return J.lFrame.elementDepthCount
                    }
                    () && At(c, r),
                    function tk() {
                        J.lFrame.elementDepthCount++
                    }
                    (),
                    Yc(l) && (Zf(o, r, l), Kf(o, l, r)),
                    null !== i && Xf(r, l),
                    g
                }
                function b() {
                    let n = Ct();
                    kh() ? Ih() : (n = n.parent, Qn(n, !1));
                    const t = n;
                    !function nk() {
                        J.lFrame.elementDepthCount--
                    }
                    ();
                    const e = _e();
                    return e.firstCreatePass && (Qc(e, n), Dh(n) && e.queries.elementEnd(n)),
                    null != t.classesWithoutHost && function vk(n) {
                        return 0 != (8 & n.flags)
                    }
                    (t) && lp(e, t, M(), t.classesWithoutHost, !0),
                    null != t.stylesWithoutHost && function yk(n) {
                        return 0 != (16 & n.flags)
                    }
                    (t) && lp(e, t, M(), t.stylesWithoutHost, !1),
                    b
                }
                function V(n, t, e, i) {
                    return g(n, t, e, i),
                    b(),
                    V
                }
                function ii(n, t, e) {
                    const i = M(),
                    r = _e(),
                    o = n + 22,
                    s = r.firstCreatePass ? function vR(n, t, e, i, r) {
                        const o = t.consts,
                        s = $i(o, i),
                        a = Lo(t, n, 8, "ng-container", s);
                        return null !== s && Ml(a, s, !0),
                        Jf(t, e, a, $i(o, r)),
                        null !== t.queries && t.queries.elementStart(t, a),
                        a
                    }
                    (o, r, i, t, e) : r.data[o];
                    Qn(s, !0);
                    const a = i[o] = i[11].createComment("");
                    return dl(r, i, a, s),
                    At(a, i),
                    Yc(s) && (Zf(r, i, s), Kf(r, s, i)),
                    null != e && Xf(i, s),
                    ii
                }
                function ri() {
                    let n = Ct();
                    const t = _e();
                    return kh() ? Ih() : (n = n.parent, Qn(n, !1)),
                    t.firstCreatePass && (Qc(t, n), Dh(n) && t.queries.elementEnd(n)),
                    ri
                }
                function ha(n, t, e) {
                    return ii(n, t, e),
                    ri(),
                    ha
                }
                function un() {
                    return M()
                }
                function fa(n) {
                    return !!n && "function" == typeof n.then
                }
                const dp = function l0(n) {
                    return !!n && "function" == typeof n.subscribe
                };
                function O(n, t, e, i) {
                    const r = M(),
                    o = _e(),
                    s = Ct();
                    return d0(o, r, r[11], s, n, t, i),
                    O
                }
                function up(n, t) {
                    const e = Ct(),
                    i = M(),
                    r = _e();
                    return d0(r, i, Wy(Rh(r.data), e, i), e, n, t),
                    up
                }
                function d0(n, t, e, i, r, o, s) {
                    const a = Yc(i),
                    l = n.firstCreatePass && Gy(n),
                    d = t[8],
                    u = zy(t);
                    let h = !0;
                    if (3 & i.type || s) {
                        const _ = on(i, t),
                        C = s ? s(_) : _,
                        D = u.length,
                        A = s ? P => s(ht(P[i.index])) : i.index;
                        let x = null;
                        if (!s && a && (x = function yR(n, t, e, i) {
                                const r = n.cleanup;
                                if (null != r)
                                    for (let o = 0; o < r.length - 1; o += 2) {
                                        const s = r[o];
                                        if (s === e && r[o + 1] === i) {
                                            const a = t[7],
                                            c = r[o + 2];
                                            return a.length > c ? a[c] : null
                                        }
                                        "string" == typeof s && (o += 2)
                                    }
                                return null
                            }
                                (n, t, r, i.index)), null !== x)
                            (x.__ngLastListenerFn__ || x).__ngNextListenerFn__ = o, x.__ngLastListenerFn__ = o, h = !1;
                        else {
                            o = h0(i, t, d, o, !1);
                            const P = e.listen(C, r, o);
                            u.push(o, P),
                            l && l.push(r, A, D, D + 1)
                        }
                    } else
                        o = h0(i, t, d, o, !1);
                    const f = i.outputs;
                    let m;
                    if (h && null !== f && (m = f[r])) {
                        const _ = m.length;
                        if (_)
                            for (let C = 0; C < _; C += 2) {
                                const de = t[m[C]][m[C + 1]].subscribe(o),
                                fe = u.length;
                                u.push(o, de),
                                l && l.push(r, i.index, fe,  - (fe + 1))
                            }
                    }
                }
                function u0(n, t, e, i) {
                    try {
                        return !1 !== e(i)
                    } catch (r) {
                        return qy(n, r),
                        !1
                    }
                }
                function h0(n, t, e, i, r) {
                    return function o(s) {
                        if (s === Function)
                            return i;
                        ip(n.componentOffset > -1 ? sn(n.index, t) : t);
                        let c = u0(t, 0, i, s),
                        l = o.__ngNextListenerFn__;
                        for (; l; )
                            c = u0(t, 0, l, s) && c, l = l.__ngNextListenerFn__;
                        return r && !1 === c && (s.preventDefault(), s.returnValue = !1),
                        c
                    }
                }
                function $(n = 1) {
                    return function dk(n) {
                        return (J.lFrame.contextLView = function uk(n, t) {
                            for (; n > 0; )
                                t = t[15], n--;
                            return t
                        }
                            (n, J.lFrame.contextLView))[8]
                    }
                    (n)
                }
                function wR(n, t) {
                    let e = null;
                    const i = function V1(n) {
                        const t = n.attrs;
                        if (null != t) {
                            const e = t.indexOf(5);
                            if (0 == (1 & e))
                                return t[e + 1]
                        }
                        return null
                    }
                    (n);
                    for (let r = 0; r < t.length; r++) {
                        const o = t[r];
                        if ("*" !== o) {
                            if (null === i ? dy(n, o, !0) : H1(i, o))
                                return r
                        } else
                            e = r
                    }
                    return e
                }
                function vt(n) {
                    const t = M()[16][6];
                    if (!t.projection) {
                        const i = t.projection = Qs(n ? n.length : 1, null),
                        r = i.slice();
                        let o = t.child;
                        for (; null !== o; ) {
                            const s = n ? wR(o, n) : 0;
                            null !== s && (r[s] ? r[s].projectionNext = o : i[s] = o, r[s] = o),
                            o = o.next
                        }
                    }
                }
                function ye(n, t = 0, e) {
                    const i = M(),
                    r = _e(),
                    o = Lo(r, 22 + n, 16, null, e || null);
                    null === o.projection && (o.projection = t),
                    Ih(),
                    32 != (32 & o.flags) && function EI(n, t, e) {
                        Rv(t[11], 0, t, e, xv(n, e, t), Tv(e.parent || t[6], e, t))
                    }
                    (r, i, o)
                }
                function Zi(n, t, e) {
                    return Yo(n, "", t, "", e),
                    Zi
                }
                function Yo(n, t, e, i, r) {
                    const o = M(),
                    s = Bo(o, t, e, i);
                    return s !== te && dn(_e(), We(), o, n, s, o[11], r, !1),
                    Yo
                }
                function hp(n, t, e, i, r, o, s) {
                    const a = M(),
                    c = jo(a, t, e, i, r, o);
                    return c !== te && dn(_e(), We(), a, n, c, a[11], s, !1),
                    hp
                }
                function Il(n, t, e, i, r, o, s, a, c) {
                    const l = M(),
                    d = Ho(l, t, e, i, r, o, s, a);
                    return d !== te && dn(_e(), We(), l, n, d, l[11], c, !1),
                    Il
                }
                function v0(n, t, e, i, r) {
                    const o = n[e + 1],
                    s = null === t;
                    let a = i ? Ln(o) : Ti(o),
                    c = !1;
                    for (; 0 !== a && (!1 === c || s); ) {
                        const d = n[a + 1];
                        xR(n[a], t) && (c = !0, n[a + 1] = i ? Bf(d) : Lf(d)),
                        a = i ? Ln(d) : Ti(d)
                    }
                    c && (n[e + 1] = i ? Lf(o) : Bf(o))
                }
                function xR(n, t) {
                    return null === n || null == t || (Array.isArray(n) ? n[1] : n) === t || !(!Array.isArray(n) || "string" != typeof t) && Ao(n, t) >= 0
                }
                function oi(n, t, e) {
                    return Vn(n, t, e, !1),
                    oi
                }
                function be(n, t) {
                    return Vn(n, t, null, !0),
                    be
                }
                function Vn(n, t, e, i) {
                    const r = M(),
                    o = _e(),
                    s = Ci(2);
                    o.firstUpdatePass && function M0(n, t, e, i) {
                        const r = n.data;
                        if (null === r[e + 1]) {
                            const o = r[Lt()],
                            s = function S0(n, t) {
                                return t >= n.expandoStartIndex
                            }
                            (n, e);
                            (function I0(n, t) {
                                return 0 != (n.flags & (t ? 8 : 16))
                            })(o, i) && null === t && !s && (t = !1),
                            t = function RR(n, t, e, i) {
                                const r = Rh(n);
                                let o = i ? t.residualClasses : t.residualStyles;
                                if (null === r)
                                    0 === (i ? t.classBindings : t.styleBindings) && (e = pa(e = fp(null, n, t, e, i), t.attrs, i), o = null);
                                else {
                                    const s = t.directiveStylingLast;
                                    if (-1 === s || n[s] !== r)
                                        if (e = fp(r, n, t, e, i), null === o) {
                                            let c = function PR(n, t, e) {
                                                const i = e ? t.classBindings : t.styleBindings;
                                                if (0 !== Ti(i))
                                                    return n[Ln(i)]
                                            }
                                            (n, t, i);
                                            void 0 !== c && Array.isArray(c) && (c = fp(null, n, t, c[1], i), c = pa(c, t.attrs, i), function FR(n, t, e, i) {
                                                n[Ln(e ? t.classBindings : t.styleBindings)] = i
                                            }
                                                (n, t, i, c))
                                        } else
                                            o = function NR(n, t, e) {
                                                let i;
                                                const r = t.directiveEnd;
                                                for (let o = 1 + t.directiveStylingLast; o < r; o++)
                                                    i = pa(i, n[o].hostAttrs, e);
                                                return pa(i, t.attrs, e)
                                            }
                                    (n, t, i)
                                }
                                return void 0 !== o && (i ? t.residualClasses = o : t.residualStyles = o),
                                e
                            }
                            (r, o, t, i),
                            function CR(n, t, e, i, r, o) {
                                let s = o ? t.classBindings : t.styleBindings,
                                a = Ln(s),
                                c = Ti(s);
                                n[i] = e;
                                let d,
                                l = !1;
                                if (Array.isArray(e)) {
                                    const u = e;
                                    d = u[1],
                                    (null === d || Ao(u, d) > 0) && (l = !0)
                                } else
                                    d = e;
                                if (r)
                                    if (0 !== c) {
                                        const h = Ln(n[a + 1]);
                                        n[i + 1] = yl(h, a),
                                        0 !== h && (n[h + 1] = Vf(n[h + 1], i)),
                                        n[a + 1] = function lO(n, t) {
                                            return 131071 & n | t << 17
                                        }
                                        (n[a + 1], i)
                                    } else
                                        n[i + 1] = yl(a, 0), 0 !== a && (n[a + 1] = Vf(n[a + 1], i)), a = i;
                                else
                                    n[i + 1] = yl(c, 0), 0 === a ? a = i : n[c + 1] = Vf(n[c + 1], i), c = i;
                                l && (n[i + 1] = Lf(n[i + 1])),
                                v0(n, d, i, !0),
                                v0(n, d, i, !1),
                                function DR(n, t, e, i, r) {
                                    const o = r ? n.residualClasses : n.residualStyles;
                                    null != o && "string" == typeof t && Ao(o, t) >= 0 && (e[i + 1] = Bf(e[i + 1]))
                                }
                                (t, d, n, i, o),
                                s = yl(a, c),
                                o ? t.classBindings = s : t.styleBindings = s
                            }
                            (r, o, t, e, s, i)
                        }
                    }
                    (o, n, s, i),
                    t !== te && kt(r, s, t) && function A0(n, t, e, i, r, o, s, a) {
                        if (!(3 & t.type))
                            return;
                        const c = n.data,
                        l = c[a + 1];
                        Ol(function Sy(n) {
                            return 1 == (1 & n)
                        }
                            (l) ? k0(c, t, e, r, Ti(l), s) : void 0) || (Ol(o) || function Ey(n) {
                            return 2 == (2 & n)
                        }
                            (l) && (o = k0(c, null, e, r, a, s)), function MI(n, t, e, i, r) {
                            if (t)
                                r ? n.addClass(e, i) : n.removeClass(e, i);
                            else {
                                let o = -1 === i.indexOf("-") ? void 0 : qt.DashCase;
                                null == r ? n.removeStyle(e, i, o) : ("string" == typeof r && r.endsWith("!important") && (r = r.slice(0, -10), o |= qt.Important), n.setStyle(e, i, r, o))
                            }
                        }
                            (i, s, Kc(Lt(), e), r, o))
                    }
                    (o, o.data[Lt()], r, r[11], n, r[s + 1] = function BR(n, t) {
                        return null == n || ("string" == typeof t ? n += t : "object" == typeof n && (n = Ie(ln(n)))),
                        n
                    }
                        (t, e), i, s)
                }
                function fp(n, t, e, i, r) {
                    let o = null;
                    const s = e.directiveEnd;
                    let a = e.directiveStylingLast;
                    for (-1 === a ? a = e.directiveStart : a++; a < s && (o = t[a], i = pa(i, o.hostAttrs, r), o !== n); )
                        a++;
                    return null !== n && (e.directiveStylingLast = a),
                    i
                }
                function pa(n, t, e) {
                    const i = e ? 1 : 2;
                    let r = -1;
                    if (null !== t)
                        for (let o = 0; o < t.length; o++) {
                            const s = t[o];
                            "number" == typeof s ? r = s : r === i && (Array.isArray(n) || (n = void 0 === n ? [] : ["", n]), cn(n, s, !!e || t[++o]))
                        }
                    return void 0 === n ? null : n
                }
                function k0(n, t, e, i, r, o) {
                    const s = null === t;
                    let a;
                    for (; r > 0; ) {
                        const c = n[r],
                        l = Array.isArray(c),
                        d = l ? c[1] : c,
                        u = null === d;
                        let h = e[r + 1];
                        h === te && (h = u ? De : void 0);
                        let f = u ? Yh(h, i) : d === i ? h : void 0;
                        if (l && !Ol(f) && (f = Yh(c, i)), Ol(f) && (a = f, s))
                            return a;
                        const m = n[r + 1];
                        r = s ? Ln(m) : Ti(m)
                    }
                    if (null !== t) {
                        let c = o ? t.residualClasses : t.residualStyles;
                        null != c && (a = Yh(c, i))
                    }
                    return a
                }
                function Ol(n) {
                    return void 0 !== n
                }
                function S(n, t = "") {
                    const e = M(),
                    i = _e(),
                    r = n + 22,
                    o = i.firstCreatePass ? Lo(i, r, 1, t, null) : i.data[r],
                    s = e[r] = function lf(n, t) {
                        return n.createText(t)
                    }
                    (e[11], t);
                    dl(i, e, s, o),
                    Qn(o, !1)
                }
                function jn(n) {
                    return Rl("", n, ""),
                    jn
                }
                function Rl(n, t, e) {
                    const i = M(),
                    r = Bo(i, n, t, e);
                    return r !== te && Ai(i, Lt(), r),
                    Rl
                }
                function pp(n, t, e, i, r) {
                    const o = M(),
                    s = jo(o, n, t, e, i, r);
                    return s !== te && Ai(o, Lt(), s),
                    pp
                }
                function ma(n, t, e) {
                    const i = M();
                    return kt(i, yo(), t) && dn(_e(), We(), i, n, t, i[11], e, !0),
                    ma
                }
                function mp(n, t, e) {
                    const i = M();
                    if (kt(i, yo(), t)) {
                        const o = _e(),
                        s = We();
                        dn(o, s, i, n, t, Wy(Rh(o.data), s, i), e, !0)
                    }
                    return mp
                }
                const Xo = "en-US";
                let Z0 = Xo;
                function bp(n, t, e, i, r) {
                    if (n = G(n), Array.isArray(n))
                        for (let o = 0; o < n.length; o++)
                            bp(n[o], t, e, i, r);
                    else {
                        const o = _e(),
                        s = M();
                        let a = Rr(n) ? n : G(n.provide),
                        c = iy(n);
                        const l = Ct(),
                        d = 1048575 & l.providerIndexes,
                        u = l.directiveStart,
                        h = l.providerIndexes >> 20;
                        if (Rr(n) || !n.multi) {
                            const f = new qs(c, r, p),
                            m = yp(a, t, r ? d : d + h, u);
                            -1 === m ? (zh(nl(l, s), o, a), vp(o, n, t.length), t.push(a), l.directiveStart++, l.directiveEnd++, r && (l.providerIndexes += 1048576), e.push(f), s.push(f)) : (e[m] = f, s[m] = f)
                        } else {
                            const f = yp(a, t, d + h, u),
                            m = yp(a, t, d, d + h),
                            _ = f >= 0 && e[f],
                            C = m >= 0 && e[m];
                            if (r && !C || !r && !_) {
                                zh(nl(l, s), o, a);
                                const D = function iF(n, t, e, i, r) {
                                    const o = new qs(n, e, p);
                                    return o.multi = [],
                                    o.index = t,
                                    o.componentProviders = 0,
                                    ww(o, r, i && !e),
                                    o
                                }
                                (r ? nF : tF, e.length, r, i, c);
                                !r && C && (e[m].providerFactory = D),
                                vp(o, n, t.length, 0),
                                t.push(a),
                                l.directiveStart++,
                                l.directiveEnd++,
                                r && (l.providerIndexes += 1048576),
                                e.push(D),
                                s.push(D)
                            } else
                                vp(o, n, f > -1 ? f : m, ww(e[r ? m : f], c, !r && i));
                            !r && i && C && e[m].componentProviders++
                        }
                    }
                }
                function vp(n, t, e, i) {
                    const r = Rr(t),
                    o = function l1(n) {
                        return !!n.useClass
                    }
                    (t);
                    if (r || o) {
                        const c = (o ? G(t.useClass) : t).prototype.ngOnDestroy;
                        if (c) {
                            const l = n.destroyHooks || (n.destroyHooks = []);
                            if (!r && t.multi) {
                                const d = l.indexOf(e);
                                -1 === d ? l.push(e, [i, c]) : l[d + 1].push(i, c)
                            } else
                                l.push(e, c)
                        }
                    }
                }
                function ww(n, t, e) {
                    return e && n.componentProviders++,
                    n.multi.push(t) - 1
                }
                function yp(n, t, e, i) {
                    for (let r = e; r < i; r++)
                        if (t[r] === n)
                            return r;
                    return -1
                }
                function tF(n, t, e, i) {
                    return wp(this.multi, [])
                }
                function nF(n, t, e, i) {
                    const r = this.multi;
                    let o;
                    if (this.providerFactory) {
                        const s = this.providerFactory.componentProviders,
                        a = Do(e, e[1], this.providerFactory.index, i);
                        o = a.slice(0, s),
                        wp(r, o);
                        for (let c = s; c < a.length; c++)
                            o.push(a[c])
                    } else
                        o = [], wp(r, o);
                    return o
                }
                function wp(n, t) {
                    for (let e = 0; e < n.length; e++)
                        t.push((0, n[e])());
                    return t
                }
                function ge(n, t = []) {
                    return e => {
                        e.providersResolver = (i, r) => function eF(n, t, e) {
                            const i = _e();
                            if (i.firstCreatePass) {
                                const r = Fn(n);
                                bp(e, i.data, i.blueprint, r, !0),
                                bp(t, i.data, i.blueprint, r, !1)
                            }
                        }
                        (i, r ? r(n) : n, t)
                    }
                }
                class Br {}
                class Cw {}
                class Dw extends Br {
                    constructor(t, e) {
                        super(),
                        this._parent = e,
                        this._bootstrapComponents = [],
                        this.destroyCbs = [],
                        this.componentFactoryResolver = new sp(this);
                        const i = nn(t);
                        this._bootstrapComponents = Mi(i.bootstrap),
                        this._r3Injector = _y(t, e, [{
                                        provide: Br,
                                        useValue: this
                                    }, {
                                        provide: Pr,
                                        useValue: this.componentFactoryResolver
                                    }
                                ], Ie(t), new Set(["environment"])),
                        this._r3Injector.resolveInjectorInitializers(),
                        this.instance = this._r3Injector.get(t)
                    }
                    get injector() {
                        return this._r3Injector
                    }
                    destroy() {
                        const t = this._r3Injector;
                        !t.destroyed && t.destroy(),
                        this.destroyCbs.forEach(e => e()),
                        this.destroyCbs = null
                    }
                    onDestroy(t) {
                        this.destroyCbs.push(t)
                    }
                }
                class Cp extends Cw {
                    constructor(t) {
                        super(),
                        this.moduleType = t
                    }
                    create(t) {
                        return new Dw(this.moduleType, t)
                    }
                }
                class oF extends Br {
                    constructor(t, e, i) {
                        super(),
                        this.componentFactoryResolver = new sp(this),
                        this.instance = null;
                        const r = new ny([...t, {
                                        provide: Br,
                                        useValue: this
                                    }, {
                                        provide: Pr,
                                        useValue: this.componentFactoryResolver
                                    }
                                ], e || bl(), i, new Set(["environment"]));
                        this.injector = r,
                        r.resolveInjectorInitializers()
                    }
                    destroy() {
                        this.injector.destroy()
                    }
                    onDestroy(t) {
                        this.injector.onDestroy(t)
                    }
                }
                function Vl(n, t, e = null) {
                    return new oF(n, t, e).injector
                }
                let sF = (() => {
                    class n {
                        constructor(e) {
                            this._injector = e,
                            this.cachedInjectors = new Map
                        }
                        getOrCreateStandaloneInjector(e) {
                            if (!e.standalone)
                                return null;
                            if (!this.cachedInjectors.has(e.id)) {
                                const i = Qv(0, e.type),
                                r = i.length > 0 ? Vl([i], this._injector, `Standalone[${e.type.name}]`) : null;
                                this.cachedInjectors.set(e.id, r)
                            }
                            return this.cachedInjectors.get(e.id)
                        }
                        ngOnDestroy() {
                            try {
                                for (const e of this.cachedInjectors.values())
                                    null !== e && e.destroy()
                            } finally {
                                this.cachedInjectors.clear()
                            }
                        }
                    }
                    return n. \u0275prov = k({
                        token: n,
                        providedIn: "environment",
                        factory: () => new n(v(xi))
                    }),
                    n
                })();
                function xw(n) {
                    n.getStandaloneInjector = t => t.get(sF).getOrCreateStandaloneInjector(n)
                }
                function jt(n, t, e, i) {
                    return Ow(M(), Nt(), n, t, e, i)
                }
                function Hn(n, t, e, i, r) {
                    return function Rw(n, t, e, i, r, o, s) {
                        const a = t + e;
                        return Lr(n, a, r, o) ? ni(n, a + 2, s ? i.call(s, r, o) : i(r, o)) : wa(n, a + 2)
                    }
                    (M(), Nt(), n, t, e, i, r)
                }
                function Iw(n, t, e, i, r, o, s) {
                    return function Fw(n, t, e, i, r, o, s, a, c) {
                        const l = t + e;
                        return function Cn(n, t, e, i, r, o) {
                            const s = Lr(n, t, e, i);
                            return Lr(n, t + 2, r, o) || s
                        }
                        (n, l, r, o, s, a) ? ni(n, l + 4, c ? i.call(c, r, o, s, a) : i(r, o, s, a)) : wa(n, l + 4)
                    }
                    (M(), Nt(), n, t, e, i, r, o, s)
                }
                function wa(n, t) {
                    const e = n[t];
                    return e === te ? void 0 : e
                }
                function Ow(n, t, e, i, r, o) {
                    const s = t + e;
                    return kt(n, s, r) ? ni(n, s + 1, o ? i.call(o, r) : i(r)) : wa(n, s + 1)
                }
                function xp(n) {
                    return t => {
                        setTimeout(n, void 0, t)
                    }
                }
                const re = class MF extends K {
                    constructor(t = !1) {
                        super(),
                        this.__isAsync = t
                    }
                    emit(t) {
                        super.next(t)
                    }
                    subscribe(t, e, i) {
                        let r = t,
                        o = e || (() => null),
                        s = i;
                        if (t && "object" == typeof t) {
                            const c = t;
                            r = c.next?.bind(c),
                            o = c.error?.bind(c),
                            s = c.complete?.bind(c)
                        }
                        this.__isAsync && (o = xp(o), r && (r = xp(r)), s && (s = xp(s)));
                        const a = super.subscribe({
                            next: r,
                            error: o,
                            complete: s
                        });
                        return t instanceof nt && t.add(a),
                        a
                    }
                };
                function TF() {
                    return this._results[Nr()]()
                }
                class jr {
                    constructor(t = !1) {
                        this._emitDistinctChangesOnly = t,
                        this.dirty = !0,
                        this._results = [],
                        this._changesDetected = !1,
                        this._changes = null,
                        this.length = 0,
                        this.first = void 0,
                        this.last = void 0;
                        const e = Nr(),
                        i = jr.prototype;
                        i[e] || (i[e] = TF)
                    }
                    get changes() {
                        return this._changes || (this._changes = new re)
                    }
                    get(t) {
                        return this._results[t]
                    }
                    map(t) {
                        return this._results.map(t)
                    }
                    filter(t) {
                        return this._results.filter(t)
                    }
                    find(t) {
                        return this._results.find(t)
                    }
                    reduce(t, e) {
                        return this._results.reduce(t, e)
                    }
                    forEach(t) {
                        this._results.forEach(t)
                    }
                    some(t) {
                        return this._results.some(t)
                    }
                    toArray() {
                        return this._results.slice()
                    }
                    toString() {
                        return this._results.toString()
                    }
                    reset(t, e) {
                        const i = this;
                        i.dirty = !1;
                        const r = an(t);
                        (this._changesDetected = !function kk(n, t, e) {
                            if (n.length !== t.length)
                                return !1;
                            for (let i = 0; i < n.length; i++) {
                                let r = n[i],
                                o = t[i];
                                if (e && (r = e(r), o = e(o)), o !== r)
                                    return !1
                            }
                            return !0
                        }
                            (i._results, r, e)) && (i._results = r, i.length = r.length, i.last = r[this.length - 1], i.first = r[0])
                    }
                    notifyOnChanges() {
                        this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this)
                    }
                    setDirty() {
                        this.dirty = !0
                    }
                    destroy() {
                        this.changes.complete(),
                        this.changes.unsubscribe()
                    }
                }
                let Un = (() => {
                    class n {}
                    return n.__NG_ELEMENT_ID__ = IF,
                    n
                })();
                const AF = Un,
                kF = class extends AF {
                    constructor(t, e, i) {
                        super(),
                        this._declarationLView = t,
                        this._declarationTContainer = e,
                        this.elementRef = i
                    }
                    createEmbeddedView(t, e) {
                        const i = this._declarationTContainer.tViews,
                        r = Dl(this._declarationLView, i, t, 16, null, i.declTNode, null, null, null, null, e || null);
                        r[17] = this._declarationLView[this._declarationTContainer.index];
                        const s = this._declarationLView[19];
                        return null !== s && (r[19] = s.createEmbeddedView(i)),
                        Yf(i, r, t),
                        new ca(r)
                    }
                };
                function IF() {
                    return Bl(Ct(), M())
                }
                function Bl(n, t) {
                    return 4 & n.type ? new kF(t, n, Po(n, t)) : null
                }
                let Yt = (() => {
                    class n {}
                    return n.__NG_ELEMENT_ID__ = OF,
                    n
                })();
                function OF() {
                    return Hw(Ct(), M())
                }
                const RF = Yt,
                Bw = class extends RF {
                    constructor(t, e, i) {
                        super(),
                        this._lContainer = t,
                        this._hostTNode = e,
                        this._hostLView = i
                    }
                    get element() {
                        return Po(this._hostTNode, this._hostLView)
                    }
                    get injector() {
                        return new xo(this._hostTNode, this._hostLView)
                    }
                    get parentInjector() {
                        const t = il(this._hostTNode, this._hostLView);
                        if (Bb(t)) {
                            const e = Co(t, this._hostLView),
                            i = wo(t);
                            return new xo(e[1].data[i + 8], e)
                        }
                        return new xo(null, this._hostLView)
                    }
                    clear() {
                        for (; this.length > 0; )
                            this.remove(this.length - 1)
                    }
                    get(t) {
                        const e = jw(this._lContainer);
                        return null !== e && e[t] || null
                    }
                    get length() {
                        return this._lContainer.length - 10
                    }
                    createEmbeddedView(t, e, i) {
                        let r,
                        o;
                        "number" == typeof i ? r = i : null != i && (r = i.index, o = i.injector);
                        const s = t.createEmbeddedView(e || {}, o);
                        return this.insert(s, r),
                        s
                    }
                    createComponent(t, e, i, r, o) {
                        const s = t && !function Xs(n) {
                            return "function" == typeof n
                        }
                        (t);
                        let a;
                        if (s)
                            a = e;
                        else {
                            const u = e || {};
                            a = u.index,
                            i = u.injector,
                            r = u.projectableNodes,
                            o = u.environmentInjector || u.ngModuleRef
                        }
                        const c = s ? t : new la(Te(t)),
                        l = i || this.parentInjector;
                        if (!o && null == c.ngModule) {
                            const h = (s ? l : this.parentInjector).get(xi, null);
                            h && (o = h)
                        }
                        const d = c.create(l, r, void 0, o);
                        return this.insert(d.hostView, a),
                        d
                    }
                    insert(t, e) {
                        const i = t._lView,
                        r = i[1];
                        if (function JA(n) {
                            return Pn(n[3])
                        }
                            (i)) {
                            const d = this.indexOf(t);
                            if (-1 !== d)
                                this.detach(d);
                            else {
                                const u = i[3],
                                h = new Bw(u, u[6], u[3]);
                                h.detach(h.indexOf(t))
                            }
                        }
                        const o = this._adjustIndex(e),
                        s = this._lContainer;
                        !function vI(n, t, e, i) {
                            const r = 10 + i,
                            o = e.length;
                            i > 0 && (e[r - 1][4] = t),
                            i < o - 10 ? (t[4] = e[r], Zb(e, 10 + i, t)) : (e.push(t), t[4] = null),
                            t[3] = e;
                            const s = t[17];
                            null !== s && e !== s && function yI(n, t) {
                                const e = n[9];
                                t[16] !== t[3][3][16] && (n[2] = !0),
                                null === e ? n[9] = [t] : e.push(t)
                            }
                            (s, t);
                            const a = t[19];
                            null !== a && a.insertView(n),
                            t[2] |= 64
                        }
                        (r, i, s, o);
                        const a = pf(o, s),
                        c = i[11],
                        l = ll(c, s[7]);
                        return null !== l && function gI(n, t, e, i, r, o) {
                            i[0] = r,
                            i[6] = t,
                            ia(n, i, e, 1, r, o)
                        }
                        (r, s[6], c, i, l, a),
                        t.attachToViewContainerRef(),
                        Zb(Ep(s), o, t),
                        t
                    }
                    move(t, e) {
                        return this.insert(t, e)
                    }
                    indexOf(t) {
                        const e = jw(this._lContainer);
                        return null !== e ? e.indexOf(t) : -1
                    }
                    remove(t) {
                        const e = this._adjustIndex(t, -1),
                        i = uf(this._lContainer, e);
                        i && (ol(Ep(this._lContainer), e), Dv(i[1], i))
                    }
                    detach(t) {
                        const e = this._adjustIndex(t, -1),
                        i = uf(this._lContainer, e);
                        return i && null != ol(Ep(this._lContainer), e) ? new ca(i) : null
                    }
                    _adjustIndex(t, e = 0) {
                        return t ?? this.length + e
                    }
                };
                function jw(n) {
                    return n[8]
                }
                function Ep(n) {
                    return n[8] || (n[8] = [])
                }
                function Hw(n, t) {
                    let e;
                    const i = t[n.index];
                    if (Pn(i))
                        e = i;
                    else {
                        let r;
                        if (8 & n.type)
                            r = ht(i);
                        else {
                            const o = t[11];
                            r = o.createComment("");
                            const s = on(n, t);
                            kr(o, ll(o, s), r, function xI(n, t) {
                                return n.nextSibling(t)
                            }
                                (o, s), !1)
                        }
                        t[n.index] = e = $y(i, t, r, n),
                        El(t, e)
                    }
                    return new Bw(e, n, t)
                }
                class Sp {
                    constructor(t) {
                        this.queryList = t,
                        this.matches = null
                    }
                    clone() {
                        return new Sp(this.queryList)
                    }
                    setDirty() {
                        this.queryList.setDirty()
                    }
                }
                class Mp {
                    constructor(t = []) {
                        this.queries = t
                    }
                    createEmbeddedView(t) {
                        const e = t.queries;
                        if (null !== e) {
                            const i = null !== t.contentQueries ? t.contentQueries[0] : e.length,
                            r = [];
                            for (let o = 0; o < i; o++) {
                                const s = e.getByIndex(o);
                                r.push(this.queries[s.indexInDeclarationView].clone())
                            }
                            return new Mp(r)
                        }
                        return null
                    }
                    insertView(t) {
                        this.dirtyQueriesWithMatches(t)
                    }
                    detachView(t) {
                        this.dirtyQueriesWithMatches(t)
                    }
                    dirtyQueriesWithMatches(t) {
                        for (let e = 0; e < this.queries.length; e++)
                            null !== Ww(t, e).matches && this.queries[e].setDirty()
                    }
                }
                class Uw {
                    constructor(t, e, i = null) {
                        this.predicate = t,
                        this.flags = e,
                        this.read = i
                    }
                }
                class Tp {
                    constructor(t = []) {
                        this.queries = t
                    }
                    elementStart(t, e) {
                        for (let i = 0; i < this.queries.length; i++)
                            this.queries[i].elementStart(t, e)
                    }
                    elementEnd(t) {
                        for (let e = 0; e < this.queries.length; e++)
                            this.queries[e].elementEnd(t)
                    }
                    embeddedTView(t) {
                        let e = null;
                        for (let i = 0; i < this.length; i++) {
                            const r = null !== e ? e.length : 0,
                            o = this.getByIndex(i).embeddedTView(t, r);
                            o && (o.indexInDeclarationView = i, null !== e ? e.push(o) : e = [o])
                        }
                        return null !== e ? new Tp(e) : null
                    }
                    template(t, e) {
                        for (let i = 0; i < this.queries.length; i++)
                            this.queries[i].template(t, e)
                    }
                    getByIndex(t) {
                        return this.queries[t]
                    }
                    get length() {
                        return this.queries.length
                    }
                    track(t) {
                        this.queries.push(t)
                    }
                }
                class Ap {
                    constructor(t, e = -1) {
                        this.metadata = t,
                        this.matches = null,
                        this.indexInDeclarationView = -1,
                        this.crossesNgTemplate = !1,
                        this._appliesToNextNode = !0,
                        this._declarationNodeIndex = e
                    }
                    elementStart(t, e) {
                        this.isApplyingToNode(e) && this.matchTNode(t, e)
                    }
                    elementEnd(t) {
                        this._declarationNodeIndex === t.index && (this._appliesToNextNode = !1)
                    }
                    template(t, e) {
                        this.elementStart(t, e)
                    }
                    embeddedTView(t, e) {
                        return this.isApplyingToNode(t) ? (this.crossesNgTemplate = !0, this.addMatch(-t.index, e), new Ap(this.metadata)) : null
                    }
                    isApplyingToNode(t) {
                        if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                            const e = this._declarationNodeIndex;
                            let i = t.parent;
                            for (; null !== i && 8 & i.type && i.index !== e; )
                                i = i.parent;
                            return e === (null !== i ? i.index : -1)
                        }
                        return this._appliesToNextNode
                    }
                    matchTNode(t, e) {
                        const i = this.metadata.predicate;
                        if (Array.isArray(i))
                            for (let r = 0; r < i.length; r++) {
                                const o = i[r];
                                this.matchTNodeWithReadOption(t, e, NF(e, o)),
                                this.matchTNodeWithReadOption(t, e, rl(e, t, o, !1, !1))
                            }
                        else
                            i === Un ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1) : this.matchTNodeWithReadOption(t, e, rl(e, t, i, !1, !1))
                    }
                    matchTNodeWithReadOption(t, e, i) {
                        if (null !== i) {
                            const r = this.metadata.read;
                            if (null !== r)
                                if (r === se || r === Yt || r === Un && 4 & e.type)
                                    this.addMatch(e.index, -2);
                                else {
                                    const o = rl(e, t, r, !1, !1);
                                    null !== o && this.addMatch(e.index, o)
                                }
                            else
                                this.addMatch(e.index, i)
                        }
                    }
                    addMatch(t, e) {
                        null === this.matches ? this.matches = [t, e] : this.matches.push(t, e)
                    }
                }
                function NF(n, t) {
                    const e = n.localNames;
                    if (null !== e)
                        for (let i = 0; i < e.length; i += 2)
                            if (e[i] === t)
                                return e[i + 1];
                    return null
                }
                function VF(n, t, e, i) {
                    return -1 === e ? function LF(n, t) {
                        return 11 & n.type ? Po(n, t) : 4 & n.type ? Bl(n, t) : null
                    }
                    (t, n) : -2 === e ? function BF(n, t, e) {
                        return e === se ? Po(t, n) : e === Un ? Bl(t, n) : e === Yt ? Hw(t, n) : void 0
                    }
                    (n, t, i) : Do(n, n[1], e, t)
                }
                function $w(n, t, e, i) {
                    const r = t[19].queries[i];
                    if (null === r.matches) {
                        const o = n.data,
                        s = e.matches,
                        a = [];
                        for (let c = 0; c < s.length; c += 2) {
                            const l = s[c];
                            a.push(l < 0 ? null : VF(t, o[l], s[c + 1], e.metadata.read))
                        }
                        r.matches = a
                    }
                    return r.matches
                }
                function kp(n, t, e, i) {
                    const r = n.queries.getByIndex(e),
                    o = r.matches;
                    if (null !== o) {
                        const s = $w(n, t, r, e);
                        for (let a = 0; a < o.length; a += 2) {
                            const c = o[a];
                            if (c > 0)
                                i.push(s[a / 2]);
                            else {
                                const l = o[a + 1],
                                d = t[-c];
                                for (let u = 10; u < d.length; u++) {
                                    const h = d[u];
                                    h[17] === h[3] && kp(h[1], h, l, i)
                                }
                                if (null !== d[9]) {
                                    const u = d[9];
                                    for (let h = 0; h < u.length; h++) {
                                        const f = u[h];
                                        kp(f[1], f, l, i)
                                    }
                                }
                            }
                        }
                    }
                    return i
                }
                function $e(n) {
                    const t = M(),
                    e = _e(),
                    i = Ab();
                    Ph(i + 1);
                    const r = Ww(e, i);
                    if (n.dirty && function QA(n) {
                        return 4 == (4 & n[2])
                    }
                        (t) === (2 == (2 & r.metadata.flags))) {
                        if (null === r.matches)
                            n.reset([]);
                        else {
                            const o = r.crossesNgTemplate ? kp(e, t, i, []) : $w(e, t, r, i);
                            n.reset(o, y1),
                            n.notifyOnChanges()
                        }
                        return !0
                    }
                    return !1
                }
                function Ht(n, t, e) {
                    const i = _e();
                    i.firstCreatePass && (Gw(i, new Uw(n, t, e), -1), 2 == (2 & t) && (i.staticViewQueries = !0)),
                    zw(i, M(), t)
                }
                function ci(n, t, e, i) {
                    const r = _e();
                    if (r.firstCreatePass) {
                        const o = Ct();
                        Gw(r, new Uw(t, e, i), o.index),
                        function HF(n, t) {
                            const e = n.contentQueries || (n.contentQueries = []);
                            t !== (e.length ? e[e.length - 1] : -1) && e.push(n.queries.length - 1, t)
                        }
                        (r, n),
                        2 == (2 & e) && (r.staticContentQueries = !0)
                    }
                    zw(r, M(), e)
                }
                function ze() {
                    return function jF(n, t) {
                        return n[19].queries[t].queryList
                    }
                    (M(), Ab())
                }
                function zw(n, t, e) {
                    const i = new jr(4 == (4 & e));
                    Ly(n, t, i, i.destroy),
                    null === t[19] && (t[19] = new Mp),
                    t[19].queries.push(new Sp(i))
                }
                function Gw(n, t, e) {
                    null === n.queries && (n.queries = new Tp),
                    n.queries.track(new Ap(t, e))
                }
                function Ww(n, t) {
                    return n.queries.getByIndex(t)
                }
                function qw(n, t) {
                    return Bl(n, t)
                }
                function Hl(...n) {}
                const xa = new T("Application Initializer");
                let Ul = (() => {
                    class n {
                        constructor(e) {
                            this.appInits = e,
                            this.resolve = Hl,
                            this.reject = Hl,
                            this.initialized = !1,
                            this.done = !1,
                            this.donePromise = new Promise((i, r) => {
                                this.resolve = i,
                                this.reject = r
                            })
                        }
                        runInitializers() {
                            if (this.initialized)
                                return;
                            const e = [],
                            i = () => {
                                this.done = !0,
                                this.resolve()
                            };
                            if (this.appInits)
                                for (let r = 0; r < this.appInits.length; r++) {
                                    const o = this.appInits[r]();
                                    if (fa(o))
                                        e.push(o);
                                    else if (dp(o)) {
                                        const s = new Promise((a, c) => {
                                            o.subscribe({
                                                complete: a,
                                                error: c
                                            })
                                        });
                                        e.push(s)
                                    }
                                }
                            Promise.all(e).then(() => {
                                i()
                            }).catch(r => {
                                this.reject(r)
                            }),
                            0 === e.length && i(),
                            this.initialized = !0
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(xa, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const es = new T("AppId", {
                    providedIn: "root",
                    factory: function hC() {
                        return `${Fp()}${Fp()}${Fp()}`
                    }
                });
                function Fp() {
                    return String.fromCharCode(97 + Math.floor(25 * Math.random()))
                }
                const fC = new T("Platform Initializer"),
                ts = new T("Platform ID", {
                    providedIn: "platform",
                    factory: () => "unknown"
                }),
                pC = new T("appBootstrapListener"),
                yt = new T("AnimationModuleType");
                let aN = (() => {
                    class n {
                        log(e) {
                            console.log(e)
                        }
                        warn(e) {
                            console.warn(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "platform"
                    }),
                    n
                })();
                const li = new T("LocaleId", {
                    providedIn: "root",
                    factory: () => ce(li, W.Optional | W.SkipSelf) || function cN() {
                        return typeof $localize < "u" && $localize.locale || Xo
                    }
                    ()
                });
                class dN {
                    constructor(t, e) {
                        this.ngModuleFactory = t,
                        this.componentFactories = e
                    }
                }
                let Np = (() => {
                    class n {
                        compileModuleSync(e) {
                            return new Cp(e)
                        }
                        compileModuleAsync(e) {
                            return Promise.resolve(this.compileModuleSync(e))
                        }
                        compileModuleAndAllComponentsSync(e) {
                            const i = this.compileModuleSync(e),
                            o = Mi(nn(e).declarations).reduce((s, a) => {
                                const c = Te(a);
                                return c && s.push(new la(c)),
                                s
                            }, []);
                            return new dN(i, o)
                        }
                        compileModuleAndAllComponentsAsync(e) {
                            return Promise.resolve(this.compileModuleAndAllComponentsSync(e))
                        }
                        clearCache() {}
                        clearCacheFor(e) {}
                        getModuleId(e) {}
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const fN = (() => Promise.resolve(0))();
                function Lp(n) {
                    typeof Zone > "u" ? fN.then(() => {
                        n && n.apply(null, null)
                    }) : Zone.current.scheduleMicroTask("scheduleMicrotask", n)
                }
                class X {
                    constructor({
                        enableLongStackTrace: t = !1,
                        shouldCoalesceEventChangeDetection: e = !1,
                        shouldCoalesceRunChangeDetection: i = !1
                    }) {
                        if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new re(!1), this.onMicrotaskEmpty = new re(!1), this.onStable = new re(!1), this.onError = new re(!1), typeof Zone > "u")
                            throw new E(908, !1);
                        Zone.assertZonePatched();
                        const r = this;
                        r._nesting = 0,
                        r._outer = r._inner = Zone.current,
                        Zone.TaskTrackingZoneSpec && (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec)),
                        t && Zone.longStackTraceZoneSpec && (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
                        r.shouldCoalesceEventChangeDetection = !i && e,
                        r.shouldCoalesceRunChangeDetection = i,
                        r.lastRequestAnimationFrameId = -1,
                        r.nativeRequestAnimationFrame = function pN() {
                            let n = Re.requestAnimationFrame,
                            t = Re.cancelAnimationFrame;
                            if (typeof Zone < "u" && n && t) {
                                const e = n[Zone.__symbol__("OriginalDelegate")];
                                e && (n = e);
                                const i = t[Zone.__symbol__("OriginalDelegate")];
                                i && (t = i)
                            }
                            return {
                                nativeRequestAnimationFrame: n,
                                nativeCancelAnimationFrame: t
                            }
                        }
                        ().nativeRequestAnimationFrame,
                        function _N(n) {
                            const t = () => {
                                !function gN(n) {
                                    n.isCheckStableRunning || -1 !== n.lastRequestAnimationFrameId || (n.lastRequestAnimationFrameId = n.nativeRequestAnimationFrame.call(Re, () => {
                                            n.fakeTopEventTask || (n.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                                                    n.lastRequestAnimationFrameId = -1,
                                                    Bp(n),
                                                    n.isCheckStableRunning = !0,
                                                    Vp(n),
                                                    n.isCheckStableRunning = !1
                                                }, void 0, () => {}, () => {})),
                                            n.fakeTopEventTask.invoke()
                                        }), Bp(n))
                                }
                                (n)
                            };
                            n._inner = n._inner.fork({
                                name: "angular",
                                properties: {
                                    isAngularZone: !0
                                },
                                onInvokeTask: (e, i, r, o, s, a) => {
                                    try {
                                        return _C(n),
                                        e.invokeTask(r, o, s, a)
                                    } finally {
                                        (n.shouldCoalesceEventChangeDetection && "eventTask" === o.type || n.shouldCoalesceRunChangeDetection) && t(),
                                        bC(n)
                                    }
                                },
                                onInvoke: (e, i, r, o, s, a, c) => {
                                    try {
                                        return _C(n),
                                        e.invoke(r, o, s, a, c)
                                    } finally {
                                        n.shouldCoalesceRunChangeDetection && t(),
                                        bC(n)
                                    }
                                },
                                onHasTask: (e, i, r, o) => {
                                    e.hasTask(r, o),
                                    i === r && ("microTask" == o.change ? (n._hasPendingMicrotasks = o.microTask, Bp(n), Vp(n)) : "macroTask" == o.change && (n.hasPendingMacrotasks = o.macroTask))
                                },
                                onHandleError: (e, i, r, o) => (e.handleError(r, o), n.runOutsideAngular(() => n.onError.emit(o)), !1)
                            })
                        }
                        (r)
                    }
                    static isInAngularZone() {
                        return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone")
                    }
                    static assertInAngularZone() {
                        if (!X.isInAngularZone())
                            throw new E(909, !1)
                    }
                    static assertNotInAngularZone() {
                        if (X.isInAngularZone())
                            throw new E(909, !1)
                    }
                    run(t, e, i) {
                        return this._inner.run(t, e, i)
                    }
                    runTask(t, e, i, r) {
                        const o = this._inner,
                        s = o.scheduleEventTask("NgZoneEvent: " + r, t, mN, Hl, Hl);
                        try {
                            return o.runTask(s, e, i)
                        } finally {
                            o.cancelTask(s)
                        }
                    }
                    runGuarded(t, e, i) {
                        return this._inner.runGuarded(t, e, i)
                    }
                    runOutsideAngular(t) {
                        return this._outer.run(t)
                    }
                }
                const mN = {};
                function Vp(n) {
                    if (0 == n._nesting && !n.hasPendingMicrotasks && !n.isStable)
                        try {
                            n._nesting++,
                            n.onMicrotaskEmpty.emit(null)
                        } finally {
                        if (n._nesting--, !n.hasPendingMicrotasks)
                            try {
                                n.runOutsideAngular(() => n.onStable.emit(null))
                            } finally {
                            n.isStable = !0
                        }
                    }
                }
                function Bp(n) {
                    n.hasPendingMicrotasks = !!(n._hasPendingMicrotasks || (n.shouldCoalesceEventChangeDetection || n.shouldCoalesceRunChangeDetection) && -1 !== n.lastRequestAnimationFrameId)
                }
                function _C(n) {
                    n._nesting++,
                    n.isStable && (n.isStable = !1, n.onUnstable.emit(null))
                }
                function bC(n) {
                    n._nesting--,
                    Vp(n)
                }
                class bN {
                    constructor() {
                        this.hasPendingMicrotasks = !1,
                        this.hasPendingMacrotasks = !1,
                        this.isStable = !0,
                        this.onUnstable = new re,
                        this.onMicrotaskEmpty = new re,
                        this.onStable = new re,
                        this.onError = new re
                    }
                    run(t, e, i) {
                        return t.apply(e, i)
                    }
                    runGuarded(t, e, i) {
                        return t.apply(e, i)
                    }
                    runOutsideAngular(t) {
                        return t()
                    }
                    runTask(t, e, i, r) {
                        return t.apply(e, i)
                    }
                }
                const vC = new T(""),
                $l = new T("");
                let Up,
                jp = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._ngZone = e,
                            this.registry = i,
                            this._pendingCount = 0,
                            this._isZoneStable = !0,
                            this._didWork = !1,
                            this._callbacks = [],
                            this.taskTrackingZone = null,
                            Up || (function vN(n) {
                                Up = n
                            }
                                (r), r.addToWindow(i)),
                            this._watchAngularEvents(),
                            e.run(() => {
                                this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone")
                            })
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    this._didWork = !0,
                                    this._isZoneStable = !1
                                }
                            }),
                            this._ngZone.runOutsideAngular(() => {
                                this._ngZone.onStable.subscribe({
                                    next: () => {
                                        X.assertNotInAngularZone(),
                                        Lp(() => {
                                            this._isZoneStable = !0,
                                            this._runCallbacksIfReady()
                                        })
                                    }
                                })
                            })
                        }
                        increasePendingRequestCount() {
                            return this._pendingCount += 1,
                            this._didWork = !0,
                            this._pendingCount
                        }
                        decreasePendingRequestCount() {
                            if (this._pendingCount -= 1, this._pendingCount < 0)
                                throw new Error("pending async requests below zero");
                            return this._runCallbacksIfReady(),
                            this._pendingCount
                        }
                        isStable() {
                            return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                Lp(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let e = this._callbacks.pop();
                                        clearTimeout(e.timeoutId),
                                        e.doneCb(this._didWork)
                                    }
                                    this._didWork = !1
                                });
                            else {
                                let e = this.getPendingTasks();
                                this._callbacks = this._callbacks.filter(i => !i.updateCb || !i.updateCb(e) || (clearTimeout(i.timeoutId), !1)),
                                this._didWork = !0
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(e => ({
                                    source: e.source,
                                    creationLocation: e.creationLocation,
                                    data: e.data
                                })) : []
                        }
                        addCallback(e, i, r) {
                            let o = -1;
                            i && i > 0 && (o = setTimeout(() => {
                                    this._callbacks = this._callbacks.filter(s => s.timeoutId !== o),
                                    e(this._didWork, this.getPendingTasks())
                                }, i)),
                            this._callbacks.push({
                                doneCb: e,
                                timeoutId: o,
                                updateCb: r
                            })
                        }
                        whenStable(e, i, r) {
                            if (r && !this.taskTrackingZone)
                                throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
                            this.addCallback(e, i, r),
                            this._runCallbacksIfReady()
                        }
                        getPendingRequestCount() {
                            return this._pendingCount
                        }
                        registerApplication(e) {
                            this.registry.registerApplication(e, this)
                        }
                        unregisterApplication(e) {
                            this.registry.unregisterApplication(e)
                        }
                        findProviders(e, i, r) {
                            return []
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(X), v(Hp), v($l))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                Hp = (() => {
                    class n {
                        constructor() {
                            this._applications = new Map
                        }
                        registerApplication(e, i) {
                            this._applications.set(e, i)
                        }
                        unregisterApplication(e) {
                            this._applications.delete(e)
                        }
                        unregisterAllApplications() {
                            this._applications.clear()
                        }
                        getTestability(e) {
                            return this._applications.get(e) || null
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values())
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys())
                        }
                        findTestabilityInTree(e, i = !0) {
                            return Up?.findTestabilityInTree(this, e, i) ?? null
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "platform"
                    }),
                    n
                })(),
                Xi = null;
                const yC = new T("AllowMultipleToken"),
                $p = new T("PlatformDestroyListeners");
                class wC {
                    constructor(t, e) {
                        this.name = t,
                        this.token = e
                    }
                }
                function DC(n, t, e = []) {
                    const i = `Platform: ${t}`,
                    r = new T(i);
                    return (o = []) => {
                        let s = zp();
                        if (!s || s.injector.get(yC, !1)) {
                            const a = [...e, ...o, {
                                    provide: r,
                                    useValue: !0
                                }
                            ];
                            n ? n(a) : function CN(n) {
                                if (Xi && !Xi.get(yC, !1))
                                    throw new E(400, !1);
                                Xi = n;
                                const t = n.get(EC);
                                (function CC(n) {
                                    const t = n.get(fC, null);
                                    t && t.forEach(e => e())
                                })(n)
                            }
                            (function xC(n = [], t) {
                                return rt.create({
                                    name: t,
                                    providers: [{
                                            provide: Sf,
                                            useValue: "platform"
                                        }, {
                                            provide: $p,
                                            useValue: new Set([() => Xi = null])
                                        }, ...n]
                                })
                            }
                                (a, i))
                        }
                        return function xN(n) {
                            const t = zp();
                            if (!t)
                                throw new E(401, !1);
                            return t
                        }
                        ()
                    }
                }
                function zp() {
                    return Xi?.get(EC) ?? null
                }
                let EC = (() => {
                    class n {
                        constructor(e) {
                            this._injector = e,
                            this._modules = [],
                            this._destroyListeners = [],
                            this._destroyed = !1
                        }
                        bootstrapModuleFactory(e, i) {
                            const r = function MC(n, t) {
                                let e;
                                return e = "noop" === n ? new bN : ("zone.js" === n ? void 0 : n) || new X(t),
                                e
                            }
                            (i?.ngZone, function SC(n) {
                                return {
                                    enableLongStackTrace: !1,
                                    shouldCoalesceEventChangeDetection: !(!n || !n.ngZoneEventCoalescing) || !1,
                                    shouldCoalesceRunChangeDetection: !(!n || !n.ngZoneRunCoalescing) || !1
                                }
                            }
                                (i)),
                            o = [{
                                    provide: X,
                                    useValue: r
                                }
                            ];
                            return r.run(() => {
                                const s = rt.create({
                                    providers: o,
                                    parent: this.injector,
                                    name: e.moduleType.name
                                }),
                                a = e.create(s),
                                c = a.injector.get(Si, null);
                                if (!c)
                                    throw new E(402, !1);
                                return r.runOutsideAngular(() => {
                                    const l = r.onError.subscribe({
                                        next: d => {
                                            c.handleError(d)
                                        }
                                    });
                                    a.onDestroy(() => {
                                        zl(this._modules, a),
                                        l.unsubscribe()
                                    })
                                }),
                                function TC(n, t, e) {
                                    try {
                                        const i = e();
                                        return fa(i) ? i.catch(r => {
                                            throw t.runOutsideAngular(() => n.handleError(r)),
                                            r
                                        }) : i
                                    } catch (i) {
                                        throw t.runOutsideAngular(() => n.handleError(i)),
                                        i
                                    }
                                }
                                (c, r, () => {
                                    const l = a.injector.get(Ul);
                                    return l.runInitializers(),
                                    l.donePromise.then(() => (function X0(n) {
                                            tn(n, "Expected localeId to be defined"),
                                            "string" == typeof n && (Z0 = n.toLowerCase().replace(/_/g, "-"))
                                        }
                                            (a.injector.get(li, Xo) || Xo), this._moduleDoBootstrap(a), a))
                                })
                            })
                        }
                        bootstrapModule(e, i = []) {
                            const r = AC({}, i);
                            return function yN(n, t, e) {
                                const i = new Cp(e);
                                return Promise.resolve(i)
                            }
                            (0, 0, e).then(o => this.bootstrapModuleFactory(o, r))
                        }
                        _moduleDoBootstrap(e) {
                            const i = e.injector.get(Hr);
                            if (e._bootstrapComponents.length > 0)
                                e._bootstrapComponents.forEach(r => i.bootstrap(r));
                            else {
                                if (!e.instance.ngDoBootstrap)
                                    throw new E(403, !1);
                                e.instance.ngDoBootstrap(i)
                            }
                            this._modules.push(e)
                        }
                        onDestroy(e) {
                            this._destroyListeners.push(e)
                        }
                        get injector() {
                            return this._injector
                        }
                        destroy() {
                            if (this._destroyed)
                                throw new E(404, !1);
                            this._modules.slice().forEach(i => i.destroy()),
                            this._destroyListeners.forEach(i => i());
                            const e = this._injector.get($p, null);
                            e && (e.forEach(i => i()), e.clear()),
                            this._destroyed = !0
                        }
                        get destroyed() {
                            return this._destroyed
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(rt))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "platform"
                    }),
                    n
                })();
                function AC(n, t) {
                    return Array.isArray(t) ? t.reduce(AC, n) : {
                        ...n,
                        ...t
                    }
                }
                let Hr = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._zone = e,
                            this._injector = i,
                            this._exceptionHandler = r,
                            this._bootstrapListeners = [],
                            this._views = [],
                            this._runningTick = !1,
                            this._stable = !0,
                            this._destroyed = !1,
                            this._destroyListeners = [],
                            this.componentTypes = [],
                            this.components = [],
                            this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                                next: () => {
                                    this._zone.run(() => {
                                        this.tick()
                                    })
                                }
                            });
                            const o = new Ae(a => {
                                this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks,
                                this._zone.runOutsideAngular(() => {
                                    a.next(this._stable),
                                    a.complete()
                                })
                            }),
                            s = new Ae(a => {
                                let c;
                                this._zone.runOutsideAngular(() => {
                                    c = this._zone.onStable.subscribe(() => {
                                        X.assertNotInAngularZone(),
                                        Lp(() => {
                                            !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0, a.next(!0))
                                        })
                                    })
                                });
                                const l = this._zone.onUnstable.subscribe(() => {
                                    X.assertInAngularZone(),
                                    this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => {
                                            a.next(!1)
                                        }))
                                });
                                return () => {
                                    c.unsubscribe(),
                                    l.unsubscribe()
                                }
                            });
                            this.isStable = Cr(o, s.pipe(lh()))
                        }
                        get destroyed() {
                            return this._destroyed
                        }
                        get injector() {
                            return this._injector
                        }
                        bootstrap(e, i) {
                            const r = e instanceof ry;
                            if (!this._injector.get(Ul).done)
                                throw !r && function mo(n) {
                                    const t = Te(n) || St(n) || Pt(n);
                                    return null !== t && t.standalone
                                }
                            (e),
                            new E(405, false);
                            let s;
                            s = r ? e : this._injector.get(Pr).resolveComponentFactory(e),
                            this.componentTypes.push(s.componentType);
                            const a = function wN(n) {
                                return n.isBoundToModule
                            }
                            (s) ? void 0 : this._injector.get(Br),
                            l = s.create(rt.NULL, [], i || s.selector, a),
                            d = l.location.nativeElement,
                            u = l.injector.get(vC, null);
                            return u?.registerApplication(d),
                            l.onDestroy(() => {
                                this.detachView(l.hostView),
                                zl(this.components, l),
                                u?.unregisterApplication(d)
                            }),
                            this._loadComponent(l),
                            l
                        }
                        tick() {
                            if (this._runningTick)
                                throw new E(101, !1);
                            try {
                                this._runningTick = !0;
                                for (let e of this._views)
                                    e.detectChanges()
                            } catch (e) {
                                this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e))
                            } finally {
                                this._runningTick = !1
                            }
                        }
                        attachView(e) {
                            const i = e;
                            this._views.push(i),
                            i.attachToAppRef(this)
                        }
                        detachView(e) {
                            const i = e;
                            zl(this._views, i),
                            i.detachFromAppRef()
                        }
                        _loadComponent(e) {
                            this.attachView(e.hostView),
                            this.tick(),
                            this.components.push(e),
                            this._injector.get(pC, []).concat(this._bootstrapListeners).forEach(r => r(e))
                        }
                        ngOnDestroy() {
                            if (!this._destroyed)
                                try {
                                    this._destroyListeners.forEach(e => e()),
                                    this._views.slice().forEach(e => e.destroy()),
                                    this._onMicrotaskEmptySubscription.unsubscribe()
                                } finally {
                                this._destroyed = !0,
                                this._views = [],
                                this._bootstrapListeners = [],
                                this._destroyListeners = []
                            }
                        }
                        onDestroy(e) {
                            return this._destroyListeners.push(e),
                            () => zl(this._destroyListeners, e)
                        }
                        destroy() {
                            if (this._destroyed)
                                throw new E(406, !1);
                            const e = this._injector;
                            e.destroy && !e.destroyed && e.destroy()
                        }
                        get viewCount() {
                            return this._views.length
                        }
                        warnIfDestroyed() {}
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(X), v(xi), v(Si))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function zl(n, t) {
                    const e = n.indexOf(t);
                    e > -1 && n.splice(e, 1)
                }
                let $t = (() => {
                    class n {}
                    return n.__NG_ELEMENT_ID__ = MN,
                    n
                })();
                function MN(n) {
                    return function TN(n, t, e) {
                        if (qc(n) && !e) {
                            const i = sn(n.index, t);
                            return new ca(i, i)
                        }
                        return 47 & n.type ? new ca(t[16], t) : null
                    }
                    (Ct(), M(), 16 == (16 & n))
                }
                class PC {
                    constructor() {}
                    supports(t) {
                        return da(t)
                    }
                    create(t) {
                        return new PN(t)
                    }
                }
                const RN = (n, t) => t;
                class PN {
                    constructor(t) {
                        this.length = 0,
                        this._linkedRecords = null,
                        this._unlinkedRecords = null,
                        this._previousItHead = null,
                        this._itHead = null,
                        this._itTail = null,
                        this._additionsHead = null,
                        this._additionsTail = null,
                        this._movesHead = null,
                        this._movesTail = null,
                        this._removalsHead = null,
                        this._removalsTail = null,
                        this._identityChangesHead = null,
                        this._identityChangesTail = null,
                        this._trackByFn = t || RN
                    }
                    forEachItem(t) {
                        let e;
                        for (e = this._itHead; null !== e; e = e._next)
                            t(e)
                    }
                    forEachOperation(t) {
                        let e = this._itHead,
                        i = this._removalsHead,
                        r = 0,
                        o = null;
                        for (; e || i; ) {
                            const s = !i || e && e.currentIndex < NC(i, r, o) ? e : i,
                            a = NC(s, r, o),
                            c = s.currentIndex;
                            if (s === i)
                                r--, i = i._nextRemoved;
                            else if (e = e._next, null == s.previousIndex)
                                r++;
                            else {
                                o || (o = []);
                                const l = a - r,
                                d = c - r;
                                if (l != d) {
                                    for (let h = 0; h < l; h++) {
                                        const f = h < o.length ? o[h] : o[h] = 0,
                                        m = f + h;
                                        d <= m && m < l && (o[h] = f + 1)
                                    }
                                    o[s.previousIndex] = d - l
                                }
                            }
                            a !== c && t(s, a, c)
                        }
                    }
                    forEachPreviousItem(t) {
                        let e;
                        for (e = this._previousItHead; null !== e; e = e._nextPrevious)
                            t(e)
                    }
                    forEachAddedItem(t) {
                        let e;
                        for (e = this._additionsHead; null !== e; e = e._nextAdded)
                            t(e)
                    }
                    forEachMovedItem(t) {
                        let e;
                        for (e = this._movesHead; null !== e; e = e._nextMoved)
                            t(e)
                    }
                    forEachRemovedItem(t) {
                        let e;
                        for (e = this._removalsHead; null !== e; e = e._nextRemoved)
                            t(e)
                    }
                    forEachIdentityChange(t) {
                        let e;
                        for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange)
                            t(e)
                    }
                    diff(t) {
                        if (null == t && (t = []), !da(t))
                            throw new E(900, !1);
                        return this.check(t) ? this : null
                    }
                    onDestroy() {}
                    check(t) {
                        this._reset();
                        let r,
                        o,
                        s,
                        e = this._itHead,
                        i = !1;
                        if (Array.isArray(t)) {
                            this.length = t.length;
                            for (let a = 0; a < this.length; a++)
                                o = t[a], s = this._trackByFn(a, o), null !== e && Object.is(e.trackById, s) ? (i && (e = this._verifyReinsertion(e, o, s, a)), Object.is(e.item, o) || this._addIdentityChange(e, o)) : (e = this._mismatch(e, o, s, a), i = !0), e = e._next
                        } else
                            r = 0, function fR(n, t) {
                                if (Array.isArray(n))
                                    for (let e = 0; e < n.length; e++)
                                        t(n[e]);
                                else {
                                    const e = n[Nr()]();
                                    let i;
                                    for (; !(i = e.next()).done; )
                                        t(i.value)
                                }
                            }
                        (t, a => {
                            s = this._trackByFn(r, a),
                            null !== e && Object.is(e.trackById, s) ? (i && (e = this._verifyReinsertion(e, a, s, r)), Object.is(e.item, a) || this._addIdentityChange(e, a)) : (e = this._mismatch(e, a, s, r), i = !0),
                            e = e._next,
                            r++
                        }),
                        this.length = r;
                        return this._truncate(e),
                        this.collection = t,
                        this.isDirty
                    }
                    get isDirty() {
                        return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
                    }
                    _reset() {
                        if (this.isDirty) {
                            let t;
                            for (t = this._previousItHead = this._itHead; null !== t; t = t._next)
                                t._nextPrevious = t._next;
                            for (t = this._additionsHead; null !== t; t = t._nextAdded)
                                t.previousIndex = t.currentIndex;
                            for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = t._nextMoved)
                                t.previousIndex = t.currentIndex;
                            this._movesHead = this._movesTail = null,
                            this._removalsHead = this._removalsTail = null,
                            this._identityChangesHead = this._identityChangesTail = null
                        }
                    }
                    _mismatch(t, e, i, r) {
                        let o;
                        return null === t ? o = this._itTail : (o = t._prev, this._remove(t)),
                        null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null)) ? (Object.is(t.item, e) || this._addIdentityChange(t, e), this._reinsertAfter(t, o, r)) : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(i, r)) ? (Object.is(t.item, e) || this._addIdentityChange(t, e), this._moveAfter(t, o, r)) : t = this._addAfter(new FN(e, i), o, r),
                        t
                    }
                    _verifyReinsertion(t, e, i, r) {
                        let o = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null);
                        return null !== o ? t = this._reinsertAfter(o, t._prev, r) : t.currentIndex != r && (t.currentIndex = r, this._addToMoves(t, r)),
                        t
                    }
                    _truncate(t) {
                        for (; null !== t; ) {
                            const e = t._next;
                            this._addToRemovals(this._unlink(t)),
                            t = e
                        }
                        null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
                        null !== this._additionsTail && (this._additionsTail._nextAdded = null),
                        null !== this._movesTail && (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
                    }
                    _reinsertAfter(t, e, i) {
                        null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
                        const r = t._prevRemoved,
                        o = t._nextRemoved;
                        return null === r ? this._removalsHead = o : r._nextRemoved = o,
                        null === o ? this._removalsTail = r : o._prevRemoved = r,
                        this._insertAfter(t, e, i),
                        this._addToMoves(t, i),
                        t
                    }
                    _moveAfter(t, e, i) {
                        return this._unlink(t),
                        this._insertAfter(t, e, i),
                        this._addToMoves(t, i),
                        t
                    }
                    _addAfter(t, e, i) {
                        return this._insertAfter(t, e, i),
                        this._additionsTail = null === this._additionsTail ? this._additionsHead = t : this._additionsTail._nextAdded = t,
                        t
                    }
                    _insertAfter(t, e, i) {
                        const r = null === e ? this._itHead : e._next;
                        return t._next = r,
                        t._prev = e,
                        null === r ? this._itTail = t : r._prev = t,
                        null === e ? this._itHead = t : e._next = t,
                        null === this._linkedRecords && (this._linkedRecords = new FC),
                        this._linkedRecords.put(t),
                        t.currentIndex = i,
                        t
                    }
                    _remove(t) {
                        return this._addToRemovals(this._unlink(t))
                    }
                    _unlink(t) {
                        null !== this._linkedRecords && this._linkedRecords.remove(t);
                        const e = t._prev,
                        i = t._next;
                        return null === e ? this._itHead = i : e._next = i,
                        null === i ? this._itTail = e : i._prev = e,
                        t
                    }
                    _addToMoves(t, e) {
                        return t.previousIndex === e || (this._movesTail = null === this._movesTail ? this._movesHead = t : this._movesTail._nextMoved = t),
                        t
                    }
                    _addToRemovals(t) {
                        return null === this._unlinkedRecords && (this._unlinkedRecords = new FC),
                        this._unlinkedRecords.put(t),
                        t.currentIndex = null,
                        t._nextRemoved = null,
                        null === this._removalsTail ? (this._removalsTail = this._removalsHead = t, t._prevRemoved = null) : (t._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = t),
                        t
                    }
                    _addIdentityChange(t, e) {
                        return t.item = e,
                        this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t : this._identityChangesTail._nextIdentityChange = t,
                        t
                    }
                }
                class FN {
                    constructor(t, e) {
                        this.item = t,
                        this.trackById = e,
                        this.currentIndex = null,
                        this.previousIndex = null,
                        this._nextPrevious = null,
                        this._prev = null,
                        this._next = null,
                        this._prevDup = null,
                        this._nextDup = null,
                        this._prevRemoved = null,
                        this._nextRemoved = null,
                        this._nextAdded = null,
                        this._nextMoved = null,
                        this._nextIdentityChange = null
                    }
                }
                class NN {
                    constructor() {
                        this._head = null,
                        this._tail = null
                    }
                    add(t) {
                        null === this._head ? (this._head = this._tail = t, t._nextDup = null, t._prevDup = null) : (this._tail._nextDup = t, t._prevDup = this._tail, t._nextDup = null, this._tail = t)
                    }
                    get(t, e) {
                        let i;
                        for (i = this._head; null !== i; i = i._nextDup)
                            if ((null === e || e <= i.currentIndex) && Object.is(i.trackById, t))
                                return i;
                        return null
                    }
                    remove(t) {
                        const e = t._prevDup,
                        i = t._nextDup;
                        return null === e ? this._head = i : e._nextDup = i,
                        null === i ? this._tail = e : i._prevDup = e,
                        null === this._head
                    }
                }
                class FC {
                    constructor() {
                        this.map = new Map
                    }
                    put(t) {
                        const e = t.trackById;
                        let i = this.map.get(e);
                        i || (i = new NN, this.map.set(e, i)),
                        i.add(t)
                    }
                    get(t, e) {
                        const r = this.map.get(t);
                        return r ? r.get(t, e) : null
                    }
                    remove(t) {
                        const e = t.trackById;
                        return this.map.get(e).remove(t) && this.map.delete(e),
                        t
                    }
                    get isEmpty() {
                        return 0 === this.map.size
                    }
                    clear() {
                        this.map.clear()
                    }
                }
                function NC(n, t, e) {
                    const i = n.previousIndex;
                    if (null === i)
                        return i;
                    let r = 0;
                    return e && i < e.length && (r = e[i]),
                    i + t + r
                }
                class LC {
                    constructor() {}
                    supports(t) {
                        return t instanceof Map || cp(t)
                    }
                    create() {
                        return new LN
                    }
                }
                class LN {
                    constructor() {
                        this._records = new Map,
                        this._mapHead = null,
                        this._appendAfter = null,
                        this._previousMapHead = null,
                        this._changesHead = null,
                        this._changesTail = null,
                        this._additionsHead = null,
                        this._additionsTail = null,
                        this._removalsHead = null,
                        this._removalsTail = null
                    }
                    get isDirty() {
                        return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
                    }
                    forEachItem(t) {
                        let e;
                        for (e = this._mapHead; null !== e; e = e._next)
                            t(e)
                    }
                    forEachPreviousItem(t) {
                        let e;
                        for (e = this._previousMapHead; null !== e; e = e._nextPrevious)
                            t(e)
                    }
                    forEachChangedItem(t) {
                        let e;
                        for (e = this._changesHead; null !== e; e = e._nextChanged)
                            t(e)
                    }
                    forEachAddedItem(t) {
                        let e;
                        for (e = this._additionsHead; null !== e; e = e._nextAdded)
                            t(e)
                    }
                    forEachRemovedItem(t) {
                        let e;
                        for (e = this._removalsHead; null !== e; e = e._nextRemoved)
                            t(e)
                    }
                    diff(t) {
                        if (t) {
                            if (!(t instanceof Map || cp(t)))
                                throw new E(900, !1)
                        } else
                            t = new Map;
                        return this.check(t) ? this : null
                    }
                    onDestroy() {}
                    check(t) {
                        this._reset();
                        let e = this._mapHead;
                        if (this._appendAfter = null, this._forEach(t, (i, r) => {
                                if (e && e.key === r)
                                    this._maybeAddToChanges(e, i) , this._appendAfter = e, e = e._next;
                                    else {
                                        const o = this._getOrCreateRecordForKey(r, i);
                                        e = this._insertBeforeOrAppend(e, o)
                                    }
                                }), e) {
                                e._prev && (e._prev._next = null),
                                this._removalsHead = e;
                                for (let i = e; null !== i; i = i._nextRemoved)
                                    i === this._mapHead && (this._mapHead = null), this._records.delete(i.key), i._nextRemoved = i._next, i.previousValue = i.currentValue, i.currentValue = null, i._prev = null, i._next = null
                            }
                        return this._changesTail && (this._changesTail._nextChanged = null),
                        this._additionsTail && (this._additionsTail._nextAdded = null),
                        this.isDirty
                    }
                    _insertBeforeOrAppend(t, e) {
                        if (t) {
                            const i = t._prev;
                            return e._next = t,
                            e._prev = i,
                            t._prev = e,
                            i && (i._next = e),
                            t === this._mapHead && (this._mapHead = e),
                            this._appendAfter = t,
                            t
                        }
                        return this._appendAfter ? (this._appendAfter._next = e, e._prev = this._appendAfter) : this._mapHead = e,
                        this._appendAfter = e,
                        null
                    }
                    _getOrCreateRecordForKey(t, e) {
                        if (this._records.has(t)) {
                            const r = this._records.get(t);
                            this._maybeAddToChanges(r, e);
                            const o = r._prev,
                            s = r._next;
                            return o && (o._next = s),
                            s && (s._prev = o),
                            r._next = null,
                            r._prev = null,
                            r
                        }
                        const i = new VN(t);
                        return this._records.set(t, i),
                        i.currentValue = e,
                        this._addToAdditions(i),
                        i
                    }
                    _reset() {
                        if (this.isDirty) {
                            let t;
                            for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)
                                t._nextPrevious = t._next;
                            for (t = this._changesHead; null !== t; t = t._nextChanged)
                                t.previousValue = t.currentValue;
                            for (t = this._additionsHead; null != t; t = t._nextAdded)
                                t.previousValue = t.currentValue;
                            this._changesHead = this._changesTail = null,
                            this._additionsHead = this._additionsTail = null,
                            this._removalsHead = null
                        }
                    }
                    _maybeAddToChanges(t, e) {
                        Object.is(e, t.currentValue) || (t.previousValue = t.currentValue, t.currentValue = e, this._addToChanges(t))
                    }
                    _addToAdditions(t) {
                        null === this._additionsHead ? this._additionsHead = this._additionsTail = t : (this._additionsTail._nextAdded = t, this._additionsTail = t)
                    }
                    _addToChanges(t) {
                        null === this._changesHead ? this._changesHead = this._changesTail = t : (this._changesTail._nextChanged = t, this._changesTail = t)
                    }
                    _forEach(t, e) {
                        t instanceof Map ? t.forEach(e) : Object.keys(t).forEach(i => e(t[i], i))
                    }
                }
                class VN {
                    constructor(t) {
                        this.key = t,
                        this.previousValue = null,
                        this.currentValue = null,
                        this._nextPrevious = null,
                        this._next = null,
                        this._prev = null,
                        this._nextAdded = null,
                        this._nextRemoved = null,
                        this._nextChanged = null
                    }
                }
                function VC() {
                    return new ql([new PC])
                }
                let ql = (() => {
                    class n {
                        constructor(e) {
                            this.factories = e
                        }
                        static create(e, i) {
                            if (null != i) {
                                const r = i.factories.slice();
                                e = e.concat(r)
                            }
                            return new n(e)
                        }
                        static extend(e) {
                            return {
                                provide: n,
                                useFactory: i => n.create(e, i || VC()),
                                deps: [[n, new ko, new Wi]]
                            }
                        }
                        find(e) {
                            const i = this.factories.find(r => r.supports(e));
                            if (null != i)
                                return i;
                            throw new E(901, !1)
                        }
                    }
                    return n. \u0275prov = k({
                        token: n,
                        providedIn: "root",
                        factory: VC
                    }),
                    n
                })();
                function BC() {
                    return new Ea([new LC])
                }
                let Ea = (() => {
                    class n {
                        constructor(e) {
                            this.factories = e
                        }
                        static create(e, i) {
                            if (i) {
                                const r = i.factories.slice();
                                e = e.concat(r)
                            }
                            return new n(e)
                        }
                        static extend(e) {
                            return {
                                provide: n,
                                useFactory: i => n.create(e, i || BC()),
                                deps: [[n, new ko, new Wi]]
                            }
                        }
                        find(e) {
                            const i = this.factories.find(r => r.supports(e));
                            if (i)
                                return i;
                            throw new E(901, !1)
                        }
                    }
                    return n. \u0275prov = k({
                        token: n,
                        providedIn: "root",
                        factory: BC
                    }),
                    n
                })();
                const HN = DC(null, "core", []);
                let UN = (() => {
                    class n {
                        constructor(e) {}
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Hr))
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })();
                let Yl = null;
                function di() {
                    return Yl
                }
                class GN {}
                const Q = new T("DocumentToken");
                let Kp = (() => {
                    class n {
                        historyGo(e) {
                            throw new Error("Not implemented")
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return function WN() {
                                return v(jC)
                            }
                            ()
                        },
                        providedIn: "platform"
                    }),
                    n
                })();
                const qN = new T("Location Initialized");
                let jC = (() => {
                    class n extends Kp {
                        constructor(e) {
                            super(),
                            this._doc = e,
                            this._init()
                        }
                        _init() {
                            this.location = window.location,
                            this._history = window.history
                        }
                        getBaseHrefFromDOM() {
                            return di().getBaseHref(this._doc)
                        }
                        onPopState(e) {
                            const i = di().getGlobalEventTarget(this._doc, "window");
                            return i.addEventListener("popstate", e, !1),
                            () => i.removeEventListener("popstate", e)
                        }
                        onHashChange(e) {
                            const i = di().getGlobalEventTarget(this._doc, "window");
                            return i.addEventListener("hashchange", e, !1),
                            () => i.removeEventListener("hashchange", e)
                        }
                        get href() {
                            return this.location.href
                        }
                        get protocol() {
                            return this.location.protocol
                        }
                        get hostname() {
                            return this.location.hostname
                        }
                        get port() {
                            return this.location.port
                        }
                        get pathname() {
                            return this.location.pathname
                        }
                        get search() {
                            return this.location.search
                        }
                        get hash() {
                            return this.location.hash
                        }
                        set pathname(e) {
                            this.location.pathname = e
                        }
                        pushState(e, i, r) {
                            HC() ? this._history.pushState(e, i, r) : this.location.hash = r
                        }
                        replaceState(e, i, r) {
                            HC() ? this._history.replaceState(e, i, r) : this.location.hash = r
                        }
                        forward() {
                            this._history.forward()
                        }
                        back() {
                            this._history.back()
                        }
                        historyGo(e = 0) {
                            this._history.go(e)
                        }
                        getState() {
                            return this._history.state
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return function YN() {
                                return new jC(v(Q))
                            }
                            ()
                        },
                        providedIn: "platform"
                    }),
                    n
                })();
                function HC() {
                    return !!window.history.pushState
                }
                function Zp(n, t) {
                    if (0 == n.length)
                        return t;
                    if (0 == t.length)
                        return n;
                    let e = 0;
                    return n.endsWith("/") && e++,
                    t.startsWith("/") && e++,
                    2 == e ? n + t.substring(1) : 1 == e ? n + t : n + "/" + t
                }
                function UC(n) {
                    const t = n.match(/#|\?|$/),
                    e = t && t.index || n.length;
                    return n.slice(0, e - ("/" === n[e - 1] ? 1 : 0)) + n.slice(e)
                }
                function Ii(n) {
                    return n && "?" !== n[0] ? "?" + n : n
                }
                let $r = (() => {
                    class n {
                        historyGo(e) {
                            throw new Error("Not implemented")
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return ce(zC)
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                const $C = new T("appBaseHref");
                let zC = (() => {
                    class n extends $r {
                        constructor(e, i) {
                            super(),
                            this._platformLocation = e,
                            this._removeListenerFns = [],
                            this._baseHref = i ?? this._platformLocation.getBaseHrefFromDOM() ?? ce(Q).location?.origin ?? ""
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        prepareExternalUrl(e) {
                            return Zp(this._baseHref, e)
                        }
                        path(e = !1) {
                            const i = this._platformLocation.pathname + Ii(this._platformLocation.search),
                            r = this._platformLocation.hash;
                            return r && e ? `${i}${r}` : i
                        }
                        pushState(e, i, r, o) {
                            const s = this.prepareExternalUrl(r + Ii(o));
                            this._platformLocation.pushState(e, i, s)
                        }
                        replaceState(e, i, r, o) {
                            const s = this.prepareExternalUrl(r + Ii(o));
                            this._platformLocation.replaceState(e, i, s)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo?.(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Kp), v($C, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                KN = (() => {
                    class n extends $r {
                        constructor(e, i) {
                            super(),
                            this._platformLocation = e,
                            this._baseHref = "",
                            this._removeListenerFns = [],
                            null != i && (this._baseHref = i)
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        path(e = !1) {
                            let i = this._platformLocation.hash;
                            return null == i && (i = "#"),
                            i.length > 0 ? i.substring(1) : i
                        }
                        prepareExternalUrl(e) {
                            const i = Zp(this._baseHref, e);
                            return i.length > 0 ? "#" + i : i
                        }
                        pushState(e, i, r, o) {
                            let s = this.prepareExternalUrl(r + Ii(o));
                            0 == s.length && (s = this._platformLocation.pathname),
                            this._platformLocation.pushState(e, i, s)
                        }
                        replaceState(e, i, r, o) {
                            let s = this.prepareExternalUrl(r + Ii(o));
                            0 == s.length && (s = this._platformLocation.pathname),
                            this._platformLocation.replaceState(e, i, s)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo?.(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Kp), v($C, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                Sa = (() => {
                    class n {
                        constructor(e) {
                            this._subject = new re,
                            this._urlChangeListeners = [],
                            this._urlChangeSubscription = null,
                            this._locationStrategy = e;
                            const i = this._locationStrategy.getBaseHref();
                            this._baseHref = UC(GC(i)),
                            this._locationStrategy.onPopState(r => {
                                this._subject.emit({
                                    url: this.path(!0),
                                    pop: !0,
                                    state: r.state,
                                    type: r.type
                                })
                            })
                        }
                        ngOnDestroy() {
                            this._urlChangeSubscription?.unsubscribe(),
                            this._urlChangeListeners = []
                        }
                        path(e = !1) {
                            return this.normalize(this._locationStrategy.path(e))
                        }
                        getState() {
                            return this._locationStrategy.getState()
                        }
                        isCurrentPathEqualTo(e, i = "") {
                            return this.path() == this.normalize(e + Ii(i))
                        }
                        normalize(e) {
                            return n.stripTrailingSlash(function XN(n, t) {
                                return n && t.startsWith(n) ? t.substring(n.length) : t
                            }
                                (this._baseHref, GC(e)))
                        }
                        prepareExternalUrl(e) {
                            return e && "/" !== e[0] && (e = "/" + e),
                            this._locationStrategy.prepareExternalUrl(e)
                        }
                        go(e, i = "", r = null) {
                            this._locationStrategy.pushState(r, "", e, i),
                            this._notifyUrlChangeListeners(this.prepareExternalUrl(e + Ii(i)), r)
                        }
                        replaceState(e, i = "", r = null) {
                            this._locationStrategy.replaceState(r, "", e, i),
                            this._notifyUrlChangeListeners(this.prepareExternalUrl(e + Ii(i)), r)
                        }
                        forward() {
                            this._locationStrategy.forward()
                        }
                        back() {
                            this._locationStrategy.back()
                        }
                        historyGo(e = 0) {
                            this._locationStrategy.historyGo?.(e)
                        }
                        onUrlChange(e) {
                            return this._urlChangeListeners.push(e),
                            this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(i => {
                                    this._notifyUrlChangeListeners(i.url, i.state)
                                })),
                            () => {
                                const i = this._urlChangeListeners.indexOf(e);
                                this._urlChangeListeners.splice(i, 1),
                                0 === this._urlChangeListeners.length && (this._urlChangeSubscription?.unsubscribe(), this._urlChangeSubscription = null)
                            }
                        }
                        _notifyUrlChangeListeners(e = "", i) {
                            this._urlChangeListeners.forEach(r => r(e, i))
                        }
                        subscribe(e, i, r) {
                            return this._subject.subscribe({
                                next: e,
                                error: i,
                                complete: r
                            })
                        }
                    }
                    return n.normalizeQueryParams = Ii,
                    n.joinWithSlash = Zp,
                    n.stripTrailingSlash = UC,
                    n. \u0275fac = function (e) {
                        return new(e || n)(v($r))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return function ZN() {
                                return new Sa(v($r))
                            }
                            ()
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                function GC(n) {
                    return n.replace(/\/index.html$/, "")
                }
                function eD(n, t) {
                    t = encodeURIComponent(t);
                    for (const e of n.split(";")) {
                        const i = e.indexOf("="),
                        [r, o] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
                        if (r.trim() === t)
                            return decodeURIComponent(o)
                    }
                    return null
                }
                let Gn = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this._iterableDiffers = e,
                            this._keyValueDiffers = i,
                            this._ngEl = r,
                            this._renderer = o,
                            this._iterableDiffer = null,
                            this._keyValueDiffer = null,
                            this._initialClasses = [],
                            this._rawClass = null
                        }
                        set klass(e) {
                            this._removeClasses(this._initialClasses),
                            this._initialClasses = "string" == typeof e ? e.split(/\s+/) : [],
                            this._applyClasses(this._initialClasses),
                            this._applyClasses(this._rawClass)
                        }
                        set ngClass(e) {
                            this._removeClasses(this._rawClass),
                            this._applyClasses(this._initialClasses),
                            this._iterableDiffer = null,
                            this._keyValueDiffer = null,
                            this._rawClass = "string" == typeof e ? e.split(/\s+/) : e,
                            this._rawClass && (da(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create())
                        }
                        ngDoCheck() {
                            if (this._iterableDiffer) {
                                const e = this._iterableDiffer.diff(this._rawClass);
                                e && this._applyIterableChanges(e)
                            } else if (this._keyValueDiffer) {
                                const e = this._keyValueDiffer.diff(this._rawClass);
                                e && this._applyKeyValueChanges(e)
                            }
                        }
                        _applyKeyValueChanges(e) {
                            e.forEachAddedItem(i => this._toggleClass(i.key, i.currentValue)),
                            e.forEachChangedItem(i => this._toggleClass(i.key, i.currentValue)),
                            e.forEachRemovedItem(i => {
                                i.previousValue && this._toggleClass(i.key, !1)
                            })
                        }
                        _applyIterableChanges(e) {
                            e.forEachAddedItem(i => {
                                if ("string" != typeof i.item)
                                    throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${Ie(i.item)}`);
                                this._toggleClass(i.item, !0)
                            }),
                            e.forEachRemovedItem(i => this._toggleClass(i.item, !1))
                        }
                        _applyClasses(e) {
                            e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !0)) : Object.keys(e).forEach(i => this._toggleClass(i, !!e[i])))
                        }
                        _removeClasses(e) {
                            e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !1)) : Object.keys(e).forEach(i => this._toggleClass(i, !1)))
                        }
                        _toggleClass(e, i) {
                            (e = e.trim()) && e.split(/\s+/g).forEach(r => {
                                i ? this._renderer.addClass(this._ngEl.nativeElement, r) : this._renderer.removeClass(this._ngEl.nativeElement, r)
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(ql), p(Ea), p(se), p(Ei))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngClass", ""]],
                        inputs: {
                            klass: ["class", "klass"],
                            ngClass: "ngClass"
                        },
                        standalone: !0
                    }),
                    n
                })();
                class FL {
                    constructor(t, e, i, r) {
                        this.$implicit = t,
                        this.ngForOf = e,
                        this.index = i,
                        this.count = r
                    }
                    get first() {
                        return 0 === this.index
                    }
                    get last() {
                        return this.index === this.count - 1
                    }
                    get even() {
                        return this.index % 2 == 0
                    }
                    get odd() {
                        return !this.even
                    }
                }
                let Qi = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._viewContainer = e,
                            this._template = i,
                            this._differs = r,
                            this._ngForOf = null,
                            this._ngForOfDirty = !0,
                            this._differ = null
                        }
                        set ngForOf(e) {
                            this._ngForOf = e,
                            this._ngForOfDirty = !0
                        }
                        set ngForTrackBy(e) {
                            this._trackByFn = e
                        }
                        get ngForTrackBy() {
                            return this._trackByFn
                        }
                        set ngForTemplate(e) {
                            e && (this._template = e)
                        }
                        ngDoCheck() {
                            if (this._ngForOfDirty) {
                                this._ngForOfDirty = !1;
                                const e = this._ngForOf;
                                !this._differ && e && (this._differ = this._differs.find(e).create(this.ngForTrackBy))
                            }
                            if (this._differ) {
                                const e = this._differ.diff(this._ngForOf);
                                e && this._applyChanges(e)
                            }
                        }
                        _applyChanges(e) {
                            const i = this._viewContainer;
                            e.forEachOperation((r, o, s) => {
                                if (null == r.previousIndex)
                                    i.createEmbeddedView(this._template, new FL(r.item, this._ngForOf, -1, -1), null === s ? void 0 : s);
                                else if (null == s)
                                    i.remove(null === o ? void 0 : o);
                                else if (null !== o) {
                                    const a = i.get(o);
                                    i.move(a, s),
                                    iD(a, r)
                                }
                            });
                            for (let r = 0, o = i.length; r < o; r++) {
                                const a = i.get(r).context;
                                a.index = r,
                                a.count = o,
                                a.ngForOf = this._ngForOf
                            }
                            e.forEachIdentityChange(r => {
                                iD(i.get(r.currentIndex), r)
                            })
                        }
                        static ngTemplateContextGuard(e, i) {
                            return !0
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Yt), p(Un), p(ql))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngFor", "", "ngForOf", ""]],
                        inputs: {
                            ngForOf: "ngForOf",
                            ngForTrackBy: "ngForTrackBy",
                            ngForTemplate: "ngForTemplate"
                        },
                        standalone: !0
                    }),
                    n
                })();
                function iD(n, t) {
                    n.context.$implicit = t.item
                }
                let Zt = (() => {
                    class n {
                        constructor(e, i) {
                            this._viewContainer = e,
                            this._context = new LL,
                            this._thenTemplateRef = null,
                            this._elseTemplateRef = null,
                            this._thenViewRef = null,
                            this._elseViewRef = null,
                            this._thenTemplateRef = i
                        }
                        set ngIf(e) {
                            this._context.$implicit = this._context.ngIf = e,
                            this._updateView()
                        }
                        set ngIfThen(e) {
                            rD("ngIfThen", e),
                            this._thenTemplateRef = e,
                            this._thenViewRef = null,
                            this._updateView()
                        }
                        set ngIfElse(e) {
                            rD("ngIfElse", e),
                            this._elseTemplateRef = e,
                            this._elseViewRef = null,
                            this._updateView()
                        }
                        _updateView() {
                            this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                        }
                        static ngTemplateContextGuard(e, i) {
                            return !0
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Yt), p(Un))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngIf", ""]],
                        inputs: {
                            ngIf: "ngIf",
                            ngIfThen: "ngIfThen",
                            ngIfElse: "ngIfElse"
                        },
                        standalone: !0
                    }),
                    n
                })();
                class LL {
                    constructor() {
                        this.$implicit = null,
                        this.ngIf = null
                    }
                }
                function rD(n, t) {
                    if (t && !t.createEmbeddedView)
                        throw new Error(`${n} must be a TemplateRef, but received '${Ie(t)}'.`)
                }
                let cm = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._ngEl = e,
                            this._differs = i,
                            this._renderer = r,
                            this._ngStyle = null,
                            this._differ = null
                        }
                        set ngStyle(e) {
                            this._ngStyle = e,
                            !this._differ && e && (this._differ = this._differs.find(e).create())
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const e = this._differ.diff(this._ngStyle);
                                e && this._applyChanges(e)
                            }
                        }
                        _setStyle(e, i) {
                            const [r, o] = e.split("."),
                            s = -1 === r.indexOf("-") ? void 0 : qt.DashCase;
                            null != i ? this._renderer.setStyle(this._ngEl.nativeElement, r, o ? `${i}${o}` : i, s) : this._renderer.removeStyle(this._ngEl.nativeElement, r, s)
                        }
                        _applyChanges(e) {
                            e.forEachRemovedItem(i => this._setStyle(i.key, null)),
                            e.forEachAddedItem(i => this._setStyle(i.key, i.currentValue)),
                            e.forEachChangedItem(i => this._setStyle(i.key, i.currentValue))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Ea), p(Ei))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngStyle", ""]],
                        inputs: {
                            ngStyle: "ngStyle"
                        },
                        standalone: !0
                    }),
                    n
                })(),
                sD = (() => {
                    class n {
                        constructor(e) {
                            this._viewContainerRef = e,
                            this._viewRef = null,
                            this.ngTemplateOutletContext = null,
                            this.ngTemplateOutlet = null,
                            this.ngTemplateOutletInjector = null
                        }
                        ngOnChanges(e) {
                            if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                                const i = this._viewContainerRef;
                                if (this._viewRef && i.remove(i.indexOf(this._viewRef)), this.ngTemplateOutlet) {
                                    const {
                                        ngTemplateOutlet: r,
                                        ngTemplateOutletContext: o,
                                        ngTemplateOutletInjector: s
                                    } = this;
                                    this._viewRef = i.createEmbeddedView(r, o, s ? {
                                        injector: s
                                    }
                                             : void 0)
                                } else
                                    this._viewRef = null
                            } else
                                this._viewRef && e.ngTemplateOutletContext && this.ngTemplateOutletContext && (this._viewRef.context = this.ngTemplateOutletContext)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Yt))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngTemplateOutlet", ""]],
                        inputs: {
                            ngTemplateOutletContext: "ngTemplateOutletContext",
                            ngTemplateOutlet: "ngTemplateOutlet",
                            ngTemplateOutletInjector: "ngTemplateOutletInjector"
                        },
                        standalone: !0,
                        features: [Ft]
                    }),
                    n
                })();
                let aD = (() => {
                    class n {
                        transform(e) {
                            if (null == e)
                                return null;
                            if ("string" != typeof e)
                                throw function Wn(n, t) {
                                    return new E(2100, !1)
                                }
                            ();
                            return e.toLowerCase()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275pipe = Gt({
                        name: "lowercase",
                        type: n,
                        pure: !0,
                        standalone: !0
                    }),
                    n
                })(),
                is = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })();
                const lD = "browser";
                function um(n) {
                    return n === lD
                }
                let f2 = (() => {
                    class n {}
                    return n. \u0275prov = k({
                        token: n,
                        providedIn: "root",
                        factory: () => new p2(v(Q), window)
                    }),
                    n
                })();
                class p2 {
                    constructor(t, e) {
                        this.document = t,
                        this.window = e,
                        this.offset = () => [0, 0]
                    }
                    setOffset(t) {
                        this.offset = Array.isArray(t) ? () => t : t
                    }
                    getScrollPosition() {
                        return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0]
                    }
                    scrollToPosition(t) {
                        this.supportsScrolling() && this.window.scrollTo(t[0], t[1])
                    }
                    scrollToAnchor(t) {
                        if (!this.supportsScrolling())
                            return;
                        const e = function m2(n, t) {
                            const e = n.getElementById(t) || n.getElementsByName(t)[0];
                            if (e)
                                return e;
                            if ("function" == typeof n.createTreeWalker && n.body && (n.body.createShadowRoot || n.body.attachShadow)) {
                                const i = n.createTreeWalker(n.body, NodeFilter.SHOW_ELEMENT);
                                let r = i.currentNode;
                                for (; r; ) {
                                    const o = r.shadowRoot;
                                    if (o) {
                                        const s = o.getElementById(t) || o.querySelector(`[name="${t}"]`);
                                        if (s)
                                            return s
                                    }
                                    r = i.nextNode()
                                }
                            }
                            return null
                        }
                        (this.document, t);
                        e && (this.scrollToElement(e), e.focus())
                    }
                    setHistoryScrollRestoration(t) {
                        if (this.supportScrollRestoration()) {
                            const e = this.window.history;
                            e && e.scrollRestoration && (e.scrollRestoration = t)
                        }
                    }
                    scrollToElement(t) {
                        const e = t.getBoundingClientRect(),
                        i = e.left + this.window.pageXOffset,
                        r = e.top + this.window.pageYOffset,
                        o = this.offset();
                        this.window.scrollTo(i - o[0], r - o[1])
                    }
                    supportScrollRestoration() {
                        try {
                            if (!this.supportsScrolling())
                                return !1;
                            const t = dD(this.window.history) || dD(Object.getPrototypeOf(this.window.history));
                            return !(!t || !t.writable && !t.set)
                        } catch {
                            return !1
                        }
                    }
                    supportsScrolling() {
                        try {
                            return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window
                        } catch {
                            return !1
                        }
                    }
                }
                function dD(n) {
                    return Object.getOwnPropertyDescriptor(n, "scrollRestoration")
                }
                class uD {}
                class U2 extends GN {
                    constructor() {
                        super(...arguments),
                        this.supportsDOMEvents = !0
                    }
                }
                class pm extends U2 {
                    static makeCurrent() {
                        !function zN(n) {
                            Yl || (Yl = n)
                        }
                        (new pm)
                    }
                    onAndCancel(t, e, i) {
                        return t.addEventListener(e, i, !1),
                        () => {
                            t.removeEventListener(e, i, !1)
                        }
                    }
                    dispatchEvent(t, e) {
                        t.dispatchEvent(e)
                    }
                    remove(t) {
                        t.parentNode && t.parentNode.removeChild(t)
                    }
                    createElement(t, e) {
                        return (e = e || this.getDefaultDocument()).createElement(t)
                    }
                    createHtmlDocument() {
                        return document.implementation.createHTMLDocument("fakeTitle")
                    }
                    getDefaultDocument() {
                        return document
                    }
                    isElementNode(t) {
                        return t.nodeType === Node.ELEMENT_NODE
                    }
                    isShadowRoot(t) {
                        return t instanceof DocumentFragment
                    }
                    getGlobalEventTarget(t, e) {
                        return "window" === e ? window : "document" === e ? t : "body" === e ? t.body : null
                    }
                    getBaseHref(t) {
                        const e = function $2() {
                            return ka = ka || document.querySelector("base"),
                            ka ? ka.getAttribute("href") : null
                        }
                        ();
                        return null == e ? null : function z2(n) {
                            od = od || document.createElement("a"),
                            od.setAttribute("href", n);
                            const t = od.pathname;
                            return "/" === t.charAt(0) ? t : `/${t}`
                        }
                        (e)
                    }
                    resetBaseElement() {
                        ka = null
                    }
                    getUserAgent() {
                        return window.navigator.userAgent
                    }
                    getCookie(t) {
                        return eD(document.cookie, t)
                    }
                }
                let od,
                ka = null;
                const _D = new T("TRANSITION_ID"),
                W2 = [{
                        provide: xa,
                        useFactory: function G2(n, t, e) {
                            return () => {
                                e.get(Ul).donePromise.then(() => {
                                    const i = di(),
                                    r = t.querySelectorAll(`style[ng-transition="${n}"]`);
                                    for (let o = 0; o < r.length; o++)
                                        i.remove(r[o])
                                })
                            }
                        },
                        deps: [_D, Q, rt],
                        multi: !0
                    }
                ];
                let Y2 = (() => {
                    class n {
                        build() {
                            return new XMLHttpRequest
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                const sd = new T("EventManagerPlugins");
                let ad = (() => {
                    class n {
                        constructor(e, i) {
                            this._zone = i,
                            this._eventNameToPlugin = new Map,
                            e.forEach(r => r.manager = this),
                            this._plugins = e.slice().reverse()
                        }
                        addEventListener(e, i, r) {
                            return this._findPluginFor(i).addEventListener(e, i, r)
                        }
                        addGlobalEventListener(e, i, r) {
                            return this._findPluginFor(i).addGlobalEventListener(e, i, r)
                        }
                        getZone() {
                            return this._zone
                        }
                        _findPluginFor(e) {
                            const i = this._eventNameToPlugin.get(e);
                            if (i)
                                return i;
                            const r = this._plugins;
                            for (let o = 0; o < r.length; o++) {
                                const s = r[o];
                                if (s.supports(e))
                                    return this._eventNameToPlugin.set(e, s), s
                            }
                            throw new Error(`No event manager plugin found for event ${e}`)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(sd), v(X))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                class bD {
                    constructor(t) {
                        this._doc = t
                    }
                    addGlobalEventListener(t, e, i) {
                        const r = di().getGlobalEventTarget(this._doc, t);
                        if (!r)
                            throw new Error(`Unsupported event target ${r} for event ${e}`);
                        return this.addEventListener(r, e, i)
                    }
                }
                let vD = (() => {
                    class n {
                        constructor() {
                            this._stylesSet = new Set
                        }
                        addStyles(e) {
                            const i = new Set;
                            e.forEach(r => {
                                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r))
                            }),
                            this.onStylesAdded(i)
                        }
                        onStylesAdded(e) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                Ia = (() => {
                    class n extends vD {
                        constructor(e) {
                            super(),
                            this._doc = e,
                            this._hostNodes = new Map,
                            this._hostNodes.set(e.head, [])
                        }
                        _addStylesToHost(e, i, r) {
                            e.forEach(o => {
                                const s = this._doc.createElement("style");
                                s.textContent = o,
                                r.push(i.appendChild(s))
                            })
                        }
                        addHost(e) {
                            const i = [];
                            this._addStylesToHost(this._stylesSet, e, i),
                            this._hostNodes.set(e, i)
                        }
                        removeHost(e) {
                            const i = this._hostNodes.get(e);
                            i && i.forEach(yD),
                            this._hostNodes.delete(e)
                        }
                        onStylesAdded(e) {
                            this._hostNodes.forEach((i, r) => {
                                this._addStylesToHost(e, r, i)
                            })
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach(e => e.forEach(yD))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                function yD(n) {
                    di().remove(n)
                }
                const mm = {
                    svg: "http://www.w3.org/2000/svg",
                    xhtml: "http://www.w3.org/1999/xhtml",
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace",
                    xmlns: "http://www.w3.org/2000/xmlns/",
                    math: "http://www.w3.org/1998/MathML/"
                },
                gm = /%COMP%/g;
                function cd(n, t, e) {
                    for (let i = 0; i < t.length; i++) {
                        let r = t[i];
                        Array.isArray(r) ? cd(n, r, e) : (r = r.replace(gm, n), e.push(r))
                    }
                    return e
                }
                function DD(n) {
                    return t => {
                        if ("__ngUnwrap__" === t)
                            return n;
                        !1 === n(t) && (t.preventDefault(), t.returnValue = !1)
                    }
                }
                let ld = (() => {
                    class n {
                        constructor(e, i, r) {
                            this.eventManager = e,
                            this.sharedStylesHost = i,
                            this.appId = r,
                            this.rendererByCompId = new Map,
                            this.defaultRenderer = new _m(e)
                        }
                        createRenderer(e, i) {
                            if (!e || !i)
                                return this.defaultRenderer;
                            switch (i.encapsulation) {
                            case On.Emulated: {
                                    let r = this.rendererByCompId.get(i.id);
                                    return r || (r = new eV(this.eventManager, this.sharedStylesHost, i, this.appId), this.rendererByCompId.set(i.id, r)),
                                    r.applyToHost(e),
                                    r
                                }
                            case 1:
                            case On.ShadowDom:
                                return new tV(this.eventManager, this.sharedStylesHost, e, i);
                            default:
                                if (!this.rendererByCompId.has(i.id)) {
                                    const r = cd(i.id, i.styles, []);
                                    this.sharedStylesHost.addStyles(r),
                                    this.rendererByCompId.set(i.id, this.defaultRenderer)
                                }
                                return this.defaultRenderer
                            }
                        }
                        begin() {}
                        end() {}
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(ad), v(Ia), v(es))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                class _m {
                    constructor(t) {
                        this.eventManager = t,
                        this.data = Object.create(null),
                        this.destroyNode = null
                    }
                    destroy() {}
                    createElement(t, e) {
                        return e ? document.createElementNS(mm[e] || e, t) : document.createElement(t)
                    }
                    createComment(t) {
                        return document.createComment(t)
                    }
                    createText(t) {
                        return document.createTextNode(t)
                    }
                    appendChild(t, e) {
                        (ED(t) ? t.content : t).appendChild(e)
                    }
                    insertBefore(t, e, i) {
                        t && (ED(t) ? t.content : t).insertBefore(e, i)
                    }
                    removeChild(t, e) {
                        t && t.removeChild(e)
                    }
                    selectRootElement(t, e) {
                        let i = "string" == typeof t ? document.querySelector(t) : t;
                        if (!i)
                            throw new Error(`The selector "${t}" did not match any elements`);
                        return e || (i.textContent = ""),
                        i
                    }
                    parentNode(t) {
                        return t.parentNode
                    }
                    nextSibling(t) {
                        return t.nextSibling
                    }
                    setAttribute(t, e, i, r) {
                        if (r) {
                            e = r + ":" + e;
                            const o = mm[r];
                            o ? t.setAttributeNS(o, e, i) : t.setAttribute(e, i)
                        } else
                            t.setAttribute(e, i)
                    }
                    removeAttribute(t, e, i) {
                        if (i) {
                            const r = mm[i];
                            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${i}:${e}`)
                        } else
                            t.removeAttribute(e)
                    }
                    addClass(t, e) {
                        t.classList.add(e)
                    }
                    removeClass(t, e) {
                        t.classList.remove(e)
                    }
                    setStyle(t, e, i, r) {
                        r & (qt.DashCase | qt.Important) ? t.style.setProperty(e, i, r & qt.Important ? "important" : "") : t.style[e] = i
                    }
                    removeStyle(t, e, i) {
                        i & qt.DashCase ? t.style.removeProperty(e) : t.style[e] = ""
                    }
                    setProperty(t, e, i) {
                        t[e] = i
                    }
                    setValue(t, e) {
                        t.nodeValue = e
                    }
                    listen(t, e, i) {
                        return "string" == typeof t ? this.eventManager.addGlobalEventListener(t, e, DD(i)) : this.eventManager.addEventListener(t, e, DD(i))
                    }
                }
                function ED(n) {
                    return "TEMPLATE" === n.tagName && void 0 !== n.content
                }
                class eV extends _m {
                    constructor(t, e, i, r) {
                        super(t),
                        this.component = i;
                        const o = cd(r + "-" + i.id, i.styles, []);
                        e.addStyles(o),
                        this.contentAttr = function X2(n) {
                            return "_ngcontent-%COMP%".replace(gm, n)
                        }
                        (r + "-" + i.id),
                        this.hostAttr = function Q2(n) {
                            return "_nghost-%COMP%".replace(gm, n)
                        }
                        (r + "-" + i.id)
                    }
                    applyToHost(t) {
                        super.setAttribute(t, this.hostAttr, "")
                    }
                    createElement(t, e) {
                        const i = super.createElement(t, e);
                        return super.setAttribute(i, this.contentAttr, ""),
                        i
                    }
                }
                class tV extends _m {
                    constructor(t, e, i, r) {
                        super(t),
                        this.sharedStylesHost = e,
                        this.hostEl = i,
                        this.shadowRoot = i.attachShadow({
                            mode: "open"
                        }),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                        const o = cd(r.id, r.styles, []);
                        for (let s = 0; s < o.length; s++) {
                            const a = document.createElement("style");
                            a.textContent = o[s],
                            this.shadowRoot.appendChild(a)
                        }
                    }
                    nodeOrShadowRoot(t) {
                        return t === this.hostEl ? this.shadowRoot : t
                    }
                    destroy() {
                        this.sharedStylesHost.removeHost(this.shadowRoot)
                    }
                    appendChild(t, e) {
                        return super.appendChild(this.nodeOrShadowRoot(t), e)
                    }
                    insertBefore(t, e, i) {
                        return super.insertBefore(this.nodeOrShadowRoot(t), e, i)
                    }
                    removeChild(t, e) {
                        return super.removeChild(this.nodeOrShadowRoot(t), e)
                    }
                    parentNode(t) {
                        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))
                    }
                }
                let nV = (() => {
                    class n extends bD {
                        constructor(e) {
                            super(e)
                        }
                        supports(e) {
                            return !0
                        }
                        addEventListener(e, i, r) {
                            return e.addEventListener(i, r, !1),
                            () => this.removeEventListener(e, i, r)
                        }
                        removeEventListener(e, i, r) {
                            return e.removeEventListener(i, r)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                const SD = ["alt", "control", "meta", "shift"],
                iV = {
                    "\b": "Backspace",
                    "\t": "Tab",
                    "\x7f": "Delete",
                    "\x1b": "Escape",
                    Del: "Delete",
                    Esc: "Escape",
                    Left: "ArrowLeft",
                    Right: "ArrowRight",
                    Up: "ArrowUp",
                    Down: "ArrowDown",
                    Menu: "ContextMenu",
                    Scroll: "ScrollLock",
                    Win: "OS"
                },
                rV = {
                    alt: n => n.altKey,
                    control: n => n.ctrlKey,
                    meta: n => n.metaKey,
                    shift: n => n.shiftKey
                };
                let oV = (() => {
                    class n extends bD {
                        constructor(e) {
                            super(e)
                        }
                        supports(e) {
                            return null != n.parseEventName(e)
                        }
                        addEventListener(e, i, r) {
                            const o = n.parseEventName(i),
                            s = n.eventCallback(o.fullKey, r, this.manager.getZone());
                            return this.manager.getZone().runOutsideAngular(() => di().onAndCancel(e, o.domEventName, s))
                        }
                        static parseEventName(e) {
                            const i = e.toLowerCase().split("."),
                            r = i.shift();
                            if (0 === i.length || "keydown" !== r && "keyup" !== r)
                                return null;
                            const o = n._normalizeKey(i.pop());
                            let s = "",
                            a = i.indexOf("code");
                            if (a > -1 && (i.splice(a, 1), s = "code."), SD.forEach(l => {
                                    const d = i.indexOf(l);
                                    d > -1 && (i.splice(d, 1), s += l + ".")
                                }), s += o, 0 != i.length || 0 === o.length)
                                return null;
                            const c = {};
                            return c.domEventName = r,
                            c.fullKey = s,
                            c
                        }
                        static matchEventFullKeyCode(e, i) {
                            let r = iV[e.key] || e.key,
                            o = "";
                            return i.indexOf("code.") > -1 && (r = e.code, o = "code."),
                            !(null == r || !r) && (r = r.toLowerCase(), " " === r ? r = "space" : "." === r && (r = "dot"), SD.forEach(s => {
                                    s !== r && (0, rV[s])(e) && (o += s + ".")
                                }), o += r, o === i)
                        }
                        static eventCallback(e, i, r) {
                            return o => {
                                n.matchEventFullKeyCode(o, e) && r.runGuarded(() => i(o))
                            }
                        }
                        static _normalizeKey(e) {
                            return "esc" === e ? "escape" : e
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                const lV = DC(HN, "browser", [{
                                provide: ts,
                                useValue: lD
                            }, {
                                provide: fC,
                                useValue: function sV() {
                                    pm.makeCurrent()
                                },
                                multi: !0
                            }, {
                                provide: Q,
                                useFactory: function cV() {
                                    return function OI(n) {
                                        bf = n
                                    }
                                    (document),
                                    document
                                },
                                deps: []
                            }
                        ]),
                AD = new T(""),
                kD = [{
                        provide: $l,
                        useClass: class q2 {
                            addToWindow(t) {
                                Re.getAngularTestability = (i, r = !0) => {
                                    const o = t.findTestabilityInTree(i, r);
                                    if (null == o)
                                        throw new Error("Could not find testability for element.");
                                    return o
                                },
                                Re.getAllAngularTestabilities = () => t.getAllTestabilities(),
                                Re.getAllAngularRootElements = () => t.getAllRootElements(),
                                Re.frameworkStabilizers || (Re.frameworkStabilizers = []),
                                Re.frameworkStabilizers.push(i => {
                                    const r = Re.getAllAngularTestabilities();
                                    let o = r.length,
                                    s = !1;
                                    const a = function (c) {
                                        s = s || c,
                                        o--,
                                        0 == o && i(s)
                                    };
                                    r.forEach(function (c) {
                                        c.whenStable(a)
                                    })
                                })
                            }
                            findTestabilityInTree(t, e, i) {
                                return null == e ? null : t.getTestability(e) ?? (i ? di().isShadowRoot(e) ? this.findTestabilityInTree(t, e.host, !0) : this.findTestabilityInTree(t, e.parentElement, !0) : null)
                            }
                        },
                        deps: []
                    }, {
                        provide: vC,
                        useClass: jp,
                        deps: [X, Hp, $l]
                    }, {
                        provide: jp,
                        useClass: jp,
                        deps: [X, Hp, $l]
                    }
                ],
                ID = [{
                        provide: Sf,
                        useValue: "root"
                    }, {
                        provide: Si,
                        useFactory: function aV() {
                            return new Si
                        },
                        deps: []
                    }, {
                        provide: sd,
                        useClass: nV,
                        multi: !0,
                        deps: [Q, X, ts]
                    }, {
                        provide: sd,
                        useClass: oV,
                        multi: !0,
                        deps: [Q]
                    }, {
                        provide: ld,
                        useClass: ld,
                        deps: [ad, Ia, es]
                    }, {
                        provide: sa,
                        useExisting: ld
                    }, {
                        provide: vD,
                        useExisting: Ia
                    }, {
                        provide: Ia,
                        useClass: Ia,
                        deps: [Q]
                    }, {
                        provide: ad,
                        useClass: ad,
                        deps: [sd, X]
                    }, {
                        provide: uD,
                        useClass: Y2,
                        deps: []
                    }, []];
                let OD = (() => {
                    class n {
                        constructor(e) {}
                        static withServerTransition(e) {
                            return {
                                ngModule: n,
                                providers: [{
                                        provide: es,
                                        useValue: e.appId
                                    }, {
                                        provide: _D,
                                        useExisting: es
                                    }, W2]
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(AD, 12))
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [...ID, ...kD],
                        imports: [is, UN]
                    }),
                    n
                })(),
                RD = (() => {
                    class n {
                        constructor(e) {
                            this._doc = e
                        }
                        getTitle() {
                            return this._doc.title
                        }
                        setTitle(e) {
                            this._doc.title = e || ""
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function (e) {
                            let i = null;
                            return i = e ? new e : function uV() {
                                return new RD(v(Q))
                            }
                            (),
                            i
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                typeof window < "u" && window;
                let ym = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function (e) {
                            let i = null;
                            return i = e ? new(e || n) : v(ND),
                            i
                        },
                        providedIn: "root"
                    }),
                    n
                })(),
                ND = (() => {
                    class n extends ym {
                        constructor(e) {
                            super(),
                            this._doc = e
                        }
                        sanitize(e, i) {
                            if (null == i)
                                return null;
                            switch (e) {
                            case xe.NONE:
                                return i;
                            case xe.HTML:
                                return ei(i, "HTML") ? ln(i) : Wv(this._doc, String(i)).toString();
                            case xe.STYLE:
                                return ei(i, "Style") ? ln(i) : i;
                            case xe.SCRIPT:
                                if (ei(i, "Script"))
                                    return ln(i);
                                throw new Error("unsafe value used in a script context");
                            case xe.URL:
                                return ei(i, "URL") ? ln(i) : pl(String(i));
                            case xe.RESOURCE_URL:
                                if (ei(i, "ResourceURL"))
                                    return ln(i);
                                throw new Error(`unsafe value used in a resource URL context (see ${Nc})`);
                            default:
                                throw new Error(`Unexpected SecurityContext ${e} (see ${Nc})`)
                            }
                        }
                        bypassSecurityTrustHtml(e) {
                            return function BI(n) {
                                return new RI(n)
                            }
                            (e)
                        }
                        bypassSecurityTrustStyle(e) {
                            return function jI(n) {
                                return new PI(n)
                            }
                            (e)
                        }
                        bypassSecurityTrustScript(e) {
                            return function HI(n) {
                                return new FI(n)
                            }
                            (e)
                        }
                        bypassSecurityTrustUrl(e) {
                            return function UI(n) {
                                return new NI(n)
                            }
                            (e)
                        }
                        bypassSecurityTrustResourceUrl(e) {
                            return function $I(n) {
                                return new LI(n)
                            }
                            (e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function (e) {
                            let i = null;
                            return i = e ? new e : function bV(n) {
                                return new ND(n.get(Q))
                            }
                            (v(rt)),
                            i
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                const {
                    isArray: vV
                } = Array, {
                    getPrototypeOf: yV,
                    prototype: wV,
                    keys: CV
                } = Object;
                function LD(n) {
                    if (1 === n.length) {
                        const t = n[0];
                        if (vV(t))
                            return {
                                args: t,
                                keys: null
                            };
                        if (function DV(n) {
                            return n && "object" == typeof n && yV(n) === wV
                        }
                            (t)) {
                            const e = CV(t);
                            return {
                                args: e.map(i => t[i]),
                                keys: e
                            }
                        }
                    }
                    return {
                        args: n,
                        keys: null
                    }
                }
                const {
                    isArray: xV
                } = Array;
                function wm(n) {
                    return j(t => function EV(n, t) {
                        return xV(t) ? n(...t) : n(t)
                    }
                        (n, t))
                }
                function VD(n, t) {
                    return n.reduce((e, i, r) => (e[i] = t[r], e), {})
                }
                function BD(...n) {
                    const t = ib(n), {
                        args: e,
                        keys: i
                    } = LD(n),
                    r = new Ae(o => {
                        const {
                            length: s
                        } = e;
                        if (!s)
                            return void o.complete();
                        const a = new Array(s);
                        let c = s,
                        l = s;
                        for (let d = 0; d < s; d++) {
                            let u = !1;
                            Rt(e[d]).subscribe(Ve(o, h => {
                                    u || (u = !0, l--),
                                    a[d] = h
                                }, () => c--, void 0, () => {
                                    (!c || !u) && (l || o.next(i ? VD(i, a) : a), o.complete())
                                }))
                        }
                    });
                    return t ? r.pipe(wm(t)) : r
                }
                let jD = (() => {
                    class n {
                        constructor(e, i) {
                            this._renderer = e,
                            this._elementRef = i,
                            this.onChange = r => {},
                            this.onTouched = () => {}
                        }
                        setProperty(e, i) {
                            this._renderer.setProperty(this._elementRef.nativeElement, e, i)
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        registerOnChange(e) {
                            this.onChange = e
                        }
                        setDisabledState(e) {
                            this.setProperty("disabled", e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Ei), p(se))
                    },
                    n. \u0275dir = N({
                        type: n
                    }),
                    n
                })(),
                zr = (() => {
                    class n extends jD {}
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275dir = N({
                        type: n,
                        features: [H]
                    }),
                    n
                })();
                const En = new T("NgValueAccessor"),
                MV = {
                    provide: En,
                    useExisting: Ce(() => Cm),
                    multi: !0
                },
                AV = new T("CompositionEventMode");
                let Cm = (() => {
                    class n extends jD {
                        constructor(e, i, r) {
                            super(e, i),
                            this._compositionMode = r,
                            this._composing = !1,
                            null == this._compositionMode && (this._compositionMode = !function TV() {
                                const n = di() ? di().getUserAgent() : "";
                                return /android (\d+)/.test(n.toLowerCase())
                            }
                                ())
                        }
                        writeValue(e) {
                            this.setProperty("value", e ?? "")
                        }
                        _handleInput(e) {
                            (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(e)
                        }
                        _compositionStart() {
                            this._composing = !0
                        }
                        _compositionEnd(e) {
                            this._composing = !1,
                            this._compositionMode && this.onChange(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Ei), p(se), p(AV, 8))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]],
                        hostBindings: function (e, i) {
                            1 & e && O("input", function (o) {
                                return i._handleInput(o.target.value)
                            })("blur", function () {
                                return i.onTouched()
                            })("compositionstart", function () {
                                return i._compositionStart()
                            })("compositionend", function (o) {
                                return i._compositionEnd(o.target.value)
                            })
                        },
                        features: [ge([MV]), H]
                    }),
                    n
                })();
                const Dt = new T("NgValidators"),
                tr = new T("NgAsyncValidators");
                function XD(n) {
                    return null != n
                }
                function QD(n) {
                    return fa(n) ? it(n) : n
                }
                function JD(n) {
                    let t = {};
                    return n.forEach(e => {
                        t = null != e ? {
                            ...t,
                            ...e
                        }
                         : t
                    }),
                    0 === Object.keys(t).length ? null : t
                }
                function ex(n, t) {
                    return t.map(e => e(n))
                }
                function tx(n) {
                    return n.map(t => function OV(n) {
                        return !n.validate
                    }
                        (t) ? t : e => t.validate(e))
                }
                function Dm(n) {
                    return null != n ? function nx(n) {
                        if (!n)
                            return null;
                        const t = n.filter(XD);
                        return 0 == t.length ? null : function (e) {
                            return JD(ex(e, t))
                        }
                    }
                    (tx(n)) : null
                }
                function xm(n) {
                    return null != n ? function ix(n) {
                        if (!n)
                            return null;
                        const t = n.filter(XD);
                        return 0 == t.length ? null : function (e) {
                            return BD(ex(e, t).map(QD)).pipe(j(JD))
                        }
                    }
                    (tx(n)) : null
                }
                function rx(n, t) {
                    return null === n ? [t] : Array.isArray(n) ? [...n, t] : [n, t]
                }
                function Em(n) {
                    return n ? Array.isArray(n) ? n : [n] : []
                }
                function ud(n, t) {
                    return Array.isArray(n) ? n.includes(t) : n === t
                }
                function ax(n, t) {
                    const e = Em(t);
                    return Em(n).forEach(r => {
                        ud(e, r) || e.push(r)
                    }),
                    e
                }
                function cx(n, t) {
                    return Em(t).filter(e => !ud(n, e))
                }
                class lx {
                    constructor() {
                        this._rawValidators = [],
                        this._rawAsyncValidators = [],
                        this._onDestroyCallbacks = []
                    }
                    get value() {
                        return this.control ? this.control.value : null
                    }
                    get valid() {
                        return this.control ? this.control.valid : null
                    }
                    get invalid() {
                        return this.control ? this.control.invalid : null
                    }
                    get pending() {
                        return this.control ? this.control.pending : null
                    }
                    get disabled() {
                        return this.control ? this.control.disabled : null
                    }
                    get enabled() {
                        return this.control ? this.control.enabled : null
                    }
                    get errors() {
                        return this.control ? this.control.errors : null
                    }
                    get pristine() {
                        return this.control ? this.control.pristine : null
                    }
                    get dirty() {
                        return this.control ? this.control.dirty : null
                    }
                    get touched() {
                        return this.control ? this.control.touched : null
                    }
                    get status() {
                        return this.control ? this.control.status : null
                    }
                    get untouched() {
                        return this.control ? this.control.untouched : null
                    }
                    get statusChanges() {
                        return this.control ? this.control.statusChanges : null
                    }
                    get valueChanges() {
                        return this.control ? this.control.valueChanges : null
                    }
                    get path() {
                        return null
                    }
                    _setValidators(t) {
                        this._rawValidators = t || [],
                        this._composedValidatorFn = Dm(this._rawValidators)
                    }
                    _setAsyncValidators(t) {
                        this._rawAsyncValidators = t || [],
                        this._composedAsyncValidatorFn = xm(this._rawAsyncValidators)
                    }
                    get validator() {
                        return this._composedValidatorFn || null
                    }
                    get asyncValidator() {
                        return this._composedAsyncValidatorFn || null
                    }
                    _registerOnDestroy(t) {
                        this._onDestroyCallbacks.push(t)
                    }
                    _invokeOnDestroyCallbacks() {
                        this._onDestroyCallbacks.forEach(t => t()),
                        this._onDestroyCallbacks = []
                    }
                    reset(t) {
                        this.control && this.control.reset(t)
                    }
                    hasError(t, e) {
                        return !!this.control && this.control.hasError(t, e)
                    }
                    getError(t, e) {
                        return this.control ? this.control.getError(t, e) : null
                    }
                }
                class zt extends lx {
                    get formDirective() {
                        return null
                    }
                    get path() {
                        return null
                    }
                }
                class nr extends lx {
                    constructor() {
                        super(...arguments),
                        this._parent = null,
                        this.name = null,
                        this.valueAccessor = null
                    }
                }
                class dx {
                    constructor(t) {
                        this._cd = t
                    }
                    get isTouched() {
                        return !!this._cd?.control?.touched
                    }
                    get isUntouched() {
                        return !!this._cd?.control?.untouched
                    }
                    get isPristine() {
                        return !!this._cd?.control?.pristine
                    }
                    get isDirty() {
                        return !!this._cd?.control?.dirty
                    }
                    get isValid() {
                        return !!this._cd?.control?.valid
                    }
                    get isInvalid() {
                        return !!this._cd?.control?.invalid
                    }
                    get isPending() {
                        return !!this._cd?.control?.pending
                    }
                    get isSubmitted() {
                        return !!this._cd?.submitted
                    }
                }
                let ux = (() => {
                    class n extends dx {
                        constructor(e) {
                            super(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(nr, 2))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]],
                        hostVars: 14,
                        hostBindings: function (e, i) {
                            2 & e && be("ng-untouched", i.isUntouched)("ng-touched", i.isTouched)("ng-pristine", i.isPristine)("ng-dirty", i.isDirty)("ng-valid", i.isValid)("ng-invalid", i.isInvalid)("ng-pending", i.isPending)
                        },
                        features: [H]
                    }),
                    n
                })();
                const Oa = "VALID",
                fd = "INVALID",
                rs = "PENDING",
                Ra = "DISABLED";
                function pd(n) {
                    return null != n && !Array.isArray(n) && "object" == typeof n
                }
                class mx {
                    constructor(t, e) {
                        this._pendingDirty = !1,
                        this._hasOwnPendingAsyncValidator = !1,
                        this._pendingTouched = !1,
                        this._onCollectionChange = () => {},
                        this._parent = null,
                        this.pristine = !0,
                        this.touched = !1,
                        this._onDisabledChange = [],
                        this._assignValidators(t),
                        this._assignAsyncValidators(e)
                    }
                    get validator() {
                        return this._composedValidatorFn
                    }
                    set validator(t) {
                        this._rawValidators = this._composedValidatorFn = t
                    }
                    get asyncValidator() {
                        return this._composedAsyncValidatorFn
                    }
                    set asyncValidator(t) {
                        this._rawAsyncValidators = this._composedAsyncValidatorFn = t
                    }
                    get parent() {
                        return this._parent
                    }
                    get valid() {
                        return this.status === Oa
                    }
                    get invalid() {
                        return this.status === fd
                    }
                    get pending() {
                        return this.status == rs
                    }
                    get disabled() {
                        return this.status === Ra
                    }
                    get enabled() {
                        return this.status !== Ra
                    }
                    get dirty() {
                        return !this.pristine
                    }
                    get untouched() {
                        return !this.touched
                    }
                    get updateOn() {
                        return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change"
                    }
                    setValidators(t) {
                        this._assignValidators(t)
                    }
                    setAsyncValidators(t) {
                        this._assignAsyncValidators(t)
                    }
                    addValidators(t) {
                        this.setValidators(ax(t, this._rawValidators))
                    }
                    addAsyncValidators(t) {
                        this.setAsyncValidators(ax(t, this._rawAsyncValidators))
                    }
                    removeValidators(t) {
                        this.setValidators(cx(t, this._rawValidators))
                    }
                    removeAsyncValidators(t) {
                        this.setAsyncValidators(cx(t, this._rawAsyncValidators))
                    }
                    hasValidator(t) {
                        return ud(this._rawValidators, t)
                    }
                    hasAsyncValidator(t) {
                        return ud(this._rawAsyncValidators, t)
                    }
                    clearValidators() {
                        this.validator = null
                    }
                    clearAsyncValidators() {
                        this.asyncValidator = null
                    }
                    markAsTouched(t = {}) {
                        this.touched = !0,
                        this._parent && !t.onlySelf && this._parent.markAsTouched(t)
                    }
                    markAllAsTouched() {
                        this.markAsTouched({
                            onlySelf: !0
                        }),
                        this._forEachChild(t => t.markAllAsTouched())
                    }
                    markAsUntouched(t = {}) {
                        this.touched = !1,
                        this._pendingTouched = !1,
                        this._forEachChild(e => {
                            e.markAsUntouched({
                                onlySelf: !0
                            })
                        }),
                        this._parent && !t.onlySelf && this._parent._updateTouched(t)
                    }
                    markAsDirty(t = {}) {
                        this.pristine = !1,
                        this._parent && !t.onlySelf && this._parent.markAsDirty(t)
                    }
                    markAsPristine(t = {}) {
                        this.pristine = !0,
                        this._pendingDirty = !1,
                        this._forEachChild(e => {
                            e.markAsPristine({
                                onlySelf: !0
                            })
                        }),
                        this._parent && !t.onlySelf && this._parent._updatePristine(t)
                    }
                    markAsPending(t = {}) {
                        this.status = rs,
                        !1 !== t.emitEvent && this.statusChanges.emit(this.status),
                        this._parent && !t.onlySelf && this._parent.markAsPending(t)
                    }
                    disable(t = {}) {
                        const e = this._parentMarkedDirty(t.onlySelf);
                        this.status = Ra,
                        this.errors = null,
                        this._forEachChild(i => {
                            i.disable({
                                ...t,
                                onlySelf: !0
                            })
                        }),
                        this._updateValue(),
                        !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
                        this._updateAncestors({
                            ...t,
                            skipPristineCheck: e
                        }),
                        this._onDisabledChange.forEach(i => i(!0))
                    }
                    enable(t = {}) {
                        const e = this._parentMarkedDirty(t.onlySelf);
                        this.status = Oa,
                        this._forEachChild(i => {
                            i.enable({
                                ...t,
                                onlySelf: !0
                            })
                        }),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        }),
                        this._updateAncestors({
                            ...t,
                            skipPristineCheck: e
                        }),
                        this._onDisabledChange.forEach(i => i(!1))
                    }
                    _updateAncestors(t) {
                        this._parent && !t.onlySelf && (this._parent.updateValueAndValidity(t), t.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched())
                    }
                    setParent(t) {
                        this._parent = t
                    }
                    getRawValue() {
                        return this.value
                    }
                    updateValueAndValidity(t = {}) {
                        this._setInitialStatus(),
                        this._updateValue(),
                        this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === Oa || this.status === rs) && this._runAsyncValidator(t.emitEvent)),
                        !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
                        this._parent && !t.onlySelf && this._parent.updateValueAndValidity(t)
                    }
                    _updateTreeValidity(t = {
                            emitEvent: !0
                        }) {
                        this._forEachChild(e => e._updateTreeValidity(t)),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: t.emitEvent
                        })
                    }
                    _setInitialStatus() {
                        this.status = this._allControlsDisabled() ? Ra : Oa
                    }
                    _runValidator() {
                        return this.validator ? this.validator(this) : null
                    }
                    _runAsyncValidator(t) {
                        if (this.asyncValidator) {
                            this.status = rs,
                            this._hasOwnPendingAsyncValidator = !0;
                            const e = QD(this.asyncValidator(this));
                            this._asyncValidationSubscription = e.subscribe(i => {
                                this._hasOwnPendingAsyncValidator = !1,
                                this.setErrors(i, {
                                    emitEvent: t
                                })
                            })
                        }
                    }
                    _cancelExistingSubscription() {
                        this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1)
                    }
                    setErrors(t, e = {}) {
                        this.errors = t,
                        this._updateControlsErrors(!1 !== e.emitEvent)
                    }
                    get(t) {
                        let e = t;
                        return null == e || (Array.isArray(e) || (e = e.split(".")), 0 === e.length) ? null : e.reduce((i, r) => i && i._find(r), this)
                    }
                    getError(t, e) {
                        const i = e ? this.get(e) : this;
                        return i && i.errors ? i.errors[t] : null
                    }
                    hasError(t, e) {
                        return !!this.getError(t, e)
                    }
                    get root() {
                        let t = this;
                        for (; t._parent; )
                            t = t._parent;
                        return t
                    }
                    _updateControlsErrors(t) {
                        this.status = this._calculateStatus(),
                        t && this.statusChanges.emit(this.status),
                        this._parent && this._parent._updateControlsErrors(t)
                    }
                    _initObservables() {
                        this.valueChanges = new re,
                        this.statusChanges = new re
                    }
                    _calculateStatus() {
                        return this._allControlsDisabled() ? Ra : this.errors ? fd : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(rs) ? rs : this._anyControlsHaveStatus(fd) ? fd : Oa
                    }
                    _anyControlsHaveStatus(t) {
                        return this._anyControls(e => e.status === t)
                    }
                    _anyControlsDirty() {
                        return this._anyControls(t => t.dirty)
                    }
                    _anyControlsTouched() {
                        return this._anyControls(t => t.touched)
                    }
                    _updatePristine(t = {}) {
                        this.pristine = !this._anyControlsDirty(),
                        this._parent && !t.onlySelf && this._parent._updatePristine(t)
                    }
                    _updateTouched(t = {}) {
                        this.touched = this._anyControlsTouched(),
                        this._parent && !t.onlySelf && this._parent._updateTouched(t)
                    }
                    _registerOnCollectionChange(t) {
                        this._onCollectionChange = t
                    }
                    _setUpdateStrategy(t) {
                        pd(t) && null != t.updateOn && (this._updateOn = t.updateOn)
                    }
                    _parentMarkedDirty(t) {
                        return !t && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty()
                    }
                    _find(t) {
                        return null
                    }
                    _assignValidators(t) {
                        this._rawValidators = Array.isArray(t) ? t.slice() : t,
                        this._composedValidatorFn = function jV(n) {
                            return Array.isArray(n) ? Dm(n) : n || null
                        }
                        (this._rawValidators)
                    }
                    _assignAsyncValidators(t) {
                        this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t,
                        this._composedAsyncValidatorFn = function HV(n) {
                            return Array.isArray(n) ? xm(n) : n || null
                        }
                        (this._rawAsyncValidators)
                    }
                }
                const Pa = new T("CallSetDisabledState", {
                    providedIn: "root",
                    factory: () => Om
                }),
                Om = "always";
                function Fa(n, t, e = Om) {
                    (function Rm(n, t) {
                        const e = function ox(n) {
                            return n._rawValidators
                        }
                        (n);
                        null !== t.validator ? n.setValidators(rx(e, t.validator)) : "function" == typeof e && n.setValidators([e]);
                        const i = function sx(n) {
                            return n._rawAsyncValidators
                        }
                        (n);
                        null !== t.asyncValidator ? n.setAsyncValidators(rx(i, t.asyncValidator)) : "function" == typeof i && n.setAsyncValidators([i]);
                        const r = () => n.updateValueAndValidity();
                        _d(t._rawValidators, r),
                        _d(t._rawAsyncValidators, r)
                    })(n, t),
                    t.valueAccessor.writeValue(n.value),
                    (n.disabled || "always" === e) && t.valueAccessor.setDisabledState?.(n.disabled),
                    function zV(n, t) {
                        t.valueAccessor.registerOnChange(e => {
                            n._pendingValue = e,
                            n._pendingChange = !0,
                            n._pendingDirty = !0,
                            "change" === n.updateOn && gx(n, t)
                        })
                    }
                    (n, t),
                    function WV(n, t) {
                        const e = (i, r) => {
                            t.valueAccessor.writeValue(i),
                            r && t.viewToModelUpdate(i)
                        };
                        n.registerOnChange(e),
                        t._registerOnDestroy(() => {
                            n._unregisterOnChange(e)
                        })
                    }
                    (n, t),
                    function GV(n, t) {
                        t.valueAccessor.registerOnTouched(() => {
                            n._pendingTouched = !0,
                            "blur" === n.updateOn && n._pendingChange && gx(n, t),
                            "submit" !== n.updateOn && n.markAsTouched()
                        })
                    }
                    (n, t),
                    function $V(n, t) {
                        if (t.valueAccessor.setDisabledState) {
                            const e = i => {
                                t.valueAccessor.setDisabledState(i)
                            };
                            n.registerOnDisabledChange(e),
                            t._registerOnDestroy(() => {
                                n._unregisterOnDisabledChange(e)
                            })
                        }
                    }
                    (n, t)
                }
                function _d(n, t) {
                    n.forEach(e => {
                        e.registerOnValidatorChange && e.registerOnValidatorChange(t)
                    })
                }
                function gx(n, t) {
                    n._pendingDirty && n.markAsDirty(),
                    n.setValue(n._pendingValue, {
                        emitModelToViewChange: !1
                    }),
                    t.viewToModelUpdate(n._pendingValue),
                    n._pendingChange = !1
                }
                function vx(n, t) {
                    const e = n.indexOf(t);
                    e > -1 && n.splice(e, 1)
                }
                function yx(n) {
                    return "object" == typeof n && null !== n && 2 === Object.keys(n).length && "value" in n && "disabled" in n
                }
                const Vm = class extends mx {
                    constructor(t = null, e, i) {
                        super(function Am(n) {
                            return (pd(n) ? n.validators : n) || null
                        }
                            (e), function km(n, t) {
                            return (pd(t) ? t.asyncValidators : n) || null
                        }
                            (i, e)),
                        this.defaultValue = null,
                        this._onChange = [],
                        this._pendingChange = !1,
                        this._applyFormState(t),
                        this._setUpdateStrategy(e),
                        this._initObservables(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator
                        }),
                        pd(e) && (e.nonNullable || e.initialValueIsDefault) && (this.defaultValue = yx(t) ? t.value : t)
                    }
                    setValue(t, e = {}) {
                        this.value = this._pendingValue = t,
                        this._onChange.length && !1 !== e.emitModelToViewChange && this._onChange.forEach(i => i(this.value, !1 !== e.emitViewToModelChange)),
                        this.updateValueAndValidity(e)
                    }
                    patchValue(t, e = {}) {
                        this.setValue(t, e)
                    }
                    reset(t = this.defaultValue, e = {}) {
                        this._applyFormState(t),
                        this.markAsPristine(e),
                        this.markAsUntouched(e),
                        this.setValue(this.value, e),
                        this._pendingChange = !1
                    }
                    _updateValue() {}
                    _anyControls(t) {
                        return !1
                    }
                    _allControlsDisabled() {
                        return this.disabled
                    }
                    registerOnChange(t) {
                        this._onChange.push(t)
                    }
                    _unregisterOnChange(t) {
                        vx(this._onChange, t)
                    }
                    registerOnDisabledChange(t) {
                        this._onDisabledChange.push(t)
                    }
                    _unregisterOnDisabledChange(t) {
                        vx(this._onDisabledChange, t)
                    }
                    _forEachChild(t) {}
                    _syncPendingControls() {
                        return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, {
                                    onlySelf: !0,
                                    emitModelToViewChange: !1
                                }), 0))
                    }
                    _applyFormState(t) {
                        yx(t) ? (this.value = this._pendingValue = t.value, t.disabled ? this.disable({
                                onlySelf: !0,
                                emitEvent: !1
                            }) : this.enable({
                                onlySelf: !0,
                                emitEvent: !1
                            })) : this.value = this._pendingValue = t
                    }
                },
                QV = Vm,
                tB = {
                    provide: nr,
                    useExisting: Ce(() => Bm)
                },
                Dx = (() => Promise.resolve())();
                let Bm = (() => {
                    class n extends nr {
                        constructor(e, i, r, o, s, a) {
                            super(),
                            this._changeDetectorRef = s,
                            this.callSetDisabledState = a,
                            this.control = new Vm,
                            this._registered = !1,
                            this.update = new re,
                            this._parent = e,
                            this._setValidators(i),
                            this._setAsyncValidators(r),
                            this.valueAccessor = function Nm(n, t) {
                                if (!t)
                                    return null;
                                let e,
                                i,
                                r;
                                return Array.isArray(t),
                                t.forEach(o => {
                                    o.constructor === Cm ? e = o : function KV(n) {
                                        return Object.getPrototypeOf(n.constructor) === zr
                                    }
                                    (o) ? i = o : r = o
                                }),
                                r || i || e || null
                            }
                            (0, o)
                        }
                        ngOnChanges(e) {
                            if (this._checkForErrors(), !this._registered || "name" in e) {
                                if (this._registered && (this._checkName(), this.formDirective)) {
                                    const i = e.name.previousValue;
                                    this.formDirective.removeControl({
                                        name: i,
                                        path: this._getPath(i)
                                    })
                                }
                                this._setUpControl()
                            }
                            "isDisabled" in e && this._updateDisabled(e),
                            function Fm(n, t) {
                                if (!n.hasOwnProperty("model"))
                                    return !1;
                                const e = n.model;
                                return !!e.isFirstChange() || !Object.is(t, e.currentValue)
                            }
                            (e, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model)
                        }
                        ngOnDestroy() {
                            this.formDirective && this.formDirective.removeControl(this)
                        }
                        get path() {
                            return this._getPath(this.name)
                        }
                        get formDirective() {
                            return this._parent ? this._parent.formDirective : null
                        }
                        viewToModelUpdate(e) {
                            this.viewModel = e,
                            this.update.emit(e)
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(),
                            this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this),
                            this._registered = !0
                        }
                        _setUpdateStrategy() {
                            this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn)
                        }
                        _isStandalone() {
                            return !this._parent || !(!this.options || !this.options.standalone)
                        }
                        _setUpStandalone() {
                            Fa(this.control, this, this.callSetDisabledState),
                            this.control.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(),
                            this._checkName()
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options && this.options.name && (this.name = this.options.name),
                            this._isStandalone()
                        }
                        _updateValue(e) {
                            Dx.then(() => {
                                this.control.setValue(e, {
                                    emitViewToModelChange: !1
                                }),
                                this._changeDetectorRef?.markForCheck()
                            })
                        }
                        _updateDisabled(e) {
                            const i = e.isDisabled.currentValue,
                            r = 0 !== i && function ns(n) {
                                return "boolean" == typeof n ? n : null != n && "false" !== n
                            }
                            (i);
                            Dx.then(() => {
                                r && !this.control.disabled ? this.control.disable() : !r && this.control.disabled && this.control.enable(),
                                this._changeDetectorRef?.markForCheck()
                            })
                        }
                        _getPath(e) {
                            return this._parent ? function md(n, t) {
                                return [...t.path, n]
                            }
                            (e, this._parent) : [e]
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(zt, 9), p(Dt, 10), p(tr, 10), p(En, 10), p($t, 8), p(Pa, 8))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]],
                        inputs: {
                            name: "name",
                            isDisabled: ["disabled", "isDisabled"],
                            model: ["ngModel", "model"],
                            options: ["ngModelOptions", "options"]
                        },
                        outputs: {
                            update: "ngModelChange"
                        },
                        exportAs: ["ngModel"],
                        features: [ge([tB]), H, Ft]
                    }),
                    n
                })(),
                Ex = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })(),
                SB = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [Ex]
                    }),
                    n
                })(),
                MB = (() => {
                    class n {
                        static withConfig(e) {
                            return {
                                ngModule: n,
                                providers: [{
                                        provide: Pa,
                                        useValue: e.callSetDisabledState ?? Om
                                    }
                                ]
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [SB]
                    }),
                    n
                })();
                var Wr = (() => {
                    return (n = Wr || (Wr = {}))[n.LIST = 0] = "LIST",
                    n[n.PRINT = 1] = "PRINT",
                    Wr;
                    var n
                })();
                class Oe extends K {
                    constructor(t) {
                        super(),
                        this._value = t
                    }
                    get value() {
                        return this.getValue()
                    }
                    _subscribe(t) {
                        const e = super._subscribe(t);
                        return !e.closed && t.next(this._value),
                        e
                    }
                    getValue() {
                        const {
                            hasError: t,
                            thrownError: e,
                            _value: i
                        } = this;
                        if (t)
                            throw e;
                        return this._throwIfClosed(),
                        i
                    }
                    next(t) {
                        super.next(this._value = t)
                    }
                }
                class os {
                    _mainViewBehaviorSubject = new Oe(Wr.LIST);
                    constructor() {}
                    set mainView(t) {
                        this._mainViewBehaviorSubject.next(t)
                    }
                    get mainView() {
                        return this._mainViewBehaviorSubject.value
                    }
                    get mainViewObservable() {
                        return this._mainViewBehaviorSubject.asObservable()
                    }
                    static \u0275fac = function (e) {
                        return new(e || os)
                    };
                    static \u0275prov = k({
                        token: os,
                        factory: os. \u0275fac,
                        providedIn: "root"
                    })
                }
                class Sn {
                    _parameterBehaviorSubject = new Oe({});
                    set parameter(t) {
                        this._parameterBehaviorSubject.next(t)
                    }
                    get parameter() {
                        return this._parameterBehaviorSubject.value
                    }
                    get parameterObservable() {
                        return this._parameterBehaviorSubject.asObservable()
                    }
                    static \u0275fac = function (e) {
                        return new(e || Sn)
                    };
                    static \u0275prov = k({
                        token: Sn,
                        factory: Sn. \u0275fac,
                        providedIn: "root"
                    })
                }
                class ui {
                    _printListBehaviorSubject = new Oe([]);
                    constructor() {}
                    add(t) {
                        const e = this._printListBehaviorSubject.value,
                        i = e.lastIndexOf(t);
                        -1 !== i ? e.splice(i, 0, t) : e.push(t),
                        this._printListBehaviorSubject.next(e)
                    }
                    clear() {
                        this._printListBehaviorSubject.next([])
                    }
                    delete (t) {
                        const e = this._printListBehaviorSubject.value,
                        i = e.lastIndexOf(t);
                        -1 !== i && (e.splice(i, 1), this._printListBehaviorSubject.next(e))
                    }
                    deleteByIndex(t) {
                        const e = this._printListBehaviorSubject.value;
                        e.splice(t, 1),
                        this._printListBehaviorSubject.next(e)
                    }
                    get printListObservable() {
                        return this._printListBehaviorSubject.asObservable()
                    }
                    get printListValue() {
                        return this._printListBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || ui)
                    };
                    static \u0275prov = k({
                        token: ui,
                        factory: ui. \u0275fac,
                        providedIn: "root"
                    })
                }
                class Ri {
                    _printListBehaviorSubject = new Oe([]);
                    constructor() {}
                    add(t) {
                        const e = this._printListBehaviorSubject.value;
                        e.push(t),
                        this._printListBehaviorSubject.next(e)
                    }
                    clear() {
                        this._printListBehaviorSubject.next([])
                    }
                    deleteByIndex(t) {
                        const e = this._printListBehaviorSubject.value;
                        e.splice(t, 1),
                        this._printListBehaviorSubject.next(e)
                    }
                    changeRotationByIndex(t) {
                        const e = this._printListBehaviorSubject.value;
                        e[t].printRotate = !e[t].printRotate,
                        this._printListBehaviorSubject.next(e)
                    }
                    get printListObservable() {
                        return this._printListBehaviorSubject.asObservable()
                    }
                    get printListValue() {
                        return this._printListBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || Ri)
                    };
                    static \u0275prov = k({
                        token: Ri,
                        factory: Ri. \u0275fac,
                        providedIn: "root"
                    })
                }
                let qm;
                try {
                    qm = typeof Intl < "u" && Intl.v8BreakIterator
                } catch {
                    qm = !1
                }
                let La,
                yd,
                qr,
                Ym,
                _t = (() => {
                    class n {
                        constructor(e) {
                            this._platformId = e,
                            this.isBrowser = this._platformId ? um(this._platformId) : "object" == typeof document && !!document,
                            this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent),
                            this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent),
                            this.BLINK = this.isBrowser && !(!window.chrome && !qm) && typeof CSS < "u" && !this.EDGE && !this.TRIDENT,
                            this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT,
                            this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !("MSStream" in window),
                            this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent),
                            this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT,
                            this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(ts))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function vd(n) {
                    return function AB() {
                        if (null == La && typeof window < "u")
                            try {
                                window.addEventListener("test", null, Object.defineProperty({}, "passive", {
                                        get: () => La = !0
                                    }))
                            } finally {
                            La = La || !1
                        }
                        return La
                    }
                    () ? n : !!n.capture
                }
                function $x() {
                    if (null == qr) {
                        if ("object" != typeof document || !document || "function" != typeof Element || !Element)
                            return qr = !1, qr;
                        if ("scrollBehavior" in document.documentElement.style)
                            qr = !0;
                        else {
                            const n = Element.prototype.scrollTo;
                            qr = !!n && !/\{\s*\[native code\]\s*\}/.test(n.toString())
                        }
                    }
                    return qr
                }
                function Va() {
                    if ("object" != typeof document || !document)
                        return 0;
                    if (null == yd) {
                        const n = document.createElement("div"),
                        t = n.style;
                        n.dir = "rtl",
                        t.width = "1px",
                        t.overflow = "auto",
                        t.visibility = "hidden",
                        t.pointerEvents = "none",
                        t.position = "absolute";
                        const e = document.createElement("div"),
                        i = e.style;
                        i.width = "2px",
                        i.height = "1px",
                        n.appendChild(e),
                        document.body.appendChild(n),
                        yd = 0,
                        0 === n.scrollLeft && (n.scrollLeft = 1, yd = 0 === n.scrollLeft ? 1 : 2),
                        n.remove()
                    }
                    return yd
                }
                function Km() {
                    let n = typeof document < "u" && document ? document.activeElement : null;
                    for (; n && n.shadowRoot; ) {
                        const t = n.shadowRoot.activeElement;
                        if (t === n)
                            break;
                        n = t
                    }
                    return n
                }
                function Yr(n) {
                    return n.composedPath ? n.composedPath()[0] : n.target
                }
                function Zm() {
                    return typeof __karma__ < "u" && !!__karma__ || typeof jasmine < "u" && !!jasmine || typeof jest < "u" && !!jest || typeof Mocha < "u" && !!Mocha
                }
                function B(...n) {
                    return it(n, Ls(n))
                }
                function as(n, ...t) {
                    return t.length ? t.some(e => n[e]) : n.altKey || n.shiftKey || n.ctrlKey || n.metaKey
                }
                function Je(n, t, e) {
                    const i = pe(n) || t || e ? {
                        next: n,
                        error: t,
                        complete: e
                    }
                     : n;
                    return i ? Be((r, o) => {
                        var s;
                        null === (s = i.subscribe) || void 0 === s || s.call(i);
                        let a = !0;
                        r.subscribe(Ve(o, c => {
                                var l;
                                null === (l = i.next) || void 0 === l || l.call(i, c),
                                o.next(c)
                            }, () => {
                                var c;
                                a = !1,
                                null === (c = i.complete) || void 0 === c || c.call(i),
                                o.complete()
                            }, c => {
                                var l;
                                a = !1,
                                null === (l = i.error) || void 0 === l || l.call(i, c),
                                o.error(c)
                            }, () => {
                                var c,
                                l;
                                a && (null === (c = i.unsubscribe) || void 0 === c || c.call(i)),
                                null === (l = i.finalize) || void 0 === l || l.call(i)
                            }))
                    }) : Hi
                }
                class QB extends nt {
                    constructor(t, e) {
                        super()
                    }
                    schedule(t, e = 0) {
                        return this
                    }
                }
                const Cd = {
                    setInterval(n, t, ...e) {
                        const {
                            delegate: i
                        } = Cd;
                        return i?.setInterval ? i.setInterval(n, t, ...e) : setInterval(n, t, ...e)
                    },
                    clearInterval(n) {
                        const {
                            delegate: t
                        } = Cd;
                        return (t?.clearInterval || clearInterval)(n)
                    },
                    delegate: void 0
                };
                class Xm extends QB {
                    constructor(t, e) {
                        super(t, e),
                        this.scheduler = t,
                        this.work = e,
                        this.pending = !1
                    }
                    schedule(t, e = 0) {
                        var i;
                        if (this.closed)
                            return this;
                        this.state = t;
                        const r = this.id,
                        o = this.scheduler;
                        return null != r && (this.id = this.recycleAsyncId(o, r, e)),
                        this.pending = !0,
                        this.delay = e,
                        this.id = null !== (i = this.id) && void 0 !== i ? i : this.requestAsyncId(o, this.id, e),
                        this
                    }
                    requestAsyncId(t, e, i = 0) {
                        return Cd.setInterval(t.flush.bind(t, this), i)
                    }
                    recycleAsyncId(t, e, i = 0) {
                        if (null != i && this.delay === i && !1 === this.pending)
                            return e;
                        null != e && Cd.clearInterval(e)
                    }
                    execute(t, e) {
                        if (this.closed)
                            return new Error("executing a cancelled action");
                        this.pending = !1;
                        const i = this._execute(t, e);
                        if (i)
                            return i;
                        !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
                    }
                    _execute(t, e) {
                        let r,
                        i = !1;
                        try {
                            this.work(t)
                        } catch (o) {
                            i = !0,
                            r = o || new Error("Scheduled action threw falsy error")
                        }
                        if (i)
                            return this.unsubscribe(), r
                    }
                    unsubscribe() {
                        if (!this.closed) {
                            const {
                                id: t,
                                scheduler: e
                            } = this, {
                                actions: i
                            } = e;
                            this.work = this.state = this.scheduler = null,
                            this.pending = !1,
                            ho(i, this),
                            null != t && (this.id = this.recycleAsyncId(e, t, null)),
                            this.delay = null,
                            super.unsubscribe()
                        }
                    }
                }
                const zx = {
                    now: () => (zx.delegate || Date).now(),
                    delegate: void 0
                };
                class Ba {
                    constructor(t, e = Ba.now) {
                        this.schedulerActionCtor = t,
                        this.now = e
                    }
                    schedule(t, e = 0, i) {
                        return new this.schedulerActionCtor(this, t).schedule(i, e)
                    }
                }
                Ba.now = zx.now;
                class Qm extends Ba {
                    constructor(t, e = Ba.now) {
                        super(t, e),
                        this.actions = [],
                        this._active = !1
                    }
                    flush(t) {
                        const {
                            actions: e
                        } = this;
                        if (this._active)
                            return void e.push(t);
                        let i;
                        this._active = !0;
                        do {
                            if (i = t.execute(t.state, t.delay))
                                break
                        } while (t = e.shift());
                        if (this._active = !1, i) {
                            for (; t = e.shift(); )
                                t.unsubscribe();
                            throw i
                        }
                    }
                }
                const Dd = new Qm(Xm),
                JB = Dd;
                function ja(n, t = Dd) {
                    return Be((e, i) => {
                        let r = null,
                        o = null,
                        s = null;
                        const a = () => {
                            if (r) {
                                r.unsubscribe(),
                                r = null;
                                const l = o;
                                o = null,
                                i.next(l)
                            }
                        };
                        function c() {
                            const l = s + n,
                            d = t.now();
                            if (d < l)
                                return r = this.schedule(void 0, l - d), void i.add(r);
                            a()
                        }
                        e.subscribe(Ve(i, l => {
                                o = l,
                                s = t.now(),
                                r || (r = t.schedule(c, n), i.add(r))
                            }, () => {
                                a(),
                                i.complete()
                            }, void 0, () => {
                                o = r = null
                            }))
                    })
                }
                function ve(n, t) {
                    return Be((e, i) => {
                        let r = 0;
                        e.subscribe(Ve(i, o => n.call(t, o, r++) && i.next(o)))
                    })
                }
                function Ge(n) {
                    return n <= 0 ? () => Xn : Be((t, e) => {
                        let i = 0;
                        t.subscribe(Ve(e, r => {
                                ++i <= n && (e.next(r), n <= i && e.complete())
                            }))
                    })
                }
                function Gx(n) {
                    return ve((t, e) => n <= e)
                }
                function Ha(n, t = Hi) {
                    return n = n ?? ej,
                    Be((e, i) => {
                        let r,
                        o = !0;
                        e.subscribe(Ve(i, s => {
                                const a = t(s);
                                (o || !n(r, a)) && (o = !1, r = a, i.next(s))
                            }))
                    })
                }
                function ej(n, t) {
                    return n === t
                }
                function et(n) {
                    return Be((t, e) => {
                        Rt(n).subscribe(Ve(e, () => e.complete(), Fs)),
                        !e.closed && t.subscribe(e)
                    })
                }
                function Ne(n) {
                    return null != n && "false" != `${n}`
                }
                function qn(n, t = 0) {
                    return function tj(n) {
                        return !isNaN(parseFloat(n)) && !isNaN(Number(n))
                    }
                    (n) ? Number(n) : t
                }
                function xd(n) {
                    return Array.isArray(n) ? n : [n]
                }
                function at(n) {
                    return null == n ? "" : "string" == typeof n ? n : `${n}px`
                }
                function cs(n) {
                    return n instanceof se ? n.nativeElement : n
                }
                let nj = (() => {
                    class n {
                        create(e) {
                            return typeof MutationObserver > "u" ? null : new MutationObserver(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                ij = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [nj]
                    }),
                    n
                })();
                function Jm(...n) {
                    const t = Ls(n),
                    e = ib(n), {
                        args: i,
                        keys: r
                    } = LD(n);
                    if (0 === i.length)
                        return it([], t);
                    const o = new Ae(function rj(n, t, e = Hi) {
                        return i => {
                            Wx(t, () => {
                                const {
                                    length: r
                                } = n,
                                o = new Array(r);
                                let s = r,
                                a = r;
                                for (let c = 0; c < r; c++)
                                    Wx(t, () => {
                                        const l = it(n[c], t);
                                        let d = !1;
                                        l.subscribe(Ve(i, u => {
                                                o[c] = u,
                                                d || (d = !0, a--),
                                                a || i.next(e(o.slice()))
                                            }, () => {
                                                --s || i.complete()
                                            }))
                                    }, i)
                            }, i)
                        }
                    }
                            (i, t, r ? s => VD(r, s) : Hi));
                    return e ? o.pipe(wm(e)) : o
                }
                function Wx(n, t, e) {
                    n ? _i(e, n, t) : t()
                }
                function ls(...n) {
                    return function oj() {
                        return fo(1)
                    }
                    ()(it(n, Ls(n)))
                }
                function ir(...n) {
                    const t = Ls(n);
                    return Be((e, i) => {
                        (t ? ls(n, e, t) : ls(n, e)).subscribe(i)
                    })
                }
                const qx = new Set;
                let ds,
                sj = (() => {
                    class n {
                        constructor(e) {
                            this._platform = e,
                            this._matchMedia = this._platform.isBrowser && window.matchMedia ? window.matchMedia.bind(window) : cj
                        }
                        matchMedia(e) {
                            return (this._platform.WEBKIT || this._platform.BLINK) && function aj(n) {
                                if (!qx.has(n))
                                    try {
                                        ds || (ds = document.createElement("style"), ds.setAttribute("type", "text/css"), document.head.appendChild(ds)),
                                        ds.sheet && (ds.sheet.insertRule(`@media ${n} {body{ }}`, 0), qx.add(n))
                                    } catch (t) {
                                        console.error(t)
                                    }
                            }
                            (e),
                            this._matchMedia(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(_t))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function cj(n) {
                    return {
                        matches: "all" === n || "" === n,
                        media: n,
                        addListener: () => {},
                        removeListener: () => {}
                    }
                }
                let lj = (() => {
                    class n {
                        constructor(e, i) {
                            this._mediaMatcher = e,
                            this._zone = i,
                            this._queries = new Map,
                            this._destroySubject = new K
                        }
                        ngOnDestroy() {
                            this._destroySubject.next(),
                            this._destroySubject.complete()
                        }
                        isMatched(e) {
                            return Yx(xd(e)).some(r => this._registerQuery(r).mql.matches)
                        }
                        observe(e) {
                            let o = Jm(Yx(xd(e)).map(s => this._registerQuery(s).observable));
                            return o = ls(o.pipe(Ge(1)), o.pipe(Gx(1), ja(0))),
                            o.pipe(j(s => {
                                    const a = {
                                        matches: !1,
                                        breakpoints: {}
                                    };
                                    return s.forEach(({
                                            matches: c,
                                            query: l
                                        }) => {
                                        a.matches = a.matches || c,
                                        a.breakpoints[l] = c
                                    }),
                                    a
                                }))
                        }
                        _registerQuery(e) {
                            if (this._queries.has(e))
                                return this._queries.get(e);
                            const i = this._mediaMatcher.matchMedia(e),
                            o = {
                                observable: new Ae(s => {
                                    const a = c => this._zone.run(() => s.next(c));
                                    return i.addListener(a),
                                    () => {
                                        i.removeListener(a)
                                    }
                                }).pipe(ir(i), j(({
                                            matches: s
                                        }) => ({
                                            query: e,
                                            matches: s
                                        })), et(this._destroySubject)),
                                mql: i
                            };
                            return this._queries.set(e, o),
                            o
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(sj), v(X))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function Yx(n) {
                    return n.map(t => t.split(",")).reduce((t, e) => t.concat(e)).map(t => t.trim())
                }
                function Ed(n, t) {
                    return (n.getAttribute(t) || "").match(/\S+/g) || []
                }
                const Zx = "cdk-describedby-message",
                Sd = "cdk-describedby-host";
                let eg = 0,
                hj = (() => {
                    class n {
                        constructor(e, i) {
                            this._platform = i,
                            this._messageRegistry = new Map,
                            this._messagesContainer = null,
                            this._id = "" + eg++,
                            this._document = e,
                            this._id = ce(es) + "-" + eg++
                        }
                        describe(e, i, r) {
                            if (!this._canBeDescribed(e, i))
                                return;
                            const o = tg(i, r);
                            "string" != typeof i ? (Xx(i, this._id), this._messageRegistry.set(o, {
                                    messageElement: i,
                                    referenceCount: 0
                                })) : this._messageRegistry.has(o) || this._createMessageElement(i, r),
                            this._isElementDescribedByMessage(e, o) || this._addMessageReference(e, o)
                        }
                        removeDescription(e, i, r) {
                            if (!i || !this._isElementNode(e))
                                return;
                            const o = tg(i, r);
                            if (this._isElementDescribedByMessage(e, o) && this._removeMessageReference(e, o), "string" == typeof i) {
                                const s = this._messageRegistry.get(o);
                                s && 0 === s.referenceCount && this._deleteMessageElement(o)
                            }
                            0 === this._messagesContainer?.childNodes.length && (this._messagesContainer.remove(), this._messagesContainer = null)
                        }
                        ngOnDestroy() {
                            const e = this._document.querySelectorAll(`[${Sd}="${this._id}"]`);
                            for (let i = 0; i < e.length; i++)
                                this._removeCdkDescribedByReferenceIds(e[i]), e[i].removeAttribute(Sd);
                            this._messagesContainer?.remove(),
                            this._messagesContainer = null,
                            this._messageRegistry.clear()
                        }
                        _createMessageElement(e, i) {
                            const r = this._document.createElement("div");
                            Xx(r, this._id),
                            r.textContent = e,
                            i && r.setAttribute("role", i),
                            this._createMessagesContainer(),
                            this._messagesContainer.appendChild(r),
                            this._messageRegistry.set(tg(e, i), {
                                messageElement: r,
                                referenceCount: 0
                            })
                        }
                        _deleteMessageElement(e) {
                            this._messageRegistry.get(e)?.messageElement?.remove(),
                            this._messageRegistry.delete(e)
                        }
                        _createMessagesContainer() {
                            if (this._messagesContainer)
                                return;
                            const e = "cdk-describedby-message-container",
                            i = this._document.querySelectorAll(`.${e}[platform="server"]`);
                            for (let o = 0; o < i.length; o++)
                                i[o].remove();
                            const r = this._document.createElement("div");
                            r.style.visibility = "hidden",
                            r.classList.add(e),
                            r.classList.add("cdk-visually-hidden"),
                            this._platform && !this._platform.isBrowser && r.setAttribute("platform", "server"),
                            this._document.body.appendChild(r),
                            this._messagesContainer = r
                        }
                        _removeCdkDescribedByReferenceIds(e) {
                            const i = Ed(e, "aria-describedby").filter(r => 0 != r.indexOf(Zx));
                            e.setAttribute("aria-describedby", i.join(" "))
                        }
                        _addMessageReference(e, i) {
                            const r = this._messageRegistry.get(i);
                            (function dj(n, t, e) {
                                const i = Ed(n, t);
                                i.some(r => r.trim() == e.trim()) || (i.push(e.trim()), n.setAttribute(t, i.join(" ")))
                            })(e, "aria-describedby", r.messageElement.id),
                            e.setAttribute(Sd, this._id),
                            r.referenceCount++
                        }
                        _removeMessageReference(e, i) {
                            const r = this._messageRegistry.get(i);
                            r.referenceCount--,
                            function uj(n, t, e) {
                                const r = Ed(n, t).filter(o => o != e.trim());
                                r.length ? n.setAttribute(t, r.join(" ")) : n.removeAttribute(t)
                            }
                            (e, "aria-describedby", r.messageElement.id),
                            e.removeAttribute(Sd)
                        }
                        _isElementDescribedByMessage(e, i) {
                            const r = Ed(e, "aria-describedby"),
                            o = this._messageRegistry.get(i),
                            s = o && o.messageElement.id;
                            return !!s && -1 != r.indexOf(s)
                        }
                        _canBeDescribed(e, i) {
                            if (!this._isElementNode(e))
                                return !1;
                            if (i && "object" == typeof i)
                                return !0;
                            const r = null == i ? "" : `${i}`.trim(),
                            o = e.getAttribute("aria-label");
                            return !(!r || o && o.trim() === r)
                        }
                        _isElementNode(e) {
                            return e.nodeType === this._document.ELEMENT_NODE
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q), v(_t))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function tg(n, t) {
                    return "string" == typeof n ? `${t || ""}/${n}` : n
                }
                function Xx(n, t) {
                    n.id || (n.id = `${Zx}-${t}-${eg++}`)
                }
                class fj {
                    constructor(t) {
                        this._items = t,
                        this._activeItemIndex = -1,
                        this._activeItem = null,
                        this._wrap = !1,
                        this._letterKeyStream = new K,
                        this._typeaheadSubscription = nt.EMPTY,
                        this._vertical = !0,
                        this._allowedModifierKeys = [],
                        this._homeAndEnd = !1,
                        this._pageUpAndDown = {
                            enabled: !1,
                            delta: 10
                        },
                        this._skipPredicateFn = e => e.disabled,
                        this._pressedLetters = [],
                        this.tabOut = new K,
                        this.change = new K,
                        t instanceof jr && (this._itemChangesSubscription = t.changes.subscribe(e => {
                                if (this._activeItem) {
                                    const r = e.toArray().indexOf(this._activeItem);
                                    r > -1 && r !== this._activeItemIndex && (this._activeItemIndex = r)
                                }
                            }))
                    }
                    skipPredicate(t) {
                        return this._skipPredicateFn = t,
                        this
                    }
                    withWrap(t = !0) {
                        return this._wrap = t,
                        this
                    }
                    withVerticalOrientation(t = !0) {
                        return this._vertical = t,
                        this
                    }
                    withHorizontalOrientation(t) {
                        return this._horizontal = t,
                        this
                    }
                    withAllowedModifierKeys(t) {
                        return this._allowedModifierKeys = t,
                        this
                    }
                    withTypeAhead(t = 200) {
                        return this._typeaheadSubscription.unsubscribe(),
                        this._typeaheadSubscription = this._letterKeyStream.pipe(Je(e => this._pressedLetters.push(e)), ja(t), ve(() => this._pressedLetters.length > 0), j(() => this._pressedLetters.join(""))).subscribe(e => {
                            const i = this._getItemsArray();
                            for (let r = 1; r < i.length + 1; r++) {
                                const o = (this._activeItemIndex + r) % i.length,
                                s = i[o];
                                if (!this._skipPredicateFn(s) && 0 === s.getLabel().toUpperCase().trim().indexOf(e)) {
                                    this.setActiveItem(o);
                                    break
                                }
                            }
                            this._pressedLetters = []
                        }),
                        this
                    }
                    cancelTypeahead() {
                        return this._pressedLetters = [],
                        this
                    }
                    withHomeAndEnd(t = !0) {
                        return this._homeAndEnd = t,
                        this
                    }
                    withPageUpDown(t = !0, e = 10) {
                        return this._pageUpAndDown = {
                            enabled: t,
                            delta: e
                        },
                        this
                    }
                    setActiveItem(t) {
                        const e = this._activeItem;
                        this.updateActiveItem(t),
                        this._activeItem !== e && this.change.next(this._activeItemIndex)
                    }
                    onKeydown(t) {
                        const e = t.keyCode,
                        r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(o => !t[o] || this._allowedModifierKeys.indexOf(o) > -1);
                        switch (e) {
                        case 9:
                            return void this.tabOut.next();
                        case 40:
                            if (this._vertical && r) {
                                this.setNextItemActive();
                                break
                            }
                            return;
                        case 38:
                            if (this._vertical && r) {
                                this.setPreviousItemActive();
                                break
                            }
                            return;
                        case 39:
                            if (this._horizontal && r) {
                                "rtl" === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                                break
                            }
                            return;
                        case 37:
                            if (this._horizontal && r) {
                                "rtl" === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                                break
                            }
                            return;
                        case 36:
                            if (this._homeAndEnd && r) {
                                this.setFirstItemActive();
                                break
                            }
                            return;
                        case 35:
                            if (this._homeAndEnd && r) {
                                this.setLastItemActive();
                                break
                            }
                            return;
                        case 33:
                            if (this._pageUpAndDown.enabled && r) {
                                const o = this._activeItemIndex - this._pageUpAndDown.delta;
                                this._setActiveItemByIndex(o > 0 ? o : 0, 1);
                                break
                            }
                            return;
                        case 34:
                            if (this._pageUpAndDown.enabled && r) {
                                const o = this._activeItemIndex + this._pageUpAndDown.delta,
                                s = this._getItemsArray().length;
                                this._setActiveItemByIndex(o < s ? o : s - 1, -1);
                                break
                            }
                            return;
                        default:
                            return void((r || as(t, "shiftKey")) && (t.key && 1 === t.key.length ? this._letterKeyStream.next(t.key.toLocaleUpperCase()) : (e >= 65 && e <= 90 || e >= 48 && e <= 57) && this._letterKeyStream.next(String.fromCharCode(e))))
                        }
                        this._pressedLetters = [],
                        t.preventDefault()
                    }
                    get activeItemIndex() {
                        return this._activeItemIndex
                    }
                    get activeItem() {
                        return this._activeItem
                    }
                    isTyping() {
                        return this._pressedLetters.length > 0
                    }
                    setFirstItemActive() {
                        this._setActiveItemByIndex(0, 1)
                    }
                    setLastItemActive() {
                        this._setActiveItemByIndex(this._items.length - 1, -1)
                    }
                    setNextItemActive() {
                        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1)
                    }
                    setPreviousItemActive() {
                        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1)
                    }
                    updateActiveItem(t) {
                        const e = this._getItemsArray(),
                        i = "number" == typeof t ? t : e.indexOf(t);
                        this._activeItem = e[i] ?? null,
                        this._activeItemIndex = i
                    }
                    destroy() {
                        this._typeaheadSubscription.unsubscribe(),
                        this._itemChangesSubscription?.unsubscribe(),
                        this._letterKeyStream.complete(),
                        this.tabOut.complete(),
                        this.change.complete(),
                        this._pressedLetters = []
                    }
                    _setActiveItemByDelta(t) {
                        this._wrap ? this._setActiveInWrapMode(t) : this._setActiveInDefaultMode(t)
                    }
                    _setActiveInWrapMode(t) {
                        const e = this._getItemsArray();
                        for (let i = 1; i <= e.length; i++) {
                            const r = (this._activeItemIndex + t * i + e.length) % e.length;
                            if (!this._skipPredicateFn(e[r]))
                                return void this.setActiveItem(r)
                        }
                    }
                    _setActiveInDefaultMode(t) {
                        this._setActiveItemByIndex(this._activeItemIndex + t, t)
                    }
                    _setActiveItemByIndex(t, e) {
                        const i = this._getItemsArray();
                        if (i[t]) {
                            for (; this._skipPredicateFn(i[t]); )
                                if (!i[t += e])
                                    return;
                            this.setActiveItem(t)
                        }
                    }
                    _getItemsArray() {
                        return this._items instanceof jr ? this._items.toArray() : this._items
                    }
                }
                class pj extends fj {
                    constructor() {
                        super(...arguments),
                        this._origin = "program"
                    }
                    setFocusOrigin(t) {
                        return this._origin = t,
                        this
                    }
                    setActiveItem(t) {
                        super.setActiveItem(t),
                        this.activeItem && this.activeItem.focus(this._origin)
                    }
                }
                let Ua = (() => {
                    class n {
                        constructor(e) {
                            this._platform = e
                        }
                        isDisabled(e) {
                            return e.hasAttribute("disabled")
                        }
                        isVisible(e) {
                            return function gj(n) {
                                return !!(n.offsetWidth || n.offsetHeight || "function" == typeof n.getClientRects && n.getClientRects().length)
                            }
                            (e) && "visible" === getComputedStyle(e).visibility
                        }
                        isTabbable(e) {
                            if (!this._platform.isBrowser)
                                return !1;
                            const i = function mj(n) {
                                try {
                                    return n.frameElement
                                } catch {
                                    return null
                                }
                            }
                            (function xj(n) {
                                return n.ownerDocument && n.ownerDocument.defaultView || window
                            }
                                (e));
                            if (i && (-1 === Jx(i) || !this.isVisible(i)))
                                return !1;
                            let r = e.nodeName.toLowerCase(),
                            o = Jx(e);
                            return e.hasAttribute("contenteditable") ? -1 !== o : !("iframe" === r || "object" === r || this._platform.WEBKIT && this._platform.IOS && !function Cj(n) {
                                let t = n.nodeName.toLowerCase(),
                                e = "input" === t && n.type;
                                return "text" === e || "password" === e || "select" === t || "textarea" === t
                            }
                                (e)) && ("audio" === r ? !!e.hasAttribute("controls") && -1 !== o : "video" === r ? -1 !== o && (null !== o || this._platform.FIREFOX || e.hasAttribute("controls")) : e.tabIndex >= 0)
                        }
                        isFocusable(e, i) {
                            return function Dj(n) {
                                return !function bj(n) {
                                    return function yj(n) {
                                        return "input" == n.nodeName.toLowerCase()
                                    }
                                    (n) && "hidden" == n.type
                                }
                                (n) && (function _j(n) {
                                    let t = n.nodeName.toLowerCase();
                                    return "input" === t || "select" === t || "button" === t || "textarea" === t
                                }
                                    (n) || function vj(n) {
                                    return function wj(n) {
                                        return "a" == n.nodeName.toLowerCase()
                                    }
                                    (n) && n.hasAttribute("href")
                                }
                                    (n) || n.hasAttribute("contenteditable") || Qx(n))
                            }
                            (e) && !this.isDisabled(e) && (i?.ignoreVisibility || this.isVisible(e))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(_t))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function Qx(n) {
                    if (!n.hasAttribute("tabindex") || void 0 === n.tabIndex)
                        return !1;
                    let t = n.getAttribute("tabindex");
                    return !(!t || isNaN(parseInt(t, 10)))
                }
                function Jx(n) {
                    if (!Qx(n))
                        return null;
                    const t = parseInt(n.getAttribute("tabindex") || "", 10);
                    return isNaN(t) ? -1 : t
                }
                class Ej {
                    constructor(t, e, i, r, o = !1) {
                        this._element = t,
                        this._checker = e,
                        this._ngZone = i,
                        this._document = r,
                        this._hasAttached = !1,
                        this.startAnchorListener = () => this.focusLastTabbableElement(),
                        this.endAnchorListener = () => this.focusFirstTabbableElement(),
                        this._enabled = !0,
                        o || this.attachAnchors()
                    }
                    get enabled() {
                        return this._enabled
                    }
                    set enabled(t) {
                        this._enabled = t,
                        this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor))
                    }
                    destroy() {
                        const t = this._startAnchor,
                        e = this._endAnchor;
                        t && (t.removeEventListener("focus", this.startAnchorListener), t.remove()),
                        e && (e.removeEventListener("focus", this.endAnchorListener), e.remove()),
                        this._startAnchor = this._endAnchor = null,
                        this._hasAttached = !1
                    }
                    attachAnchors() {
                        return !!this._hasAttached || (this._ngZone.runOutsideAngular(() => {
                                this._startAnchor || (this._startAnchor = this._createAnchor(), this._startAnchor.addEventListener("focus", this.startAnchorListener)),
                                this._endAnchor || (this._endAnchor = this._createAnchor(), this._endAnchor.addEventListener("focus", this.endAnchorListener))
                            }), this._element.parentNode && (this._element.parentNode.insertBefore(this._startAnchor, this._element), this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling), this._hasAttached = !0), this._hasAttached)
                    }
                    focusInitialElementWhenReady(t) {
                        return new Promise(e => {
                            this._executeOnStable(() => e(this.focusInitialElement(t)))
                        })
                    }
                    focusFirstTabbableElementWhenReady(t) {
                        return new Promise(e => {
                            this._executeOnStable(() => e(this.focusFirstTabbableElement(t)))
                        })
                    }
                    focusLastTabbableElementWhenReady(t) {
                        return new Promise(e => {
                            this._executeOnStable(() => e(this.focusLastTabbableElement(t)))
                        })
                    }
                    _getRegionBoundary(t) {
                        const e = this._element.querySelectorAll(`[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`);
                        return "start" == t ? e.length ? e[0] : this._getFirstTabbableElement(this._element) : e.length ? e[e.length - 1] : this._getLastTabbableElement(this._element)
                    }
                    focusInitialElement(t) {
                        const e = this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");
                        if (e) {
                            if (!this._checker.isFocusable(e)) {
                                const i = this._getFirstTabbableElement(e);
                                return i?.focus(t),
                                !!i
                            }
                            return e.focus(t),
                            !0
                        }
                        return this.focusFirstTabbableElement(t)
                    }
                    focusFirstTabbableElement(t) {
                        const e = this._getRegionBoundary("start");
                        return e && e.focus(t),
                        !!e
                    }
                    focusLastTabbableElement(t) {
                        const e = this._getRegionBoundary("end");
                        return e && e.focus(t),
                        !!e
                    }
                    hasAttached() {
                        return this._hasAttached
                    }
                    _getFirstTabbableElement(t) {
                        if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
                            return t;
                        const e = t.children;
                        for (let i = 0; i < e.length; i++) {
                            const r = e[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[i]) : null;
                            if (r)
                                return r
                        }
                        return null
                    }
                    _getLastTabbableElement(t) {
                        if (this._checker.isFocusable(t) && this._checker.isTabbable(t))
                            return t;
                        const e = t.children;
                        for (let i = e.length - 1; i >= 0; i--) {
                            const r = e[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[i]) : null;
                            if (r)
                                return r
                        }
                        return null
                    }
                    _createAnchor() {
                        const t = this._document.createElement("div");
                        return this._toggleAnchorTabIndex(this._enabled, t),
                        t.classList.add("cdk-visually-hidden"),
                        t.classList.add("cdk-focus-trap-anchor"),
                        t.setAttribute("aria-hidden", "true"),
                        t
                    }
                    _toggleAnchorTabIndex(t, e) {
                        t ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex")
                    }
                    toggleAnchors(t) {
                        this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor))
                    }
                    _executeOnStable(t) {
                        this._ngZone.isStable ? t() : this._ngZone.onStable.pipe(Ge(1)).subscribe(t)
                    }
                }
                let Md = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._checker = e,
                            this._ngZone = i,
                            this._document = r
                        }
                        create(e, i = !1) {
                            return new Ej(e, this._checker, this._ngZone, this._document, i)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Ua), v(X), v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function eE(n) {
                    return 0 === n.buttons || 0 === n.offsetX && 0 === n.offsetY
                }
                function tE(n) {
                    const t = n.touches && n.touches[0] || n.changedTouches && n.changedTouches[0];
                    return !(!t || -1 !== t.identifier || null != t.radiusX && 1 !== t.radiusX || null != t.radiusY && 1 !== t.radiusY)
                }
                const Sj = new T("cdk-input-modality-detector-options"),
                Mj = {
                    ignoreKeys: [18, 17, 224, 91, 16]
                },
                us = vd({
                    passive: !0,
                    capture: !0
                });
                let Tj = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this._platform = e,
                            this._mostRecentTarget = null,
                            this._modality = new Oe(null),
                            this._lastTouchMs = 0,
                            this._onKeydown = s => {
                                this._options?.ignoreKeys?.some(a => a === s.keyCode) || (this._modality.next("keyboard"), this._mostRecentTarget = Yr(s))
                            },
                            this._onMousedown = s => {
                                Date.now() - this._lastTouchMs < 650 || (this._modality.next(eE(s) ? "keyboard" : "mouse"), this._mostRecentTarget = Yr(s))
                            },
                            this._onTouchstart = s => {
                                tE(s) ? this._modality.next("keyboard") : (this._lastTouchMs = Date.now(), this._modality.next("touch"), this._mostRecentTarget = Yr(s))
                            },
                            this._options = {
                                ...Mj,
                                ...o
                            },
                            this.modalityDetected = this._modality.pipe(Gx(1)),
                            this.modalityChanged = this.modalityDetected.pipe(Ha()),
                            e.isBrowser && i.runOutsideAngular(() => {
                                r.addEventListener("keydown", this._onKeydown, us),
                                r.addEventListener("mousedown", this._onMousedown, us),
                                r.addEventListener("touchstart", this._onTouchstart, us)
                            })
                        }
                        get mostRecentModality() {
                            return this._modality.value
                        }
                        ngOnDestroy() {
                            this._modality.complete(),
                            this._platform.isBrowser && (document.removeEventListener("keydown", this._onKeydown, us), document.removeEventListener("mousedown", this._onMousedown, us), document.removeEventListener("touchstart", this._onTouchstart, us))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(_t), v(X), v(Q), v(Sj, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const kj = new T("cdk-focus-monitor-default-options"),
                Td = vd({
                    passive: !0,
                    capture: !0
                });
                let rr = (() => {
                    class n {
                        constructor(e, i, r, o, s) {
                            this._ngZone = e,
                            this._platform = i,
                            this._inputModalityDetector = r,
                            this._origin = null,
                            this._windowFocused = !1,
                            this._originFromTouchInteraction = !1,
                            this._elementInfo = new Map,
                            this._monitoredElementCount = 0,
                            this._rootNodeFocusListenerCount = new Map,
                            this._windowFocusListener = () => {
                                this._windowFocused = !0,
                                this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = !1)
                            },
                            this._stopInputModalityDetector = new K,
                            this._rootNodeFocusAndBlurListener = a => {
                                for (let l = Yr(a); l; l = l.parentElement)
                                    "focus" === a.type ? this._onFocus(a, l) : this._onBlur(a, l)
                            },
                            this._document = o,
                            this._detectionMode = s?.detectionMode || 0
                        }
                        monitor(e, i = !1) {
                            const r = cs(e);
                            if (!this._platform.isBrowser || 1 !== r.nodeType)
                                return B(null);
                            const o = function IB(n) {
                                if (function kB() {
                                    if (null == Ym) {
                                        const n = typeof document < "u" ? document.head : null;
                                        Ym = !(!n || !n.createShadowRoot && !n.attachShadow)
                                    }
                                    return Ym
                                }
                                    ()) {
                                    const t = n.getRootNode ? n.getRootNode() : null;
                                    if (typeof ShadowRoot < "u" && ShadowRoot && t instanceof ShadowRoot)
                                        return t
                                }
                                return null
                            }
                            (r) || this._getDocument(),
                            s = this._elementInfo.get(r);
                            if (s)
                                return i && (s.checkChildren = !0), s.subject;
                            const a = {
                                checkChildren: i,
                                subject: new K,
                                rootNode: o
                            };
                            return this._elementInfo.set(r, a),
                            this._registerGlobalListeners(a),
                            a.subject
                        }
                        stopMonitoring(e) {
                            const i = cs(e),
                            r = this._elementInfo.get(i);
                            r && (r.subject.complete(), this._setClasses(i), this._elementInfo.delete(i), this._removeGlobalListeners(r))
                        }
                        focusVia(e, i, r) {
                            const o = cs(e);
                            o === this._getDocument().activeElement ? this._getClosestElementsInfo(o).forEach(([a, c]) => this._originChanged(a, i, c)) : (this._setOrigin(i), "function" == typeof o.focus && o.focus(r))
                        }
                        ngOnDestroy() {
                            this._elementInfo.forEach((e, i) => this.stopMonitoring(i))
                        }
                        _getDocument() {
                            return this._document || document
                        }
                        _getWindow() {
                            return this._getDocument().defaultView || window
                        }
                        _getFocusOrigin(e) {
                            return this._origin ? this._originFromTouchInteraction ? this._shouldBeAttributedToTouch(e) ? "touch" : "program" : this._origin : this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : e && this._isLastInteractionFromInputLabel(e) ? "mouse" : "program"
                        }
                        _shouldBeAttributedToTouch(e) {
                            return 1 === this._detectionMode || !!e?.contains(this._inputModalityDetector._mostRecentTarget)
                        }
                        _setClasses(e, i) {
                            e.classList.toggle("cdk-focused", !!i),
                            e.classList.toggle("cdk-touch-focused", "touch" === i),
                            e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
                            e.classList.toggle("cdk-mouse-focused", "mouse" === i),
                            e.classList.toggle("cdk-program-focused", "program" === i)
                        }
                        _setOrigin(e, i = !1) {
                            this._ngZone.runOutsideAngular(() => {
                                this._origin = e,
                                this._originFromTouchInteraction = "touch" === e && i,
                                0 === this._detectionMode && (clearTimeout(this._originTimeoutId), this._originTimeoutId = setTimeout(() => this._origin = null, this._originFromTouchInteraction ? 650 : 1))
                            })
                        }
                        _onFocus(e, i) {
                            const r = this._elementInfo.get(i),
                            o = Yr(e);
                            !r || !r.checkChildren && i !== o || this._originChanged(i, this._getFocusOrigin(o), r)
                        }
                        _onBlur(e, i) {
                            const r = this._elementInfo.get(i);
                            !r || r.checkChildren && e.relatedTarget instanceof Node && i.contains(e.relatedTarget) || (this._setClasses(i), this._emitOrigin(r, null))
                        }
                        _emitOrigin(e, i) {
                            e.subject.observers.length && this._ngZone.run(() => e.subject.next(i))
                        }
                        _registerGlobalListeners(e) {
                            if (!this._platform.isBrowser)
                                return;
                            const i = e.rootNode,
                            r = this._rootNodeFocusListenerCount.get(i) || 0;
                            r || this._ngZone.runOutsideAngular(() => {
                                i.addEventListener("focus", this._rootNodeFocusAndBlurListener, Td),
                                i.addEventListener("blur", this._rootNodeFocusAndBlurListener, Td)
                            }),
                            this._rootNodeFocusListenerCount.set(i, r + 1),
                            1 == ++this._monitoredElementCount && (this._ngZone.runOutsideAngular(() => {
                                    this._getWindow().addEventListener("focus", this._windowFocusListener)
                                }), this._inputModalityDetector.modalityDetected.pipe(et(this._stopInputModalityDetector)).subscribe(o => {
                                    this._setOrigin(o, !0)
                                }))
                        }
                        _removeGlobalListeners(e) {
                            const i = e.rootNode;
                            if (this._rootNodeFocusListenerCount.has(i)) {
                                const r = this._rootNodeFocusListenerCount.get(i);
                                r > 1 ? this._rootNodeFocusListenerCount.set(i, r - 1) : (i.removeEventListener("focus", this._rootNodeFocusAndBlurListener, Td), i.removeEventListener("blur", this._rootNodeFocusAndBlurListener, Td), this._rootNodeFocusListenerCount.delete(i))
                            }
                            --this._monitoredElementCount || (this._getWindow().removeEventListener("focus", this._windowFocusListener), this._stopInputModalityDetector.next(), clearTimeout(this._windowFocusTimeoutId), clearTimeout(this._originTimeoutId))
                        }
                        _originChanged(e, i, r) {
                            this._setClasses(e, i),
                            this._emitOrigin(r, i),
                            this._lastFocusOrigin = i
                        }
                        _getClosestElementsInfo(e) {
                            const i = [];
                            return this._elementInfo.forEach((r, o) => {
                                (o === e || r.checkChildren && o.contains(e)) && i.push([o, r])
                            }),
                            i
                        }
                        _isLastInteractionFromInputLabel(e) {
                            const {
                                _mostRecentTarget: i,
                                mostRecentModality: r
                            } = this._inputModalityDetector;
                            if ("mouse" !== r || !i || i === e || "INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName || e.disabled)
                                return !1;
                            const o = e.labels;
                            if (o)
                                for (let s = 0; s < o.length; s++)
                                    if (o[s].contains(i))
                                        return !0;
                            return !1
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(X), v(_t), v(Tj), v(Q, 8), v(kj, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const iE = "cdk-high-contrast-black-on-white",
                rE = "cdk-high-contrast-white-on-black",
                ng = "cdk-high-contrast-active";
                let oE = (() => {
                    class n {
                        constructor(e, i) {
                            this._platform = e,
                            this._document = i,
                            this._breakpointSubscription = ce(lj).observe("(forced-colors: active)").subscribe(() => {
                                this._hasCheckedHighContrastMode && (this._hasCheckedHighContrastMode = !1, this._applyBodyHighContrastModeCssClasses())
                            })
                        }
                        getHighContrastMode() {
                            if (!this._platform.isBrowser)
                                return 0;
                            const e = this._document.createElement("div");
                            e.style.backgroundColor = "rgb(1,2,3)",
                            e.style.position = "absolute",
                            this._document.body.appendChild(e);
                            const i = this._document.defaultView || window,
                            r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                            o = (r && r.backgroundColor || "").replace(/ /g, "");
                            switch (e.remove(), o) {
                            case "rgb(0,0,0)":
                            case "rgb(45,50,54)":
                            case "rgb(32,32,32)":
                                return 2;
                            case "rgb(255,255,255)":
                            case "rgb(255,250,239)":
                                return 1
                            }
                            return 0
                        }
                        ngOnDestroy() {
                            this._breakpointSubscription.unsubscribe()
                        }
                        _applyBodyHighContrastModeCssClasses() {
                            if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {
                                const e = this._document.body.classList;
                                e.remove(ng, iE, rE),
                                this._hasCheckedHighContrastMode = !0;
                                const i = this.getHighContrastMode();
                                1 === i ? e.add(ng, iE) : 2 === i && e.add(ng, rE)
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(_t), v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                sE = (() => {
                    class n {
                        constructor(e) {
                            e._applyBodyHighContrastModeCssClasses()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(oE))
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ij]
                    }),
                    n
                })();
                const Ij = new T("cdk-dir-doc", {
                    providedIn: "root",
                    factory: function Oj() {
                        return ce(Q)
                    }
                }),
                Rj = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
                let hs = (() => {
                    class n {
                        constructor(e) {
                            if (this.value = "ltr", this.change = new re, e) {
                                const r = e.documentElement ? e.documentElement.dir : null;
                                this.value = function Pj(n) {
                                    const t = n?.toLowerCase() || "";
                                    return "auto" === t && typeof navigator < "u" && navigator?.language ? Rj.test(navigator.language) ? "rtl" : "ltr" : "rtl" === t ? "rtl" : "ltr"
                                }
                                ((e.body ? e.body.dir : null) || r || "ltr")
                            }
                        }
                        ngOnDestroy() {
                            this.change.complete()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Ij, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                $a = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })();
                const Nj = new T("mat-sanity-checks", {
                    providedIn: "root",
                    factory: function Fj() {
                        return !0
                    }
                });
                let ct = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._sanityChecks = i,
                            this._document = r,
                            this._hasDoneGlobalChecks = !1,
                            e._applyBodyHighContrastModeCssClasses(),
                            this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0)
                        }
                        _checkIsEnabled(e) {
                            return !Zm() && ("boolean" == typeof this._sanityChecks ? this._sanityChecks : !!this._sanityChecks[e])
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(oE), v(Nj, 8), v(Q))
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [$a, $a]
                    }),
                    n
                })();
                function lE(n) {
                    return class extends n {
                        constructor(...t) {
                            super(...t),
                            this._disabled = !1
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(t) {
                            this._disabled = Ne(t)
                        }
                    }
                }
                function za(n, t) {
                    return class extends n {
                        constructor(...e) {
                            super(...e),
                            this.defaultColor = t,
                            this.color = t
                        }
                        get color() {
                            return this._color
                        }
                        set color(e) {
                            const i = e || this.defaultColor;
                            i !== this._color && (this._color && this._elementRef.nativeElement.classList.remove(`mat-${this._color}`), i && this._elementRef.nativeElement.classList.add(`mat-${i}`), this._color = i)
                        }
                    }
                }
                function ig(n) {
                    return class extends n {
                        constructor(...t) {
                            super(...t),
                            this._disableRipple = !1
                        }
                        get disableRipple() {
                            return this._disableRipple
                        }
                        set disableRipple(t) {
                            this._disableRipple = Ne(t)
                        }
                    }
                }
                function rg(n, t = 0) {
                    return class extends n {
                        constructor(...e) {
                            super(...e),
                            this._tabIndex = t,
                            this.defaultTabIndex = t
                        }
                        get tabIndex() {
                            return this.disabled ? -1 : this._tabIndex
                        }
                        set tabIndex(e) {
                            this._tabIndex = null != e ? qn(e) : this.defaultTabIndex
                        }
                    }
                }
                class Vj {
                    constructor(t, e, i, r = !1) {
                        this._renderer = t,
                        this.element = e,
                        this.config = i,
                        this._animationForciblyDisabledThroughCss = r,
                        this.state = 3
                    }
                    fadeOut() {
                        this._renderer.fadeOutRipple(this)
                    }
                }
                const dE = {
                    enterDuration: 225,
                    exitDuration: 150
                },
                og = vd({
                    passive: !0
                }),
                uE = ["mousedown", "touchstart"],
                hE = ["mouseup", "mouseleave", "touchend", "touchcancel"];
                class jj {
                    constructor(t, e, i, r) {
                        this._target = t,
                        this._ngZone = e,
                        this._isPointerDown = !1,
                        this._activeRipples = new Map,
                        this._pointerUpEventsRegistered = !1,
                        r.isBrowser && (this._containerElement = cs(i))
                    }
                    fadeInRipple(t, e, i = {}) {
                        const r = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect(),
                        o = {
                            ...dE,
                            ...i.animation
                        };
                        i.centered && (t = r.left + r.width / 2, e = r.top + r.height / 2);
                        const s = i.radius || function Hj(n, t, e) {
                            const i = Math.max(Math.abs(n - e.left), Math.abs(n - e.right)),
                            r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                            return Math.sqrt(i * i + r * r)
                        }
                        (t, e, r),
                        a = t - r.left,
                        c = e - r.top,
                        l = o.enterDuration,
                        d = document.createElement("div");
                        d.classList.add("mat-ripple-element"),
                        d.style.left = a - s + "px",
                        d.style.top = c - s + "px",
                        d.style.height = 2 * s + "px",
                        d.style.width = 2 * s + "px",
                        null != i.color && (d.style.backgroundColor = i.color),
                        d.style.transitionDuration = `${l}ms`,
                        this._containerElement.appendChild(d);
                        const u = window.getComputedStyle(d),
                        f = u.transitionDuration,
                        m = "none" === u.transitionProperty || "0s" === f || "0s, 0s" === f,
                        _ = new Vj(this, d, i, m);
                        d.style.transform = "scale3d(1, 1, 1)",
                        _.state = 0,
                        i.persistent || (this._mostRecentTransientRipple = _);
                        let C = null;
                        return !m && (l || o.exitDuration) && this._ngZone.runOutsideAngular(() => {
                            const D = () => this._finishRippleTransition(_),
                            A = () => this._destroyRipple(_);
                            d.addEventListener("transitionend", D),
                            d.addEventListener("transitioncancel", A),
                            C = {
                                onTransitionEnd: D,
                                onTransitionCancel: A
                            }
                        }),
                        this._activeRipples.set(_, C),
                        (m || !l) && this._finishRippleTransition(_),
                        _
                    }
                    fadeOutRipple(t) {
                        if (2 === t.state || 3 === t.state)
                            return;
                        const e = t.element,
                        i = {
                            ...dE,
                            ...t.config.animation
                        };
                        e.style.transitionDuration = `${i.exitDuration}ms`,
                        e.style.opacity = "0",
                        t.state = 2,
                        (t._animationForciblyDisabledThroughCss || !i.exitDuration) && this._finishRippleTransition(t)
                    }
                    fadeOutAll() {
                        this._getActiveRipples().forEach(t => t.fadeOut())
                    }
                    fadeOutAllNonPersistent() {
                        this._getActiveRipples().forEach(t => {
                            t.config.persistent || t.fadeOut()
                        })
                    }
                    setupTriggerEvents(t) {
                        const e = cs(t);
                        !e || e === this._triggerElement || (this._removeTriggerEvents(), this._triggerElement = e, this._registerEvents(uE))
                    }
                    handleEvent(t) {
                        "mousedown" === t.type ? this._onMousedown(t) : "touchstart" === t.type ? this._onTouchStart(t) : this._onPointerUp(),
                        this._pointerUpEventsRegistered || (this._registerEvents(hE), this._pointerUpEventsRegistered = !0)
                    }
                    _finishRippleTransition(t) {
                        0 === t.state ? this._startFadeOutTransition(t) : 2 === t.state && this._destroyRipple(t)
                    }
                    _startFadeOutTransition(t) {
                        const e = t === this._mostRecentTransientRipple, {
                            persistent: i
                        } = t.config;
                        t.state = 1,
                        !i && (!e || !this._isPointerDown) && t.fadeOut()
                    }
                    _destroyRipple(t) {
                        const e = this._activeRipples.get(t) ?? null;
                        this._activeRipples.delete(t),
                        this._activeRipples.size || (this._containerRect = null),
                        t === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null),
                        t.state = 3,
                        null !== e && (t.element.removeEventListener("transitionend", e.onTransitionEnd), t.element.removeEventListener("transitioncancel", e.onTransitionCancel)),
                        t.element.remove()
                    }
                    _onMousedown(t) {
                        const e = eE(t),
                        i = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
                        !this._target.rippleDisabled && !e && !i && (this._isPointerDown = !0, this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig))
                    }
                    _onTouchStart(t) {
                        if (!this._target.rippleDisabled && !tE(t)) {
                            this._lastTouchStartEvent = Date.now(),
                            this._isPointerDown = !0;
                            const e = t.changedTouches;
                            for (let i = 0; i < e.length; i++)
                                this.fadeInRipple(e[i].clientX, e[i].clientY, this._target.rippleConfig)
                        }
                    }
                    _onPointerUp() {
                        !this._isPointerDown || (this._isPointerDown = !1, this._getActiveRipples().forEach(t => {
                                !t.config.persistent && (1 === t.state || t.config.terminateOnPointerUp && 0 === t.state) && t.fadeOut()
                            }))
                    }
                    _registerEvents(t) {
                        this._ngZone.runOutsideAngular(() => {
                            t.forEach(e => {
                                this._triggerElement.addEventListener(e, this, og)
                            })
                        })
                    }
                    _getActiveRipples() {
                        return Array.from(this._activeRipples.keys())
                    }
                    _removeTriggerEvents() {
                        this._triggerElement && (uE.forEach(t => {
                                this._triggerElement.removeEventListener(t, this, og)
                            }), this._pointerUpEventsRegistered && hE.forEach(t => {
                                this._triggerElement.removeEventListener(t, this, og)
                            }))
                    }
                }
                const Uj = new T("mat-ripple-global-options");
                let or = (() => {
                    class n {
                        constructor(e, i, r, o, s) {
                            this._elementRef = e,
                            this._animationMode = s,
                            this.radius = 0,
                            this._disabled = !1,
                            this._isInitialized = !1,
                            this._globalOptions = o || {},
                            this._rippleRenderer = new jj(this, i, e, r)
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            e && this.fadeOutAllNonPersistent(),
                            this._disabled = e,
                            this._setupTriggerEventsIfEnabled()
                        }
                        get trigger() {
                            return this._trigger || this._elementRef.nativeElement
                        }
                        set trigger(e) {
                            this._trigger = e,
                            this._setupTriggerEventsIfEnabled()
                        }
                        ngOnInit() {
                            this._isInitialized = !0,
                            this._setupTriggerEventsIfEnabled()
                        }
                        ngOnDestroy() {
                            this._rippleRenderer._removeTriggerEvents()
                        }
                        fadeOutAll() {
                            this._rippleRenderer.fadeOutAll()
                        }
                        fadeOutAllNonPersistent() {
                            this._rippleRenderer.fadeOutAllNonPersistent()
                        }
                        get rippleConfig() {
                            return {
                                centered: this.centered,
                                radius: this.radius,
                                color: this.color,
                                animation: {
                                    ...this._globalOptions.animation,
                                    ..."NoopAnimations" === this._animationMode ? {
                                        enterDuration: 0,
                                        exitDuration: 0
                                    }
                                     : {},
                                    ...this.animation
                                },
                                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp
                            }
                        }
                        get rippleDisabled() {
                            return this.disabled || !!this._globalOptions.disabled
                        }
                        _setupTriggerEventsIfEnabled() {
                            !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger)
                        }
                        launch(e, i = 0, r) {
                            return "number" == typeof e ? this._rippleRenderer.fadeInRipple(e, i, {
                                ...this.rippleConfig,
                                ...r
                            }) : this._rippleRenderer.fadeInRipple(0, 0, {
                                ...this.rippleConfig,
                                ...e
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(X), p(_t), p(Uj, 8), p(yt, 8))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "mat-ripple", ""], ["", "matRipple", ""]],
                        hostAttrs: [1, "mat-ripple"],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-ripple-unbounded", i.unbounded)
                        },
                        inputs: {
                            color: ["matRippleColor", "color"],
                            unbounded: ["matRippleUnbounded", "unbounded"],
                            centered: ["matRippleCentered", "centered"],
                            radius: ["matRippleRadius", "radius"],
                            animation: ["matRippleAnimation", "animation"],
                            disabled: ["matRippleDisabled", "disabled"],
                            trigger: ["matRippleTrigger", "trigger"]
                        },
                        exportAs: ["matRipple"]
                    }),
                    n
                })(),
                sg = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, ct]
                    }),
                    n
                })();
                const $j = ["mat-button", ""],
                ag = [[["", 8, "material-icons", 3, "iconPositionEnd", ""], ["mat-icon", 3, "iconPositionEnd", ""], ["", "matButtonIcon", "", 3, "iconPositionEnd", ""]], "*", [["", "iconPositionEnd", "", 8, "material-icons"], ["mat-icon", "iconPositionEnd", ""], ["", "matButtonIcon", "", "iconPositionEnd", ""]]],
                cg = [".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])", "*", ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]"],
                Gj = ["mat-fab", ""],
                Wj = ["mat-mini-fab", ""],
                Yj = ["mat-icon-button", ""],
                Kj = ["*"],
                Zj = [{
                        selector: "mat-button",
                        mdcClasses: ["mdc-button", "mat-mdc-button"]
                    }, {
                        selector: "mat-flat-button",
                        mdcClasses: ["mdc-button", "mdc-button--unelevated", "mat-mdc-unelevated-button"]
                    }, {
                        selector: "mat-raised-button",
                        mdcClasses: ["mdc-button", "mdc-button--raised", "mat-mdc-raised-button"]
                    }, {
                        selector: "mat-stroked-button",
                        mdcClasses: ["mdc-button", "mdc-button--outlined", "mat-mdc-outlined-button"]
                    }, {
                        selector: "mat-fab",
                        mdcClasses: ["mdc-fab", "mat-mdc-fab"]
                    }, {
                        selector: "mat-mini-fab",
                        mdcClasses: ["mdc-fab", "mdc-fab--mini", "mat-mdc-mini-fab"]
                    }, {
                        selector: "mat-icon-button",
                        mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"]
                    }
                ],
                Xj = za(lE(ig(class {
                                constructor(n) {
                                    this._elementRef = n
                                }
                            })));
                let Ad = (() => {
                    class n extends Xj {
                        constructor(e, i, r, o) {
                            super(e),
                            this._platform = i,
                            this._ngZone = r,
                            this._animationMode = o,
                            this._focusMonitor = ce(rr),
                            this._isFab = !1;
                            const s = e.nativeElement.classList;
                            for (const a of Zj)
                                this._hasHostAttributes(a.selector) && a.mdcClasses.forEach(c => {
                                    s.add(c)
                                })
                        }
                        ngAfterViewInit() {
                            this._focusMonitor.monitor(this._elementRef, !0)
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef)
                        }
                        focus(e = "program", i) {
                            e ? this._focusMonitor.focusVia(this._elementRef.nativeElement, e, i) : this._elementRef.nativeElement.focus(i)
                        }
                        _hasHostAttributes(...e) {
                            return e.some(i => this._elementRef.nativeElement.hasAttribute(i))
                        }
                        _isRippleDisabled() {
                            return this.disableRipple || this.disabled
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275dir = N({
                        type: n,
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(or, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i.ripple = r.first)
                            }
                        },
                        features: [H]
                    }),
                    n
                })(),
                lg = (() => {
                    class n extends Ad {
                        constructor(e, i, r, o) {
                            super(e, i, r, o)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(_t), p(X), p(yt, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["button", "mat-button", ""], ["button", "mat-raised-button", ""], ["button", "mat-flat-button", ""], ["button", "mat-stroked-button", ""]],
                        hostVars: 7,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("disabled", i.disabled || null), be("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-unthemed", !i.color)("mat-mdc-button-base", !0))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            color: "color"
                        },
                        exportAs: ["matButton"],
                        features: [H],
                        attrs: $j,
                        ngContentSelectors: cg,
                        decls: 8,
                        vars: 6,
                        consts: [[1, "mat-mdc-button-persistent-ripple"], [1, "mdc-button__label"], [1, "mat-mdc-focus-indicator"], ["matRipple", "", 1, "mat-mdc-button-ripple", 3, "matRippleDisabled", "matRippleTrigger"], [1, "mat-mdc-button-touch-target"]],
                        template: function (e, i) {
                            1 & e && (vt(ag), V(0, "span", 0), ye(1), g(2, "span", 1), ye(3, 1), b(), ye(4, 2), V(5, "span", 2)(6, "span", 3)(7, "span", 4)),
                            2 & e && (be("mdc-button__ripple", !i._isFab)("mdc-fab__ripple", i._isFab), w(6), y("matRippleDisabled", i._isRippleDisabled())("matRippleTrigger", i._elementRef.nativeElement))
                        },
                        dependencies: [or],
                        styles: ['.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}', ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })();
                const fE = new T("mat-mdc-fab-default-options", {
                    providedIn: "root",
                    factory: pE
                });
                function pE() {
                    return {
                        color: "accent"
                    }
                }
                const kd = pE();
                let Jj = (() => {
                    class n extends Ad {
                        constructor(e, i, r, o, s) {
                            super(e, i, r, o),
                            this._options = s,
                            this._isFab = !0,
                            this._options = this._options || kd,
                            this.color = this.defaultColor = this._options.color || kd.color
                        }
                        get extended() {
                            return this._extended
                        }
                        set extended(e) {
                            this._extended = Ne(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(_t), p(X), p(yt, 8), p(fE, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["button", "mat-fab", ""]],
                        hostVars: 11,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("disabled", i.disabled || null), be("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-unthemed", !i.color)("mat-mdc-button-base", !0)("mdc-fab--extended", i.extended)("mat-mdc-extended-fab", i.extended))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            color: "color",
                            tabIndex: "tabIndex",
                            extended: "extended"
                        },
                        exportAs: ["matButton"],
                        features: [H],
                        attrs: Gj,
                        ngContentSelectors: cg,
                        decls: 8,
                        vars: 6,
                        consts: [[1, "mat-mdc-button-persistent-ripple"], [1, "mdc-button__label"], [1, "mat-mdc-focus-indicator"], ["matRipple", "", 1, "mat-mdc-button-ripple", 3, "matRippleDisabled", "matRippleTrigger"], [1, "mat-mdc-button-touch-target"]],
                        template: function (e, i) {
                            1 & e && (vt(ag), V(0, "span", 0), ye(1), g(2, "span", 1), ye(3, 1), b(), ye(4, 2), V(5, "span", 2)(6, "span", 3)(7, "span", 4)),
                            2 & e && (be("mdc-button__ripple", !i._isFab)("mdc-fab__ripple", i._isFab), w(6), y("matRippleDisabled", i._isRippleDisabled())("matRippleTrigger", i._elementRef.nativeElement))
                        },
                        dependencies: [or],
                        styles: ['.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                sr = (() => {
                    class n extends Ad {
                        constructor(e, i, r, o, s) {
                            super(e, i, r, o),
                            this._options = s,
                            this._isFab = !0,
                            this._options = this._options || kd,
                            this.color = this.defaultColor = this._options.color || kd.color
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(_t), p(X), p(yt, 8), p(fE, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["button", "mat-mini-fab", ""]],
                        hostVars: 7,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("disabled", i.disabled || null), be("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-unthemed", !i.color)("mat-mdc-button-base", !0))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            color: "color"
                        },
                        exportAs: ["matButton"],
                        features: [H],
                        attrs: Wj,
                        ngContentSelectors: cg,
                        decls: 8,
                        vars: 6,
                        consts: [[1, "mat-mdc-button-persistent-ripple"], [1, "mdc-button__label"], [1, "mat-mdc-focus-indicator"], ["matRipple", "", 1, "mat-mdc-button-ripple", 3, "matRippleDisabled", "matRippleTrigger"], [1, "mat-mdc-button-touch-target"]],
                        template: function (e, i) {
                            1 & e && (vt(ag), V(0, "span", 0), ye(1), g(2, "span", 1), ye(3, 1), b(), ye(4, 2), V(5, "span", 2)(6, "span", 3)(7, "span", 4)),
                            2 & e && (be("mdc-button__ripple", !i._isFab)("mdc-fab__ripple", i._isFab), w(6), y("matRippleDisabled", i._isRippleDisabled())("matRippleTrigger", i._elementRef.nativeElement))
                        },
                        dependencies: [or],
                        styles: ['.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-fab{position:relative;display:inline-flex;position:relative;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;user-select:none;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-fab .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-fab[hidden]{display:none}.mdc-fab::-moz-focus-inner{padding:0;border:0}.mdc-fab .mdc-fab__focus-ring{position:absolute}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    )}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring{border-color:CanvasText}}.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-fab.mdc-ripple-upgraded--background-focused .mdc-fab__focus-ring::after,.mdc-fab:not(.mdc-ripple-upgraded):focus .mdc-fab__focus-ring::after{border-color:CanvasText}}.mdc-fab:active,.mdc-fab:focus{outline:none}.mdc-fab:hover{cursor:pointer}.mdc-fab>svg{width:100%}.mdc-fab--mini{width:40px;height:40px}.mdc-fab--extended{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mdc-fab--extended .mdc-fab__ripple{border-radius:24px}.mdc-fab--extended .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mdc-fab--extended .mdc-fab__icon,.mdc-fab--extended .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mdc-fab--extended .mdc-fab__label+.mdc-fab__icon,.mdc-fab--extended .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mdc-fab--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-fab--touch .mdc-fab__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-fab::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-fab::before{border-color:CanvasText}}.mdc-fab__label{justify-content:flex-start;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;overflow-y:visible}.mdc-fab__icon{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mdc-fab .mdc-fab__icon{display:inline-flex;align-items:center;justify-content:center}.mdc-fab--exited{transform:scale(0);opacity:0;transition:opacity 15ms linear 150ms,transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab--exited .mdc-fab__icon{transform:scale(0);transition:transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-fab .mdc-fab__icon{width:24px;height:24px;font-size:24px}.mdc-fab:not(.mdc-fab--extended){border-radius:50%}.mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:50%}.mat-mdc-fab,.mat-mdc-mini-fab{background-color:var(--mdc-fab-container-color, transparent);box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);color:var(--mat-mdc-fab-color, inherit);flex-shrink:0}.mat-mdc-fab .mat-mdc-button-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple,.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-fab .mat-ripple-element,.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-fab .mdc-button__label,.mat-mdc-mini-fab .mdc-button__label{z-index:1}.mat-mdc-fab .mat-mdc-focus-indicator,.mat-mdc-mini-fab .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab:focus .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-fab .mat-mdc-button-touch-target,.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab._mat-animation-noopable,.mat-mdc-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab:not(:disabled) .mdc-fab__icon,.mat-mdc-mini-fab:not(:disabled) .mdc-fab__icon{color:var(--mdc-fab-icon-color, inherit)}.mat-mdc-fab:not(.mdc-fab--extended),.mat-mdc-mini-fab:not(.mdc-fab--extended){border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:not(.mdc-fab--extended) .mdc-fab__ripple,.mat-mdc-mini-fab:not(.mdc-fab--extended) .mdc-fab__ripple{border-radius:var(--mdc-fab-container-shape, 50%)}.mat-mdc-fab:hover,.mat-mdc-fab:focus,.mat-mdc-mini-fab:hover,.mat-mdc-mini-fab:focus{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active,.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-mdc-fab[disabled],.mat-mdc-mini-fab[disabled]{cursor:default;pointer-events:none;box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-fab:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-mini-fab:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}.mat-mdc-fab .mat-icon,.mat-mdc-fab .material-icons,.mat-mdc-mini-fab .mat-icon,.mat-mdc-mini-fab .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab .mat-mdc-focus-indicator::before,.mat-mdc-mini-fab .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-extended-fab{border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;height:48px;line-height:normal}.mat-mdc-extended-fab .mdc-fab__ripple{border-radius:24px}.mat-mdc-extended-fab .mdc-fab__icon{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__icon[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon,.mat-mdc-extended-fab .mdc-fab__label+.mdc-fab__icon[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:calc(12px - 20px);margin-right:12px}[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons,.mat-mdc-extended-fab>.mat-icon[dir=rtl],.mat-mdc-extended-fab>.material-icons[dir=rtl]{margin-left:12px;margin-right:calc(12px - 20px)}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons{margin-left:12px;margin-right:calc(12px - 20px)}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-extended-fab .mdc-button__label+.material-icons[dir=rtl]{margin-left:calc(12px - 20px);margin-right:12px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                mE = (() => {
                    class n extends Ad {
                        constructor(e, i, r, o) {
                            super(e, i, r, o)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(_t), p(X), p(yt, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["button", "mat-icon-button", ""]],
                        hostVars: 7,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("disabled", i.disabled || null), be("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-unthemed", !i.color)("mat-mdc-button-base", !0))
                        },
                        inputs: {
                            disabled: "disabled",
                            disableRipple: "disableRipple",
                            color: "color"
                        },
                        exportAs: ["matButton"],
                        features: [H],
                        attrs: Yj,
                        ngContentSelectors: Kj,
                        decls: 5,
                        vars: 3,
                        consts: [[1, "mat-mdc-button-persistent-ripple", "mdc-icon-button__ripple"], [1, "mat-mdc-focus-indicator"], ["matRipple", "", 1, "mat-mdc-button-ripple", 3, "matRippleDisabled", "matRippleCentered", "matRippleTrigger"], [1, "mat-mdc-button-touch-target"]],
                        template: function (e, i) {
                            1 & e && (vt(), V(0, "span", 0), ye(1), V(2, "span", 1)(3, "span", 2)(4, "span", 3)),
                            2 & e && (w(3), y("matRippleDisabled", i._isRippleDisabled())("matRippleCentered", !0)("matRippleTrigger", i._elementRef.nativeElement))
                        },
                        dependencies: [or],
                        styles: ['.mdc-icon-button{font-size:24px;width:48px;height:48px;padding:12px}.mdc-icon-button .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-icon-button.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none;z-index:0;overflow:visible}.mdc-icon-button .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}@media screen and (forced-colors: active){.mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__focus-ring,.mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__focus-ring{display:block}}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button[hidden]{display:none}.mdc-icon-button--display-flex{align-items:center;display:inline-flex;justify-content:center}.mdc-icon-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%;display:none}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring{border-color:CanvasText}}.mdc-icon-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-icon-button__focus-ring::after{border-color:CanvasText}}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}.mdc-icon-button__link{height:100%;left:0;outline:none;position:absolute;top:0;width:100%}.mat-mdc-icon-button{height:var(--mdc-icon-button-state-layer-size, 48px);width:var(--mdc-icon-button-state-layer-size, 48px);color:var(--mdc-icon-button-icon-color, inherit);border-radius:50%;flex-shrink:0}.mat-mdc-icon-button .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button svg,.mat-mdc-icon-button img{width:var(--mdc-icon-button-icon-size, 24px);height:var(--mdc-icon-button-icon-size, 24px)}.mat-mdc-icon-button:disabled{opacity:var(--mdc-icon-button-disabled-icon-opacity, 0.38)}.mat-mdc-icon-button:disabled{color:var(--mdc-icon-button-disabled-icon-color, #000)}.mat-mdc-icon-button[disabled]{cursor:default;pointer-events:none;opacity:1}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-icon-button .mdc-button__label{z-index:1}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}', ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                eH = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, sg, ct]
                    }),
                    n
                })();
                const tH = ["addListener", "removeListener"],
                nH = ["addEventListener", "removeEventListener"],
                iH = ["on", "off"];
                function Pi(n, t, e, i) {
                    if (pe(e) && (i = e, e = void 0), i)
                        return Pi(n, t, e).pipe(wm(i));
                    const [r, o] = function sH(n) {
                        return pe(n.addEventListener) && pe(n.removeEventListener)
                    }
                    (n) ? nH.map(s => a => n[s](t, a, e)) : function rH(n) {
                        return pe(n.addListener) && pe(n.removeListener)
                    }
                    (n) ? tH.map(gE(n, t)) : function oH(n) {
                        return pe(n.on) && pe(n.off)
                    }
                    (n) ? iH.map(gE(n, t)) : [];
                    if (!r && ah(n))
                        return ut(s => Pi(s, t, e))(Rt(n));
                    if (!r)
                        throw new TypeError("Invalid event target");
                    return new Ae(s => {
                        const a = (...c) => s.next(1 < c.length ? c : c[0]);
                        return r(a),
                        () => o(a)
                    })
                }
                function gE(n, t) {
                    return e => i => n[e](t, i)
                }
                const Wa = {
                    schedule(n) {
                        let t = requestAnimationFrame,
                        e = cancelAnimationFrame;
                        const {
                            delegate: i
                        } = Wa;
                        i && (t = i.requestAnimationFrame, e = i.cancelAnimationFrame);
                        const r = t(o => {
                            e = void 0,
                            n(o)
                        });
                        return new nt(() => e?.(r))
                    },
                    requestAnimationFrame(...n) {
                        const {
                            delegate: t
                        } = Wa;
                        return (t?.requestAnimationFrame || requestAnimationFrame)(...n)
                    },
                    cancelAnimationFrame(...n) {
                        const {
                            delegate: t
                        } = Wa;
                        return (t?.cancelAnimationFrame || cancelAnimationFrame)(...n)
                    },
                    delegate: void 0
                };
                new class cH extends Qm {
                    flush(t) {
                        this._active = !0;
                        const e = this._scheduled;
                        this._scheduled = void 0;
                        const {
                            actions: i
                        } = this;
                        let r;
                        t = t || i.shift();
                        do {
                            if (r = t.execute(t.state, t.delay))
                                break
                        } while ((t = i[0]) && t.id === e && i.shift());
                        if (this._active = !1, r) {
                            for (; (t = i[0]) && t.id === e && i.shift(); )
                                t.unsubscribe();
                            throw r
                        }
                    }
                }
                (class aH extends Xm {
                    constructor(t, e) {
                        super(t, e),
                        this.scheduler = t,
                        this.work = e
                    }
                    requestAsyncId(t, e, i = 0) {
                        return null !== i && i > 0 ? super.requestAsyncId(t, e, i) : (t.actions.push(this), t._scheduled || (t._scheduled = Wa.requestAnimationFrame(() => t.flush(void 0))))
                    }
                    recycleAsyncId(t, e, i = 0) {
                        var r;
                        if (null != i ? i > 0 : this.delay > 0)
                            return super.recycleAsyncId(t, e, i);
                        const {
                            actions: o
                        } = t;
                        null != e && (null === (r = o[o.length - 1]) || void 0 === r ? void 0 : r.id) !== e && (Wa.cancelAnimationFrame(e), t._scheduled = void 0)
                    }
                });
                let dg,
                dH = 1;
                const Id = {};
                function _E(n) {
                    return n in Id && (delete Id[n], !0)
                }
                const uH = {
                    setImmediate(n) {
                        const t = dH++;
                        return Id[t] = !0,
                        dg || (dg = Promise.resolve()),
                        dg.then(() => _E(t) && n()),
                        t
                    },
                    clearImmediate(n) {
                        _E(n)
                    }
                }, {
                    setImmediate: hH,
                    clearImmediate: fH
                } = uH,
                Od = {
                    setImmediate(...n) {
                        const {
                            delegate: t
                        } = Od;
                        return (t?.setImmediate || hH)(...n)
                    },
                    clearImmediate(n) {
                        const {
                            delegate: t
                        } = Od;
                        return (t?.clearImmediate || fH)(n)
                    },
                    delegate: void 0
                };
                new class mH extends Qm {
                    flush(t) {
                        this._active = !0;
                        const e = this._scheduled;
                        this._scheduled = void 0;
                        const {
                            actions: i
                        } = this;
                        let r;
                        t = t || i.shift();
                        do {
                            if (r = t.execute(t.state, t.delay))
                                break
                        } while ((t = i[0]) && t.id === e && i.shift());
                        if (this._active = !1, r) {
                            for (; (t = i[0]) && t.id === e && i.shift(); )
                                t.unsubscribe();
                            throw r
                        }
                    }
                }
                (class pH extends Xm {
                    constructor(t, e) {
                        super(t, e),
                        this.scheduler = t,
                        this.work = e
                    }
                    requestAsyncId(t, e, i = 0) {
                        return null !== i && i > 0 ? super.requestAsyncId(t, e, i) : (t.actions.push(this), t._scheduled || (t._scheduled = Od.setImmediate(t.flush.bind(t, void 0))))
                    }
                    recycleAsyncId(t, e, i = 0) {
                        var r;
                        if (null != i ? i > 0 : this.delay > 0)
                            return super.recycleAsyncId(t, e, i);
                        const {
                            actions: o
                        } = t;
                        null != e && (null === (r = o[o.length - 1]) || void 0 === r ? void 0 : r.id) !== e && (Od.clearImmediate(e), t._scheduled = void 0)
                    }
                });
                function bE(n = 0, t, e = JB) {
                    let i = -1;
                    return null != t && (nb(t) ? e = t : i = t),
                    new Ae(r => {
                        let o = function bH(n) {
                            return n instanceof Date && !isNaN(n)
                        }
                        (n) ? +n - e.now() : n;
                        o < 0 && (o = 0);
                        let s = 0;
                        return e.schedule(function () {
                            r.closed || (r.next(s++), 0 <= i ? this.schedule(void 0, i) : r.complete())
                        }, o)
                    })
                }
                function vE(n, t = Dd) {
                    return function _H(n) {
                        return Be((t, e) => {
                            let i = !1,
                            r = null,
                            o = null,
                            s = !1;
                            const a = () => {
                                if (o?.unsubscribe(), o = null, i) {
                                    i = !1;
                                    const l = r;
                                    r = null,
                                    e.next(l)
                                }
                                s && e.complete()
                            },
                            c = () => {
                                o = null,
                                s && e.complete()
                            };
                            t.subscribe(Ve(e, l => {
                                    i = !0,
                                    r = l,
                                    o || Rt(n(l)).subscribe(o = Ve(e, a, c))
                                }, () => {
                                    s = !0,
                                    (!i || !o || o.closed) && e.complete()
                                }))
                        })
                    }
                    (() => bE(n, t))
                }
                let qa = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._ngZone = e,
                            this._platform = i,
                            this._scrolled = new K,
                            this._globalSubscription = null,
                            this._scrolledCount = 0,
                            this.scrollContainers = new Map,
                            this._document = r
                        }
                        register(e) {
                            this.scrollContainers.has(e) || this.scrollContainers.set(e, e.elementScrolled().subscribe(() => this._scrolled.next(e)))
                        }
                        deregister(e) {
                            const i = this.scrollContainers.get(e);
                            i && (i.unsubscribe(), this.scrollContainers.delete(e))
                        }
                        scrolled(e = 20) {
                            return this._platform.isBrowser ? new Ae(i => {
                                this._globalSubscription || this._addGlobalListener();
                                const r = e > 0 ? this._scrolled.pipe(vE(e)).subscribe(i) : this._scrolled.subscribe(i);
                                return this._scrolledCount++,
                                () => {
                                    r.unsubscribe(),
                                    this._scrolledCount--,
                                    this._scrolledCount || this._removeGlobalListener()
                                }
                            }) : B()
                        }
                        ngOnDestroy() {
                            this._removeGlobalListener(),
                            this.scrollContainers.forEach((e, i) => this.deregister(i)),
                            this._scrolled.complete()
                        }
                        ancestorScrolled(e, i) {
                            const r = this.getAncestorScrollContainers(e);
                            return this.scrolled(i).pipe(ve(o => !o || r.indexOf(o) > -1))
                        }
                        getAncestorScrollContainers(e) {
                            const i = [];
                            return this.scrollContainers.forEach((r, o) => {
                                this._scrollableContainsElement(o, e) && i.push(o)
                            }),
                            i
                        }
                        _getWindow() {
                            return this._document.defaultView || window
                        }
                        _scrollableContainsElement(e, i) {
                            let r = cs(i),
                            o = e.getElementRef().nativeElement;
                            do {
                                if (r == o)
                                    return !0
                            } while (r = r.parentElement);
                            return !1
                        }
                        _addGlobalListener() {
                            this._globalSubscription = this._ngZone.runOutsideAngular(() => Pi(this._getWindow().document, "scroll").subscribe(() => this._scrolled.next()))
                        }
                        _removeGlobalListener() {
                            this._globalSubscription && (this._globalSubscription.unsubscribe(), this._globalSubscription = null)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(X), v(_t), v(Q, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                Ya = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this.elementRef = e,
                            this.scrollDispatcher = i,
                            this.ngZone = r,
                            this.dir = o,
                            this._destroyed = new K,
                            this._elementScrolled = new Ae(s => this.ngZone.runOutsideAngular(() => Pi(this.elementRef.nativeElement, "scroll").pipe(et(this._destroyed)).subscribe(s)))
                        }
                        ngOnInit() {
                            this.scrollDispatcher.register(this)
                        }
                        ngOnDestroy() {
                            this.scrollDispatcher.deregister(this),
                            this._destroyed.next(),
                            this._destroyed.complete()
                        }
                        elementScrolled() {
                            return this._elementScrolled
                        }
                        getElementRef() {
                            return this.elementRef
                        }
                        scrollTo(e) {
                            const i = this.elementRef.nativeElement,
                            r = this.dir && "rtl" == this.dir.value;
                            null == e.left && (e.left = r ? e.end : e.start),
                            null == e.right && (e.right = r ? e.start : e.end),
                            null != e.bottom && (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                            r && 0 != Va() ? (null != e.left && (e.right = i.scrollWidth - i.clientWidth - e.left), 2 == Va() ? e.left = e.right : 1 == Va() && (e.left = e.right ? -e.right : e.right)) : null != e.right && (e.left = i.scrollWidth - i.clientWidth - e.right),
                            this._applyScrollToOptions(e)
                        }
                        _applyScrollToOptions(e) {
                            const i = this.elementRef.nativeElement;
                            $x() ? i.scrollTo(e) : (null != e.top && (i.scrollTop = e.top), null != e.left && (i.scrollLeft = e.left))
                        }
                        measureScrollOffset(e) {
                            const i = "left",
                            r = "right",
                            o = this.elementRef.nativeElement;
                            if ("top" == e)
                                return o.scrollTop;
                            if ("bottom" == e)
                                return o.scrollHeight - o.clientHeight - o.scrollTop;
                            const s = this.dir && "rtl" == this.dir.value;
                            return "start" == e ? e = s ? r : i : "end" == e && (e = s ? i : r),
                            s && 2 == Va() ? e == i ? o.scrollWidth - o.clientWidth - o.scrollLeft : o.scrollLeft : s && 1 == Va() ? e == i ? o.scrollLeft + o.scrollWidth - o.clientWidth : -o.scrollLeft : e == i ? o.scrollLeft : o.scrollWidth - o.clientWidth - o.scrollLeft
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(qa), p(X), p(hs, 8))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "cdk-scrollable", ""], ["", "cdkScrollable", ""]]
                    }),
                    n
                })(),
                ug = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._platform = e,
                            this._change = new K,
                            this._changeListener = o => {
                                this._change.next(o)
                            },
                            this._document = r,
                            i.runOutsideAngular(() => {
                                if (e.isBrowser) {
                                    const o = this._getWindow();
                                    o.addEventListener("resize", this._changeListener),
                                    o.addEventListener("orientationchange", this._changeListener)
                                }
                                this.change().subscribe(() => this._viewportSize = null)
                            })
                        }
                        ngOnDestroy() {
                            if (this._platform.isBrowser) {
                                const e = this._getWindow();
                                e.removeEventListener("resize", this._changeListener),
                                e.removeEventListener("orientationchange", this._changeListener)
                            }
                            this._change.complete()
                        }
                        getViewportSize() {
                            this._viewportSize || this._updateViewportSize();
                            const e = {
                                width: this._viewportSize.width,
                                height: this._viewportSize.height
                            };
                            return this._platform.isBrowser || (this._viewportSize = null),
                            e
                        }
                        getViewportRect() {
                            const e = this.getViewportScrollPosition(), {
                                width: i,
                                height: r
                            } = this.getViewportSize();
                            return {
                                top: e.top,
                                left: e.left,
                                bottom: e.top + r,
                                right: e.left + i,
                                height: r,
                                width: i
                            }
                        }
                        getViewportScrollPosition() {
                            if (!this._platform.isBrowser)
                                return {
                                    top: 0,
                                    left: 0
                                };
                            const e = this._document,
                            i = this._getWindow(),
                            r = e.documentElement,
                            o = r.getBoundingClientRect();
                            return {
                                top: -o.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                                left: -o.left || e.body.scrollLeft || i.scrollX || r.scrollLeft || 0
                            }
                        }
                        change(e = 20) {
                            return e > 0 ? this._change.pipe(vE(e)) : this._change
                        }
                        _getWindow() {
                            return this._document.defaultView || window
                        }
                        _updateViewportSize() {
                            const e = this._getWindow();
                            this._viewportSize = this._platform.isBrowser ? {
                                width: e.innerWidth,
                                height: e.innerHeight
                            }
                             : {
                                width: 0,
                                height: 0
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(_t), v(X), v(Q, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                Ka = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })(),
                hg = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [$a, Ka, $a, Ka]
                    }),
                    n
                })();
                class fg {
                    attach(t) {
                        return this._attachedHost = t,
                        t.attach(this)
                    }
                    detach() {
                        let t = this._attachedHost;
                        null != t && (this._attachedHost = null, t.detach())
                    }
                    get isAttached() {
                        return null != this._attachedHost
                    }
                    setAttachedHost(t) {
                        this._attachedHost = t
                    }
                }
                class Rd extends fg {
                    constructor(t, e, i, r, o) {
                        super(),
                        this.component = t,
                        this.viewContainerRef = e,
                        this.injector = i,
                        this.componentFactoryResolver = r,
                        this.projectableNodes = o
                    }
                }
                class pg extends fg {
                    constructor(t, e, i, r) {
                        super(),
                        this.templateRef = t,
                        this.viewContainerRef = e,
                        this.context = i,
                        this.injector = r
                    }
                    get origin() {
                        return this.templateRef.elementRef
                    }
                    attach(t, e = this.context) {
                        return this.context = e,
                        super.attach(t)
                    }
                    detach() {
                        return this.context = void 0,
                        super.detach()
                    }
                }
                class wH extends fg {
                    constructor(t) {
                        super(),
                        this.element = t instanceof se ? t.nativeElement : t
                    }
                }
                class mg {
                    constructor() {
                        this._isDisposed = !1,
                        this.attachDomPortal = null
                    }
                    hasAttached() {
                        return !!this._attachedPortal
                    }
                    attach(t) {
                        return t instanceof Rd ? (this._attachedPortal = t, this.attachComponentPortal(t)) : t instanceof pg ? (this._attachedPortal = t, this.attachTemplatePortal(t)) : this.attachDomPortal && t instanceof wH ? (this._attachedPortal = t, this.attachDomPortal(t)) : void 0
                    }
                    detach() {
                        this._attachedPortal && (this._attachedPortal.setAttachedHost(null), this._attachedPortal = null),
                        this._invokeDisposeFn()
                    }
                    dispose() {
                        this.hasAttached() && this.detach(),
                        this._invokeDisposeFn(),
                        this._isDisposed = !0
                    }
                    setDisposeFn(t) {
                        this._disposeFn = t
                    }
                    _invokeDisposeFn() {
                        this._disposeFn && (this._disposeFn(), this._disposeFn = null)
                    }
                }
                class CH extends mg {
                    constructor(t, e, i, r, o) {
                        super(),
                        this.outletElement = t,
                        this._componentFactoryResolver = e,
                        this._appRef = i,
                        this._defaultInjector = r,
                        this.attachDomPortal = s => {
                            const a = s.element,
                            c = this._document.createComment("dom-portal");
                            a.parentNode.insertBefore(c, a),
                            this.outletElement.appendChild(a),
                            this._attachedPortal = s,
                            super.setDisposeFn(() => {
                                c.parentNode && c.parentNode.replaceChild(a, c)
                            })
                        },
                        this._document = o
                    }
                    attachComponentPortal(t) {
                        const i = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component);
                        let r;
                        return t.viewContainerRef ? (r = t.viewContainerRef.createComponent(i, t.viewContainerRef.length, t.injector || t.viewContainerRef.injector, t.projectableNodes || void 0), this.setDisposeFn(() => r.destroy())) : (r = i.create(t.injector || this._defaultInjector || rt.NULL), this._appRef.attachView(r.hostView), this.setDisposeFn(() => {
                                this._appRef.viewCount > 0 && this._appRef.detachView(r.hostView),
                                r.destroy()
                            })),
                        this.outletElement.appendChild(this._getComponentRootNode(r)),
                        this._attachedPortal = t,
                        r
                    }
                    attachTemplatePortal(t) {
                        let e = t.viewContainerRef,
                        i = e.createEmbeddedView(t.templateRef, t.context, {
                            injector: t.injector
                        });
                        return i.rootNodes.forEach(r => this.outletElement.appendChild(r)),
                        i.detectChanges(),
                        this.setDisposeFn(() => {
                            let r = e.indexOf(i);
                            -1 !== r && e.remove(r)
                        }),
                        this._attachedPortal = t,
                        i
                    }
                    dispose() {
                        super.dispose(),
                        this.outletElement.remove()
                    }
                    _getComponentRootNode(t) {
                        return t.hostView.rootNodes[0]
                    }
                }
                let Pd = (() => {
                    class n extends mg {
                        constructor(e, i, r) {
                            super(),
                            this._componentFactoryResolver = e,
                            this._viewContainerRef = i,
                            this._isInitialized = !1,
                            this.attached = new re,
                            this.attachDomPortal = o => {
                                const s = o.element,
                                a = this._document.createComment("dom-portal");
                                o.setAttachedHost(this),
                                s.parentNode.insertBefore(a, s),
                                this._getRootNode().appendChild(s),
                                this._attachedPortal = o,
                                super.setDisposeFn(() => {
                                    a.parentNode && a.parentNode.replaceChild(s, a)
                                })
                            },
                            this._document = r
                        }
                        get portal() {
                            return this._attachedPortal
                        }
                        set portal(e) {
                            this.hasAttached() && !e && !this._isInitialized || (this.hasAttached() && super.detach(), e && super.attach(e), this._attachedPortal = e || null)
                        }
                        get attachedRef() {
                            return this._attachedRef
                        }
                        ngOnInit() {
                            this._isInitialized = !0
                        }
                        ngOnDestroy() {
                            super.dispose(),
                            this._attachedRef = this._attachedPortal = null
                        }
                        attachComponentPortal(e) {
                            e.setAttachedHost(this);
                            const i = null != e.viewContainerRef ? e.viewContainerRef : this._viewContainerRef,
                            o = (e.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(e.component),
                            s = i.createComponent(o, i.length, e.injector || i.injector, e.projectableNodes || void 0);
                            return i !== this._viewContainerRef && this._getRootNode().appendChild(s.hostView.rootNodes[0]),
                            super.setDisposeFn(() => s.destroy()),
                            this._attachedPortal = e,
                            this._attachedRef = s,
                            this.attached.emit(s),
                            s
                        }
                        attachTemplatePortal(e) {
                            e.setAttachedHost(this);
                            const i = this._viewContainerRef.createEmbeddedView(e.templateRef, e.context, {
                                injector: e.injector
                            });
                            return super.setDisposeFn(() => this._viewContainerRef.clear()),
                            this._attachedPortal = e,
                            this._attachedRef = i,
                            this.attached.emit(i),
                            i
                        }
                        _getRootNode() {
                            const e = this._viewContainerRef.element.nativeElement;
                            return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Pr), p(Yt), p(Q))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "cdkPortalOutlet", ""]],
                        inputs: {
                            portal: ["cdkPortalOutlet", "portal"]
                        },
                        outputs: {
                            attached: "attached"
                        },
                        exportAs: ["cdkPortalOutlet"],
                        features: [H]
                    }),
                    n
                })(),
                Za = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })();
                const yE = $x();
                class DH {
                    constructor(t, e) {
                        this._viewportRuler = t,
                        this._previousHTMLStyles = {
                            top: "",
                            left: ""
                        },
                        this._isEnabled = !1,
                        this._document = e
                    }
                    attach() {}
                    enable() {
                        if (this._canBeEnabled()) {
                            const t = this._document.documentElement;
                            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition(),
                            this._previousHTMLStyles.left = t.style.left || "",
                            this._previousHTMLStyles.top = t.style.top || "",
                            t.style.left = at(-this._previousScrollPosition.left),
                            t.style.top = at(-this._previousScrollPosition.top),
                            t.classList.add("cdk-global-scrollblock"),
                            this._isEnabled = !0
                        }
                    }
                    disable() {
                        if (this._isEnabled) {
                            const t = this._document.documentElement,
                            i = t.style,
                            r = this._document.body.style,
                            o = i.scrollBehavior || "",
                            s = r.scrollBehavior || "";
                            this._isEnabled = !1,
                            i.left = this._previousHTMLStyles.left,
                            i.top = this._previousHTMLStyles.top,
                            t.classList.remove("cdk-global-scrollblock"),
                            yE && (i.scrollBehavior = r.scrollBehavior = "auto"),
                            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top),
                            yE && (i.scrollBehavior = o, r.scrollBehavior = s)
                        }
                    }
                    _canBeEnabled() {
                        if (this._document.documentElement.classList.contains("cdk-global-scrollblock") || this._isEnabled)
                            return !1;
                        const e = this._document.body,
                        i = this._viewportRuler.getViewportSize();
                        return e.scrollHeight > i.height || e.scrollWidth > i.width
                    }
                }
                class xH {
                    constructor(t, e, i, r) {
                        this._scrollDispatcher = t,
                        this._ngZone = e,
                        this._viewportRuler = i,
                        this._config = r,
                        this._scrollSubscription = null,
                        this._detach = () => {
                            this.disable(),
                            this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach())
                        }
                    }
                    attach(t) {
                        this._overlayRef = t
                    }
                    enable() {
                        if (this._scrollSubscription)
                            return;
                        const t = this._scrollDispatcher.scrolled(0);
                        this._config && this._config.threshold && this._config.threshold > 1 ? (this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top, this._scrollSubscription = t.subscribe(() => {
                                const e = this._viewportRuler.getViewportScrollPosition().top;
                                Math.abs(e - this._initialScrollPosition) > this._config.threshold ? this._detach() : this._overlayRef.updatePosition()
                            })) : this._scrollSubscription = t.subscribe(this._detach)
                    }
                    disable() {
                        this._scrollSubscription && (this._scrollSubscription.unsubscribe(), this._scrollSubscription = null)
                    }
                    detach() {
                        this.disable(),
                        this._overlayRef = null
                    }
                }
                class wE {
                    enable() {}
                    disable() {}
                    attach() {}
                }
                function gg(n, t) {
                    return t.some(e => n.bottom < e.top || n.top > e.bottom || n.right < e.left || n.left > e.right)
                }
                function CE(n, t) {
                    return t.some(e => n.top < e.top || n.bottom > e.bottom || n.left < e.left || n.right > e.right)
                }
                class EH {
                    constructor(t, e, i, r) {
                        this._scrollDispatcher = t,
                        this._viewportRuler = e,
                        this._ngZone = i,
                        this._config = r,
                        this._scrollSubscription = null
                    }
                    attach(t) {
                        this._overlayRef = t
                    }
                    enable() {
                        this._scrollSubscription || (this._scrollSubscription = this._scrollDispatcher.scrolled(this._config ? this._config.scrollThrottle : 0).subscribe(() => {
                                if (this._overlayRef.updatePosition(), this._config && this._config.autoClose) {
                                    const e = this._overlayRef.overlayElement.getBoundingClientRect(), {
                                        width: i,
                                        height: r
                                    } = this._viewportRuler.getViewportSize();
                                    gg(e, [{
                                                width: i,
                                                height: r,
                                                bottom: r,
                                                right: i,
                                                top: 0,
                                                left: 0
                                            }
                                        ]) && (this.disable(), this._ngZone.run(() => this._overlayRef.detach()))
                                }
                            }))
                    }
                    disable() {
                        this._scrollSubscription && (this._scrollSubscription.unsubscribe(), this._scrollSubscription = null)
                    }
                    detach() {
                        this.disable(),
                        this._overlayRef = null
                    }
                }
                let SH = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this._scrollDispatcher = e,
                            this._viewportRuler = i,
                            this._ngZone = r,
                            this.noop = () => new wE,
                            this.close = s => new xH(this._scrollDispatcher, this._ngZone, this._viewportRuler, s),
                            this.block = () => new DH(this._viewportRuler, this._document),
                            this.reposition = s => new EH(this._scrollDispatcher, this._viewportRuler, this._ngZone, s),
                            this._document = o
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(qa), v(ug), v(X), v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                class DE {
                    constructor(t) {
                        if (this.scrollStrategy = new wE, this.panelClass = "", this.hasBackdrop = !1, this.backdropClass = "cdk-overlay-dark-backdrop", this.disposeOnNavigation = !1, t) {
                            const e = Object.keys(t);
                            for (const i of e)
                                void 0 !== t[i] && (this[i] = t[i])
                        }
                    }
                }
                class MH {
                    constructor(t, e) {
                        this.connectionPair = t,
                        this.scrollableViewProperties = e
                    }
                }
                let xE = (() => {
                    class n {
                        constructor(e) {
                            this._attachedOverlays = [],
                            this._document = e
                        }
                        ngOnDestroy() {
                            this.detach()
                        }
                        add(e) {
                            this.remove(e),
                            this._attachedOverlays.push(e)
                        }
                        remove(e) {
                            const i = this._attachedOverlays.indexOf(e);
                            i > -1 && this._attachedOverlays.splice(i, 1),
                            0 === this._attachedOverlays.length && this.detach()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                TH = (() => {
                    class n extends xE {
                        constructor(e, i) {
                            super(e),
                            this._ngZone = i,
                            this._keydownListener = r => {
                                const o = this._attachedOverlays;
                                for (let s = o.length - 1; s > -1; s--)
                                    if (o[s]._keydownEvents.observers.length > 0) {
                                        const a = o[s]._keydownEvents;
                                        this._ngZone ? this._ngZone.run(() => a.next(r)) : a.next(r);
                                        break
                                    }
                            }
                        }
                        add(e) {
                            super.add(e),
                            this._isAttached || (this._ngZone ? this._ngZone.runOutsideAngular(() => this._document.body.addEventListener("keydown", this._keydownListener)) : this._document.body.addEventListener("keydown", this._keydownListener), this._isAttached = !0)
                        }
                        detach() {
                            this._isAttached && (this._document.body.removeEventListener("keydown", this._keydownListener), this._isAttached = !1)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q), v(X, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                AH = (() => {
                    class n extends xE {
                        constructor(e, i, r) {
                            super(e),
                            this._platform = i,
                            this._ngZone = r,
                            this._cursorStyleIsSet = !1,
                            this._pointerDownListener = o => {
                                this._pointerDownEventTarget = Yr(o)
                            },
                            this._clickListener = o => {
                                const s = Yr(o),
                                a = "click" === o.type && this._pointerDownEventTarget ? this._pointerDownEventTarget : s;
                                this._pointerDownEventTarget = null;
                                const c = this._attachedOverlays.slice();
                                for (let l = c.length - 1; l > -1; l--) {
                                    const d = c[l];
                                    if (d._outsidePointerEvents.observers.length < 1 || !d.hasAttached())
                                        continue;
                                    if (d.overlayElement.contains(s) || d.overlayElement.contains(a))
                                        break;
                                    const u = d._outsidePointerEvents;
                                    this._ngZone ? this._ngZone.run(() => u.next(o)) : u.next(o)
                                }
                            }
                        }
                        add(e) {
                            if (super.add(e), !this._isAttached) {
                                const i = this._document.body;
                                this._ngZone ? this._ngZone.runOutsideAngular(() => this._addEventListeners(i)) : this._addEventListeners(i),
                                this._platform.IOS && !this._cursorStyleIsSet && (this._cursorOriginalValue = i.style.cursor, i.style.cursor = "pointer", this._cursorStyleIsSet = !0),
                                this._isAttached = !0
                            }
                        }
                        detach() {
                            if (this._isAttached) {
                                const e = this._document.body;
                                e.removeEventListener("pointerdown", this._pointerDownListener, !0),
                                e.removeEventListener("click", this._clickListener, !0),
                                e.removeEventListener("auxclick", this._clickListener, !0),
                                e.removeEventListener("contextmenu", this._clickListener, !0),
                                this._platform.IOS && this._cursorStyleIsSet && (e.style.cursor = this._cursorOriginalValue, this._cursorStyleIsSet = !1),
                                this._isAttached = !1
                            }
                        }
                        _addEventListeners(e) {
                            e.addEventListener("pointerdown", this._pointerDownListener, !0),
                            e.addEventListener("click", this._clickListener, !0),
                            e.addEventListener("auxclick", this._clickListener, !0),
                            e.addEventListener("contextmenu", this._clickListener, !0)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q), v(_t), v(X, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                Fd = (() => {
                    class n {
                        constructor(e, i) {
                            this._platform = i,
                            this._document = e
                        }
                        ngOnDestroy() {
                            this._containerElement?.remove()
                        }
                        getContainerElement() {
                            return this._containerElement || this._createContainer(),
                            this._containerElement
                        }
                        _createContainer() {
                            const e = "cdk-overlay-container";
                            if (this._platform.isBrowser || Zm()) {
                                const r = this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);
                                for (let o = 0; o < r.length; o++)
                                    r[o].remove()
                            }
                            const i = this._document.createElement("div");
                            i.classList.add(e),
                            Zm() ? i.setAttribute("platform", "test") : this._platform.isBrowser || i.setAttribute("platform", "server"),
                            this._document.body.appendChild(i),
                            this._containerElement = i
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q), v(_t))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                class Xa {
                    constructor(t, e, i, r, o, s, a, c, l, d = !1) {
                        this._portalOutlet = t,
                        this._host = e,
                        this._pane = i,
                        this._config = r,
                        this._ngZone = o,
                        this._keyboardDispatcher = s,
                        this._document = a,
                        this._location = c,
                        this._outsideClickDispatcher = l,
                        this._animationsDisabled = d,
                        this._backdropElement = null,
                        this._backdropClick = new K,
                        this._attachments = new K,
                        this._detachments = new K,
                        this._locationChanges = nt.EMPTY,
                        this._backdropClickHandler = u => this._backdropClick.next(u),
                        this._backdropTransitionendHandler = u => {
                            this._disposeBackdrop(u.target)
                        },
                        this._keydownEvents = new K,
                        this._outsidePointerEvents = new K,
                        r.scrollStrategy && (this._scrollStrategy = r.scrollStrategy, this._scrollStrategy.attach(this)),
                        this._positionStrategy = r.positionStrategy
                    }
                    get overlayElement() {
                        return this._pane
                    }
                    get backdropElement() {
                        return this._backdropElement
                    }
                    get hostElement() {
                        return this._host
                    }
                    attach(t) {
                        !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host);
                        const e = this._portalOutlet.attach(t);
                        return this._positionStrategy && this._positionStrategy.attach(this),
                        this._updateStackingOrder(),
                        this._updateElementSize(),
                        this._updateElementDirection(),
                        this._scrollStrategy && this._scrollStrategy.enable(),
                        this._ngZone.onStable.pipe(Ge(1)).subscribe(() => {
                            this.hasAttached() && this.updatePosition()
                        }),
                        this._togglePointerEvents(!0),
                        this._config.hasBackdrop && this._attachBackdrop(),
                        this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0),
                        this._attachments.next(),
                        this._keyboardDispatcher.add(this),
                        this._config.disposeOnNavigation && (this._locationChanges = this._location.subscribe(() => this.dispose())),
                        this._outsideClickDispatcher.add(this),
                        "function" == typeof e?.onDestroy && e.onDestroy(() => {
                            this.hasAttached() && this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()))
                        }),
                        e
                    }
                    detach() {
                        if (!this.hasAttached())
                            return;
                        this.detachBackdrop(),
                        this._togglePointerEvents(!1),
                        this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(),
                        this._scrollStrategy && this._scrollStrategy.disable();
                        const t = this._portalOutlet.detach();
                        return this._detachments.next(),
                        this._keyboardDispatcher.remove(this),
                        this._detachContentWhenStable(),
                        this._locationChanges.unsubscribe(),
                        this._outsideClickDispatcher.remove(this),
                        t
                    }
                    dispose() {
                        const t = this.hasAttached();
                        this._positionStrategy && this._positionStrategy.dispose(),
                        this._disposeScrollStrategy(),
                        this._disposeBackdrop(this._backdropElement),
                        this._locationChanges.unsubscribe(),
                        this._keyboardDispatcher.remove(this),
                        this._portalOutlet.dispose(),
                        this._attachments.complete(),
                        this._backdropClick.complete(),
                        this._keydownEvents.complete(),
                        this._outsidePointerEvents.complete(),
                        this._outsideClickDispatcher.remove(this),
                        this._host?.remove(),
                        this._previousHostParent = this._pane = this._host = null,
                        t && this._detachments.next(),
                        this._detachments.complete()
                    }
                    hasAttached() {
                        return this._portalOutlet.hasAttached()
                    }
                    backdropClick() {
                        return this._backdropClick
                    }
                    attachments() {
                        return this._attachments
                    }
                    detachments() {
                        return this._detachments
                    }
                    keydownEvents() {
                        return this._keydownEvents
                    }
                    outsidePointerEvents() {
                        return this._outsidePointerEvents
                    }
                    getConfig() {
                        return this._config
                    }
                    updatePosition() {
                        this._positionStrategy && this._positionStrategy.apply()
                    }
                    updatePositionStrategy(t) {
                        t !== this._positionStrategy && (this._positionStrategy && this._positionStrategy.dispose(), this._positionStrategy = t, this.hasAttached() && (t.attach(this), this.updatePosition()))
                    }
                    updateSize(t) {
                        this._config = {
                            ...this._config,
                            ...t
                        },
                        this._updateElementSize()
                    }
                    setDirection(t) {
                        this._config = {
                            ...this._config,
                            direction: t
                        },
                        this._updateElementDirection()
                    }
                    addPanelClass(t) {
                        this._pane && this._toggleClasses(this._pane, t, !0)
                    }
                    removePanelClass(t) {
                        this._pane && this._toggleClasses(this._pane, t, !1)
                    }
                    getDirection() {
                        const t = this._config.direction;
                        return t ? "string" == typeof t ? t : t.value : "ltr"
                    }
                    updateScrollStrategy(t) {
                        t !== this._scrollStrategy && (this._disposeScrollStrategy(), this._scrollStrategy = t, this.hasAttached() && (t.attach(this), t.enable()))
                    }
                    _updateElementDirection() {
                        this._host.setAttribute("dir", this.getDirection())
                    }
                    _updateElementSize() {
                        if (!this._pane)
                            return;
                        const t = this._pane.style;
                        t.width = at(this._config.width),
                        t.height = at(this._config.height),
                        t.minWidth = at(this._config.minWidth),
                        t.minHeight = at(this._config.minHeight),
                        t.maxWidth = at(this._config.maxWidth),
                        t.maxHeight = at(this._config.maxHeight)
                    }
                    _togglePointerEvents(t) {
                        this._pane.style.pointerEvents = t ? "" : "none"
                    }
                    _attachBackdrop() {
                        const t = "cdk-overlay-backdrop-showing";
                        this._backdropElement = this._document.createElement("div"),
                        this._backdropElement.classList.add("cdk-overlay-backdrop"),
                        this._animationsDisabled && this._backdropElement.classList.add("cdk-overlay-backdrop-noop-animation"),
                        this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0),
                        this._host.parentElement.insertBefore(this._backdropElement, this._host),
                        this._backdropElement.addEventListener("click", this._backdropClickHandler),
                        !this._animationsDisabled && typeof requestAnimationFrame < "u" ? this._ngZone.runOutsideAngular(() => {
                            requestAnimationFrame(() => {
                                this._backdropElement && this._backdropElement.classList.add(t)
                            })
                        }) : this._backdropElement.classList.add(t)
                    }
                    _updateStackingOrder() {
                        this._host.nextSibling && this._host.parentNode.appendChild(this._host)
                    }
                    detachBackdrop() {
                        const t = this._backdropElement;
                        if (t) {
                            if (this._animationsDisabled)
                                return void this._disposeBackdrop(t);
                            t.classList.remove("cdk-overlay-backdrop-showing"),
                            this._ngZone.runOutsideAngular(() => {
                                t.addEventListener("transitionend", this._backdropTransitionendHandler)
                            }),
                            t.style.pointerEvents = "none",
                            this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {
                                        this._disposeBackdrop(t)
                                    }, 500))
                        }
                    }
                    _toggleClasses(t, e, i) {
                        const r = xd(e || []).filter(o => !!o);
                        r.length && (i ? t.classList.add(...r) : t.classList.remove(...r))
                    }
                    _detachContentWhenStable() {
                        this._ngZone.runOutsideAngular(() => {
                            const t = this._ngZone.onStable.pipe(et(Cr(this._attachments, this._detachments))).subscribe(() => {
                                (!this._pane || !this._host || 0 === this._pane.children.length) && (this._pane && this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !1), this._host && this._host.parentElement && (this._previousHostParent = this._host.parentElement, this._host.remove()), t.unsubscribe())
                            })
                        })
                    }
                    _disposeScrollStrategy() {
                        const t = this._scrollStrategy;
                        t && (t.disable(), t.detach && t.detach())
                    }
                    _disposeBackdrop(t) {
                        t && (t.removeEventListener("click", this._backdropClickHandler), t.removeEventListener("transitionend", this._backdropTransitionendHandler), t.remove(), this._backdropElement === t && (this._backdropElement = null)),
                        this._backdropTimeout && (clearTimeout(this._backdropTimeout), this._backdropTimeout = void 0)
                    }
                }
                const EE = "cdk-overlay-connected-position-bounding-box",
                kH = /([A-Za-z%]+)$/;
                class IH {
                    constructor(t, e, i, r, o) {
                        this._viewportRuler = e,
                        this._document = i,
                        this._platform = r,
                        this._overlayContainer = o,
                        this._lastBoundingBoxSize = {
                            width: 0,
                            height: 0
                        },
                        this._isPushed = !1,
                        this._canPush = !0,
                        this._growAfterOpen = !1,
                        this._hasFlexibleDimensions = !0,
                        this._positionLocked = !1,
                        this._viewportMargin = 0,
                        this._scrollables = [],
                        this._preferredPositions = [],
                        this._positionChanges = new K,
                        this._resizeSubscription = nt.EMPTY,
                        this._offsetX = 0,
                        this._offsetY = 0,
                        this._appliedPanelClasses = [],
                        this.positionChanges = this._positionChanges,
                        this.setOrigin(t)
                    }
                    get positions() {
                        return this._preferredPositions
                    }
                    attach(t) {
                        this._validatePositions(),
                        t.hostElement.classList.add(EE),
                        this._overlayRef = t,
                        this._boundingBox = t.hostElement,
                        this._pane = t.overlayElement,
                        this._isDisposed = !1,
                        this._isInitialRender = !0,
                        this._lastPosition = null,
                        this._resizeSubscription.unsubscribe(),
                        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
                            this._isInitialRender = !0,
                            this.apply()
                        })
                    }
                    apply() {
                        if (this._isDisposed || !this._platform.isBrowser)
                            return;
                        if (!this._isInitialRender && this._positionLocked && this._lastPosition)
                            return void this.reapplyLastPosition();
                        this._clearPanelClasses(),
                        this._resetOverlayElementStyles(),
                        this._resetBoundingBoxStyles(),
                        this._viewportRect = this._getNarrowedViewportRect(),
                        this._originRect = this._getOriginRect(),
                        this._overlayRect = this._pane.getBoundingClientRect(),
                        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();
                        const t = this._originRect,
                        e = this._overlayRect,
                        i = this._viewportRect,
                        r = this._containerRect,
                        o = [];
                        let s;
                        for (let a of this._preferredPositions) {
                            let c = this._getOriginPoint(t, r, a),
                            l = this._getOverlayPoint(c, e, a),
                            d = this._getOverlayFit(l, e, i, a);
                            if (d.isCompletelyWithinViewport)
                                return this._isPushed = !1, void this._applyPosition(a, c);
                            this._canFitWithFlexibleDimensions(d, l, i) ? o.push({
                                position: a,
                                origin: c,
                                overlayRect: e,
                                boundingBoxRect: this._calculateBoundingBoxRect(c, a)
                            }) : (!s || s.overlayFit.visibleArea < d.visibleArea) && (s = {
                                    overlayFit: d,
                                    overlayPoint: l,
                                    originPoint: c,
                                    position: a,
                                    overlayRect: e
                                })
                        }
                        if (o.length) {
                            let a = null,
                            c = -1;
                            for (const l of o) {
                                const d = l.boundingBoxRect.width * l.boundingBoxRect.height * (l.position.weight || 1);
                                d > c && (c = d, a = l)
                            }
                            return this._isPushed = !1,
                            void this._applyPosition(a.position, a.origin)
                        }
                        if (this._canPush)
                            return this._isPushed = !0, void this._applyPosition(s.position, s.originPoint);
                        this._applyPosition(s.position, s.originPoint)
                    }
                    detach() {
                        this._clearPanelClasses(),
                        this._lastPosition = null,
                        this._previousPushAmount = null,
                        this._resizeSubscription.unsubscribe()
                    }
                    dispose() {
                        this._isDisposed || (this._boundingBox && Kr(this._boundingBox.style, {
                                top: "",
                                left: "",
                                right: "",
                                bottom: "",
                                height: "",
                                width: "",
                                alignItems: "",
                                justifyContent: ""
                            }), this._pane && this._resetOverlayElementStyles(), this._overlayRef && this._overlayRef.hostElement.classList.remove(EE), this.detach(), this._positionChanges.complete(), this._overlayRef = this._boundingBox = null, this._isDisposed = !0)
                    }
                    reapplyLastPosition() {
                        if (this._isDisposed || !this._platform.isBrowser)
                            return;
                        const t = this._lastPosition;
                        if (t) {
                            this._originRect = this._getOriginRect(),
                            this._overlayRect = this._pane.getBoundingClientRect(),
                            this._viewportRect = this._getNarrowedViewportRect(),
                            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();
                            const e = this._getOriginPoint(this._originRect, this._containerRect, t);
                            this._applyPosition(t, e)
                        } else
                            this.apply()
                    }
                    withScrollableContainers(t) {
                        return this._scrollables = t,
                        this
                    }
                    withPositions(t) {
                        return this._preferredPositions = t,
                        -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
                        this._validatePositions(),
                        this
                    }
                    withViewportMargin(t) {
                        return this._viewportMargin = t,
                        this
                    }
                    withFlexibleDimensions(t = !0) {
                        return this._hasFlexibleDimensions = t,
                        this
                    }
                    withGrowAfterOpen(t = !0) {
                        return this._growAfterOpen = t,
                        this
                    }
                    withPush(t = !0) {
                        return this._canPush = t,
                        this
                    }
                    withLockedPosition(t = !0) {
                        return this._positionLocked = t,
                        this
                    }
                    setOrigin(t) {
                        return this._origin = t,
                        this
                    }
                    withDefaultOffsetX(t) {
                        return this._offsetX = t,
                        this
                    }
                    withDefaultOffsetY(t) {
                        return this._offsetY = t,
                        this
                    }
                    withTransformOriginOn(t) {
                        return this._transformOriginSelector = t,
                        this
                    }
                    _getOriginPoint(t, e, i) {
                        let r,
                        o;
                        if ("center" == i.originX)
                            r = t.left + t.width / 2;
                        else {
                            const s = this._isRtl() ? t.right : t.left,
                            a = this._isRtl() ? t.left : t.right;
                            r = "start" == i.originX ? s : a
                        }
                        return e.left < 0 && (r -= e.left),
                        o = "center" == i.originY ? t.top + t.height / 2 : "top" == i.originY ? t.top : t.bottom,
                        e.top < 0 && (o -= e.top), {
                            x: r,
                            y: o
                        }
                    }
                    _getOverlayPoint(t, e, i) {
                        let r,
                        o;
                        return r = "center" == i.overlayX ? -e.width / 2 : "start" === i.overlayX ? this._isRtl() ? -e.width : 0 : this._isRtl() ? 0 : -e.width,
                        o = "center" == i.overlayY ? -e.height / 2 : "top" == i.overlayY ? 0 : -e.height, {
                            x: t.x + r,
                            y: t.y + o
                        }
                    }
                    _getOverlayFit(t, e, i, r) {
                        const o = ME(e);
                        let {
                            x: s,
                            y: a
                        } = t,
                        c = this._getOffset(r, "x"),
                        l = this._getOffset(r, "y");
                        c && (s += c),
                        l && (a += l);
                        let h = 0 - a,
                        f = a + o.height - i.height,
                        m = this._subtractOverflows(o.width, 0 - s, s + o.width - i.width),
                        _ = this._subtractOverflows(o.height, h, f),
                        C = m * _;
                        return {
                            visibleArea: C,
                            isCompletelyWithinViewport: o.width * o.height === C,
                            fitsInViewportVertically: _ === o.height,
                            fitsInViewportHorizontally: m == o.width
                        }
                    }
                    _canFitWithFlexibleDimensions(t, e, i) {
                        if (this._hasFlexibleDimensions) {
                            const r = i.bottom - e.y,
                            o = i.right - e.x,
                            s = SE(this._overlayRef.getConfig().minHeight),
                            a = SE(this._overlayRef.getConfig().minWidth),
                            l = t.fitsInViewportHorizontally || null != a && a <= o;
                            return (t.fitsInViewportVertically || null != s && s <= r) && l
                        }
                        return !1
                    }
                    _pushOverlayOnScreen(t, e, i) {
                        if (this._previousPushAmount && this._positionLocked)
                            return {
                                x: t.x + this._previousPushAmount.x,
                                y: t.y + this._previousPushAmount.y
                            };
                        const r = ME(e),
                        o = this._viewportRect,
                        s = Math.max(t.x + r.width - o.width, 0),
                        a = Math.max(t.y + r.height - o.height, 0),
                        c = Math.max(o.top - i.top - t.y, 0),
                        l = Math.max(o.left - i.left - t.x, 0);
                        let d = 0,
                        u = 0;
                        return d = r.width <= o.width ? l || -s : t.x < this._viewportMargin ? o.left - i.left - t.x : 0,
                        u = r.height <= o.height ? c || -a : t.y < this._viewportMargin ? o.top - i.top - t.y : 0,
                        this._previousPushAmount = {
                            x: d,
                            y: u
                        }, {
                            x: t.x + d,
                            y: t.y + u
                        }
                    }
                    _applyPosition(t, e) {
                        if (this._setTransformOrigin(t), this._setOverlayElementStyles(e, t), this._setBoundingBoxStyles(e, t), t.panelClass && this._addPanelClasses(t.panelClass), this._lastPosition = t, this._positionChanges.observers.length) {
                            const i = this._getScrollVisibility(),
                            r = new MH(t, i);
                            this._positionChanges.next(r)
                        }
                        this._isInitialRender = !1
                    }
                    _setTransformOrigin(t) {
                        if (!this._transformOriginSelector)
                            return;
                        const e = this._boundingBox.querySelectorAll(this._transformOriginSelector);
                        let i,
                        r = t.overlayY;
                        i = "center" === t.overlayX ? "center" : this._isRtl() ? "start" === t.overlayX ? "right" : "left" : "start" === t.overlayX ? "left" : "right";
                        for (let o = 0; o < e.length; o++)
                            e[o].style.transformOrigin = `${i} ${r}`
                    }
                    _calculateBoundingBoxRect(t, e) {
                        const i = this._viewportRect,
                        r = this._isRtl();
                        let o,
                        s,
                        a,
                        d,
                        u,
                        h;
                        if ("top" === e.overlayY)
                            s = t.y, o = i.height - s + this._viewportMargin;
                        else if ("bottom" === e.overlayY)
                            a = i.height - t.y + 2 * this._viewportMargin, o = i.height - a + this._viewportMargin;
                        else {
                            const f = Math.min(i.bottom - t.y + i.top, t.y),
                            m = this._lastBoundingBoxSize.height;
                            o = 2 * f,
                            s = t.y - f,
                            o > m && !this._isInitialRender && !this._growAfterOpen && (s = t.y - m / 2)
                        }
                        if ("end" === e.overlayX && !r || "start" === e.overlayX && r)
                            h = i.width - t.x + this._viewportMargin, d = t.x - this._viewportMargin;
                        else if ("start" === e.overlayX && !r || "end" === e.overlayX && r)
                            u = t.x, d = i.right - t.x;
                        else {
                            const f = Math.min(i.right - t.x + i.left, t.x),
                            m = this._lastBoundingBoxSize.width;
                            d = 2 * f,
                            u = t.x - f,
                            d > m && !this._isInitialRender && !this._growAfterOpen && (u = t.x - m / 2)
                        }
                        return {
                            top: s,
                            left: u,
                            bottom: a,
                            right: h,
                            width: d,
                            height: o
                        }
                    }
                    _setBoundingBoxStyles(t, e) {
                        const i = this._calculateBoundingBoxRect(t, e);
                        !this._isInitialRender && !this._growAfterOpen && (i.height = Math.min(i.height, this._lastBoundingBoxSize.height), i.width = Math.min(i.width, this._lastBoundingBoxSize.width));
                        const r = {};
                        if (this._hasExactPosition())
                            r.top = r.left = "0", r.bottom = r.right = r.maxHeight = r.maxWidth = "", r.width = r.height = "100%";
                        else {
                            const o = this._overlayRef.getConfig().maxHeight,
                            s = this._overlayRef.getConfig().maxWidth;
                            r.height = at(i.height),
                            r.top = at(i.top),
                            r.bottom = at(i.bottom),
                            r.width = at(i.width),
                            r.left = at(i.left),
                            r.right = at(i.right),
                            r.alignItems = "center" === e.overlayX ? "center" : "end" === e.overlayX ? "flex-end" : "flex-start",
                            r.justifyContent = "center" === e.overlayY ? "center" : "bottom" === e.overlayY ? "flex-end" : "flex-start",
                            o && (r.maxHeight = at(o)),
                            s && (r.maxWidth = at(s))
                        }
                        this._lastBoundingBoxSize = i,
                        Kr(this._boundingBox.style, r)
                    }
                    _resetBoundingBoxStyles() {
                        Kr(this._boundingBox.style, {
                            top: "0",
                            left: "0",
                            right: "0",
                            bottom: "0",
                            height: "",
                            width: "",
                            alignItems: "",
                            justifyContent: ""
                        })
                    }
                    _resetOverlayElementStyles() {
                        Kr(this._pane.style, {
                            top: "",
                            left: "",
                            bottom: "",
                            right: "",
                            position: "",
                            transform: ""
                        })
                    }
                    _setOverlayElementStyles(t, e) {
                        const i = {},
                        r = this._hasExactPosition(),
                        o = this._hasFlexibleDimensions,
                        s = this._overlayRef.getConfig();
                        if (r) {
                            const d = this._viewportRuler.getViewportScrollPosition();
                            Kr(i, this._getExactOverlayY(e, t, d)),
                            Kr(i, this._getExactOverlayX(e, t, d))
                        } else
                            i.position = "static";
                        let a = "",
                        c = this._getOffset(e, "x"),
                        l = this._getOffset(e, "y");
                        c && (a += `translateX(${c}px) `),
                        l && (a += `translateY(${l}px)`),
                        i.transform = a.trim(),
                        s.maxHeight && (r ? i.maxHeight = at(s.maxHeight) : o && (i.maxHeight = "")),
                        s.maxWidth && (r ? i.maxWidth = at(s.maxWidth) : o && (i.maxWidth = "")),
                        Kr(this._pane.style, i)
                    }
                    _getExactOverlayY(t, e, i) {
                        let r = {
                            top: "",
                            bottom: ""
                        },
                        o = this._getOverlayPoint(e, this._overlayRect, t);
                        return this._isPushed && (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
                        "bottom" === t.overlayY ? r.bottom = this._document.documentElement.clientHeight - (o.y + this._overlayRect.height) + "px" : r.top = at(o.y),
                        r
                    }
                    _getExactOverlayX(t, e, i) {
                        let s,
                        r = {
                            left: "",
                            right: ""
                        },
                        o = this._getOverlayPoint(e, this._overlayRect, t);
                        return this._isPushed && (o = this._pushOverlayOnScreen(o, this._overlayRect, i)),
                        s = this._isRtl() ? "end" === t.overlayX ? "left" : "right" : "end" === t.overlayX ? "right" : "left",
                        "right" === s ? r.right = this._document.documentElement.clientWidth - (o.x + this._overlayRect.width) + "px" : r.left = at(o.x),
                        r
                    }
                    _getScrollVisibility() {
                        const t = this._getOriginRect(),
                        e = this._pane.getBoundingClientRect(),
                        i = this._scrollables.map(r => r.getElementRef().nativeElement.getBoundingClientRect());
                        return {
                            isOriginClipped: CE(t, i),
                            isOriginOutsideView: gg(t, i),
                            isOverlayClipped: CE(e, i),
                            isOverlayOutsideView: gg(e, i)
                        }
                    }
                    _subtractOverflows(t, ...e) {
                        return e.reduce((i, r) => i - Math.max(r, 0), t)
                    }
                    _getNarrowedViewportRect() {
                        const t = this._document.documentElement.clientWidth,
                        e = this._document.documentElement.clientHeight,
                        i = this._viewportRuler.getViewportScrollPosition();
                        return {
                            top: i.top + this._viewportMargin,
                            left: i.left + this._viewportMargin,
                            right: i.left + t - this._viewportMargin,
                            bottom: i.top + e - this._viewportMargin,
                            width: t - 2 * this._viewportMargin,
                            height: e - 2 * this._viewportMargin
                        }
                    }
                    _isRtl() {
                        return "rtl" === this._overlayRef.getDirection()
                    }
                    _hasExactPosition() {
                        return !this._hasFlexibleDimensions || this._isPushed
                    }
                    _getOffset(t, e) {
                        return "x" === e ? t.offsetX ?? this._offsetX : t.offsetY ?? this._offsetY
                    }
                    _validatePositions() {}
                    _addPanelClasses(t) {
                        this._pane && xd(t).forEach(e => {
                            "" !== e && -1 === this._appliedPanelClasses.indexOf(e) && (this._appliedPanelClasses.push(e), this._pane.classList.add(e))
                        })
                    }
                    _clearPanelClasses() {
                        this._pane && (this._appliedPanelClasses.forEach(t => {
                                this._pane.classList.remove(t)
                            }), this._appliedPanelClasses = [])
                    }
                    _getOriginRect() {
                        const t = this._origin;
                        if (t instanceof se)
                            return t.nativeElement.getBoundingClientRect();
                        if (t instanceof Element)
                            return t.getBoundingClientRect();
                        const e = t.width || 0,
                        i = t.height || 0;
                        return {
                            top: t.y,
                            bottom: t.y + i,
                            left: t.x,
                            right: t.x + e,
                            height: i,
                            width: e
                        }
                    }
                }
                function Kr(n, t) {
                    for (let e in t)
                        t.hasOwnProperty(e) && (n[e] = t[e]);
                    return n
                }
                function SE(n) {
                    if ("number" != typeof n && null != n) {
                        const [t, e] = n.split(kH);
                        return e && "px" !== e ? null : parseFloat(t)
                    }
                    return n || null
                }
                function ME(n) {
                    return {
                        top: Math.floor(n.top),
                        right: Math.floor(n.right),
                        bottom: Math.floor(n.bottom),
                        left: Math.floor(n.left),
                        width: Math.floor(n.width),
                        height: Math.floor(n.height)
                    }
                }
                const TE = "cdk-global-overlay-wrapper";
                class OH {
                    constructor() {
                        this._cssPosition = "static",
                        this._topOffset = "",
                        this._bottomOffset = "",
                        this._alignItems = "",
                        this._xPosition = "",
                        this._xOffset = "",
                        this._width = "",
                        this._height = "",
                        this._isDisposed = !1
                    }
                    attach(t) {
                        const e = t.getConfig();
                        this._overlayRef = t,
                        this._width && !e.width && t.updateSize({
                            width: this._width
                        }),
                        this._height && !e.height && t.updateSize({
                            height: this._height
                        }),
                        t.hostElement.classList.add(TE),
                        this._isDisposed = !1
                    }
                    top(t = "") {
                        return this._bottomOffset = "",
                        this._topOffset = t,
                        this._alignItems = "flex-start",
                        this
                    }
                    left(t = "") {
                        return this._xOffset = t,
                        this._xPosition = "left",
                        this
                    }
                    bottom(t = "") {
                        return this._topOffset = "",
                        this._bottomOffset = t,
                        this._alignItems = "flex-end",
                        this
                    }
                    right(t = "") {
                        return this._xOffset = t,
                        this._xPosition = "right",
                        this
                    }
                    start(t = "") {
                        return this._xOffset = t,
                        this._xPosition = "start",
                        this
                    }
                    end(t = "") {
                        return this._xOffset = t,
                        this._xPosition = "end",
                        this
                    }
                    width(t = "") {
                        return this._overlayRef ? this._overlayRef.updateSize({
                            width: t
                        }) : this._width = t,
                        this
                    }
                    height(t = "") {
                        return this._overlayRef ? this._overlayRef.updateSize({
                            height: t
                        }) : this._height = t,
                        this
                    }
                    centerHorizontally(t = "") {
                        return this.left(t),
                        this._xPosition = "center",
                        this
                    }
                    centerVertically(t = "") {
                        return this.top(t),
                        this._alignItems = "center",
                        this
                    }
                    apply() {
                        if (!this._overlayRef || !this._overlayRef.hasAttached())
                            return;
                        const t = this._overlayRef.overlayElement.style,
                        e = this._overlayRef.hostElement.style,
                        i = this._overlayRef.getConfig(), {
                            width: r,
                            height: o,
                            maxWidth: s,
                            maxHeight: a
                        } = i,
                        c = !("100%" !== r && "100vw" !== r || s && "100%" !== s && "100vw" !== s),
                        l = !("100%" !== o && "100vh" !== o || a && "100%" !== a && "100vh" !== a),
                        d = this._xPosition,
                        u = this._xOffset,
                        h = "rtl" === this._overlayRef.getConfig().direction;
                        let f = "",
                        m = "",
                        _ = "";
                        c ? _ = "flex-start" : "center" === d ? (_ = "center", h ? m = u : f = u) : h ? "left" === d || "end" === d ? (_ = "flex-end", f = u) : ("right" === d || "start" === d) && (_ = "flex-start", m = u) : "left" === d || "start" === d ? (_ = "flex-start", f = u) : ("right" === d || "end" === d) && (_ = "flex-end", m = u),
                        t.position = this._cssPosition,
                        t.marginLeft = c ? "0" : f,
                        t.marginTop = l ? "0" : this._topOffset,
                        t.marginBottom = this._bottomOffset,
                        t.marginRight = c ? "0" : m,
                        e.justifyContent = _,
                        e.alignItems = l ? "flex-start" : this._alignItems
                    }
                    dispose() {
                        if (this._isDisposed || !this._overlayRef)
                            return;
                        const t = this._overlayRef.overlayElement.style,
                        e = this._overlayRef.hostElement,
                        i = e.style;
                        e.classList.remove(TE),
                        i.justifyContent = i.alignItems = t.marginTop = t.marginBottom = t.marginLeft = t.marginRight = t.position = "",
                        this._overlayRef = null,
                        this._isDisposed = !0
                    }
                }
                let RH = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this._viewportRuler = e,
                            this._document = i,
                            this._platform = r,
                            this._overlayContainer = o
                        }
                        global() {
                            return new OH
                        }
                        flexibleConnectedTo(e) {
                            return new IH(e, this._viewportRuler, this._document, this._platform, this._overlayContainer)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(ug), v(Q), v(_t), v(Fd))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                PH = 0,
                ar = (() => {
                    class n {
                        constructor(e, i, r, o, s, a, c, l, d, u, h, f) {
                            this.scrollStrategies = e,
                            this._overlayContainer = i,
                            this._componentFactoryResolver = r,
                            this._positionBuilder = o,
                            this._keyboardDispatcher = s,
                            this._injector = a,
                            this._ngZone = c,
                            this._document = l,
                            this._directionality = d,
                            this._location = u,
                            this._outsideClickDispatcher = h,
                            this._animationsModuleType = f
                        }
                        create(e) {
                            const i = this._createHostElement(),
                            r = this._createPaneElement(i),
                            o = this._createPortalOutlet(r),
                            s = new DE(e);
                            return s.direction = s.direction || this._directionality.value,
                            new Xa(o, i, r, s, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, "NoopAnimations" === this._animationsModuleType)
                        }
                        position() {
                            return this._positionBuilder
                        }
                        _createPaneElement(e) {
                            const i = this._document.createElement("div");
                            return i.id = "cdk-overlay-" + PH++,
                            i.classList.add("cdk-overlay-pane"),
                            e.appendChild(i),
                            i
                        }
                        _createHostElement() {
                            const e = this._document.createElement("div");
                            return this._overlayContainer.getContainerElement().appendChild(e),
                            e
                        }
                        _createPortalOutlet(e) {
                            return this._appRef || (this._appRef = this._injector.get(Hr)),
                            new CH(e, this._componentFactoryResolver, this._appRef, this._injector, this._document)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(SH), v(Fd), v(Pr), v(RH), v(TH), v(rt), v(X), v(Q), v(hs), v(Sa), v(AH), v(yt, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const LH = {
                    provide: new T("cdk-connected-overlay-scroll-strategy"),
                    deps: [ar],
                    useFactory: function NH(n) {
                        return () => n.scrollStrategies.reposition()
                    }
                };
                let _g = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [ar, LH],
                        imports: [$a, Za, hg, hg]
                    }),
                    n
                })();
                var Zr_OPEN = "mdc-dialog--open",
                AE_DIALOG_ANIMATION_CLOSE_TIME_MS = (["textarea", ".mdc-menu .mdc-list-item", ".mdc-menu .mdc-deprecated-list-item"].join(", "), 75);
                function fs(n) {
                    return new Ae(t => {
                        Rt(n()).subscribe(t)
                    })
                }
                function VH(n, t) {}
                class Nd {
                    constructor() {
                        this.role = "dialog",
                        this.panelClass = "",
                        this.hasBackdrop = !0,
                        this.backdropClass = "",
                        this.disableClose = !1,
                        this.width = "",
                        this.height = "",
                        this.data = null,
                        this.ariaDescribedBy = null,
                        this.ariaLabelledBy = null,
                        this.ariaLabel = null,
                        this.ariaModal = !0,
                        this.autoFocus = "first-tabbable",
                        this.restoreFocus = !0,
                        this.closeOnNavigation = !0,
                        this.closeOnDestroy = !0
                    }
                }
                let kE = (() => {
                    class n extends mg {
                        constructor(e, i, r, o, s, a, c, l) {
                            super(),
                            this._elementRef = e,
                            this._focusTrapFactory = i,
                            this._config = o,
                            this._interactivityChecker = s,
                            this._ngZone = a,
                            this._overlayRef = c,
                            this._focusMonitor = l,
                            this._elementFocusedBeforeDialogWasOpened = null,
                            this._closeInteractionType = null,
                            this.attachDomPortal = d => {
                                this._portalOutlet.hasAttached();
                                const u = this._portalOutlet.attachDomPortal(d);
                                return this._contentAttached(),
                                u
                            },
                            this._ariaLabelledBy = this._config.ariaLabelledBy || null,
                            this._document = r
                        }
                        _contentAttached() {
                            this._initializeFocusTrap(),
                            this._handleBackdropClicks(),
                            this._captureInitialFocus()
                        }
                        _captureInitialFocus() {
                            this._trapFocus()
                        }
                        ngOnDestroy() {
                            this._restoreFocus()
                        }
                        attachComponentPortal(e) {
                            this._portalOutlet.hasAttached();
                            const i = this._portalOutlet.attachComponentPortal(e);
                            return this._contentAttached(),
                            i
                        }
                        attachTemplatePortal(e) {
                            this._portalOutlet.hasAttached();
                            const i = this._portalOutlet.attachTemplatePortal(e);
                            return this._contentAttached(),
                            i
                        }
                        _recaptureFocus() {
                            this._containsFocus() || this._trapFocus()
                        }
                        _forceFocus(e, i) {
                            this._interactivityChecker.isFocusable(e) || (e.tabIndex = -1, this._ngZone.runOutsideAngular(() => {
                                    const r = () => {
                                        e.removeEventListener("blur", r),
                                        e.removeEventListener("mousedown", r),
                                        e.removeAttribute("tabindex")
                                    };
                                    e.addEventListener("blur", r),
                                    e.addEventListener("mousedown", r)
                                })),
                            e.focus(i)
                        }
                        _focusByCssSelector(e, i) {
                            let r = this._elementRef.nativeElement.querySelector(e);
                            r && this._forceFocus(r, i)
                        }
                        _trapFocus() {
                            const e = this._elementRef.nativeElement;
                            switch (this._config.autoFocus) {
                            case !1:
                            case "dialog":
                                this._containsFocus() || e.focus();
                                break;
                            case !0:
                            case "first-tabbable":
                                this._focusTrap.focusInitialElementWhenReady().then(i => {
                                    i || this._focusDialogContainer()
                                });
                                break;
                            case "first-heading":
                                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');
                                break;
                            default:
                                this._focusByCssSelector(this._config.autoFocus)
                            }
                        }
                        _restoreFocus() {
                            const e = this._config.restoreFocus;
                            let i = null;
                            if ("string" == typeof e ? i = this._document.querySelector(e) : "boolean" == typeof e ? i = e ? this._elementFocusedBeforeDialogWasOpened : null : e && (i = e), this._config.restoreFocus && i && "function" == typeof i.focus) {
                                const r = Km(),
                                o = this._elementRef.nativeElement;
                                (!r || r === this._document.body || r === o || o.contains(r)) && (this._focusMonitor ? (this._focusMonitor.focusVia(i, this._closeInteractionType), this._closeInteractionType = null) : i.focus())
                            }
                            this._focusTrap && this._focusTrap.destroy()
                        }
                        _focusDialogContainer() {
                            this._elementRef.nativeElement.focus && this._elementRef.nativeElement.focus()
                        }
                        _containsFocus() {
                            const e = this._elementRef.nativeElement,
                            i = Km();
                            return e === i || e.contains(i)
                        }
                        _initializeFocusTrap() {
                            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement),
                            this._document && (this._elementFocusedBeforeDialogWasOpened = Km())
                        }
                        _handleBackdropClicks() {
                            this._overlayRef.backdropClick().subscribe(() => {
                                this._config.disableClose && this._recaptureFocus()
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Md), p(Q, 8), p(Nd), p(Ua), p(X), p(Xa), p(rr))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["cdk-dialog-container"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(Pd, 7), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._portalOutlet = r.first)
                            }
                        },
                        hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
                        hostVars: 6,
                        hostBindings: function (e, i) {
                            2 & e && Ee("id", i._config.id || null)("role", i._config.role)("aria-modal", i._config.ariaModal)("aria-labelledby", i._config.ariaLabel ? null : i._ariaLabelledBy)("aria-label", i._config.ariaLabel)("aria-describedby", i._config.ariaDescribedBy || null)
                        },
                        features: [H],
                        decls: 1,
                        vars: 0,
                        consts: [["cdkPortalOutlet", ""]],
                        template: function (e, i) {
                            1 & e && I(0, VH, 0, 0, "ng-template", 0)
                        },
                        dependencies: [Pd],
                        styles: [".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}"],
                        encapsulation: 2
                    }),
                    n
                })();
                class bg {
                    constructor(t, e) {
                        this.overlayRef = t,
                        this.config = e,
                        this.closed = new K,
                        this.disableClose = e.disableClose,
                        this.backdropClick = t.backdropClick(),
                        this.keydownEvents = t.keydownEvents(),
                        this.outsidePointerEvents = t.outsidePointerEvents(),
                        this.id = e.id,
                        this.keydownEvents.subscribe(i => {
                            27 === i.keyCode && !this.disableClose && !as(i) && (i.preventDefault(), this.close(void 0, {
                                    focusOrigin: "keyboard"
                                }))
                        }),
                        this.backdropClick.subscribe(() => {
                            this.disableClose || this.close(void 0, {
                                focusOrigin: "mouse"
                            })
                        })
                    }
                    close(t, e) {
                        if (this.containerInstance) {
                            const i = this.closed;
                            this.containerInstance._closeInteractionType = e?.focusOrigin || "program",
                            this.overlayRef.dispose(),
                            i.next(t),
                            i.complete(),
                            this.componentInstance = this.containerInstance = null
                        }
                    }
                    updatePosition() {
                        return this.overlayRef.updatePosition(),
                        this
                    }
                    updateSize(t = "", e = "") {
                        return this.overlayRef.updateSize({
                            width: t,
                            height: e
                        }),
                        this
                    }
                    addPanelClass(t) {
                        return this.overlayRef.addPanelClass(t),
                        this
                    }
                    removePanelClass(t) {
                        return this.overlayRef.removePanelClass(t),
                        this
                    }
                }
                const IE = new T("DialogScrollStrategy"),
                BH = new T("DialogData"),
                jH = new T("DefaultDialogConfig"),
                UH = {
                    provide: IE,
                    deps: [ar],
                    useFactory: function HH(n) {
                        return () => n.scrollStrategies.block()
                    }
                };
                let $H = 0,
                OE = (() => {
                    class n {
                        constructor(e, i, r, o, s, a) {
                            this._overlay = e,
                            this._injector = i,
                            this._defaultOptions = r,
                            this._parentDialog = o,
                            this._overlayContainer = s,
                            this._openDialogsAtThisLevel = [],
                            this._afterAllClosedAtThisLevel = new K,
                            this._afterOpenedAtThisLevel = new K,
                            this._ariaHiddenElements = new Map,
                            this.afterAllClosed = fs(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(ir(void 0))),
                            this._scrollStrategy = a
                        }
                        get openDialogs() {
                            return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel
                        }
                        get afterOpened() {
                            return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel
                        }
                        open(e, i) {
                            (i = {
                                    ...this._defaultOptions || new Nd,
                                    ...i
                                }).id = i.id || "cdk-dialog-" + $H++,
                            i.id && this.getDialogById(i.id);
                            const o = this._getOverlayConfig(i),
                            s = this._overlay.create(o),
                            a = new bg(s, i),
                            c = this._attachContainer(s, a, i);
                            return a.containerInstance = c,
                            this._attachDialogContent(e, a, c, i),
                            this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(),
                            this.openDialogs.push(a),
                            a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                            this.afterOpened.next(a),
                            a
                        }
                        closeAll() {
                            vg(this.openDialogs, e => e.close())
                        }
                        getDialogById(e) {
                            return this.openDialogs.find(i => i.id === e)
                        }
                        ngOnDestroy() {
                            vg(this._openDialogsAtThisLevel, e => {
                                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1)
                            }),
                            vg(this._openDialogsAtThisLevel, e => e.close()),
                            this._afterAllClosedAtThisLevel.complete(),
                            this._afterOpenedAtThisLevel.complete(),
                            this._openDialogsAtThisLevel = []
                        }
                        _getOverlayConfig(e) {
                            const i = new DE({
                                positionStrategy: e.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),
                                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                                panelClass: e.panelClass,
                                hasBackdrop: e.hasBackdrop,
                                direction: e.direction,
                                minWidth: e.minWidth,
                                minHeight: e.minHeight,
                                maxWidth: e.maxWidth,
                                maxHeight: e.maxHeight,
                                width: e.width,
                                height: e.height,
                                disposeOnNavigation: e.closeOnNavigation
                            });
                            return e.backdropClass && (i.backdropClass = e.backdropClass),
                            i
                        }
                        _attachContainer(e, i, r) {
                            const o = r.injector || r.viewContainerRef?.injector,
                            s = [{
                                    provide: Nd,
                                    useValue: r
                                }, {
                                    provide: bg,
                                    useValue: i
                                }, {
                                    provide: Xa,
                                    useValue: e
                                }
                            ];
                            let a;
                            r.container ? "function" == typeof r.container ? a = r.container : (a = r.container.type, s.push(...r.container.providers(r))) : a = kE;
                            const c = new Rd(a, r.viewContainerRef, rt.create({
                                        parent: o || this._injector,
                                        providers: s
                                    }), r.componentFactoryResolver);
                            return e.attach(c).instance
                        }
                        _attachDialogContent(e, i, r, o) {
                            if (e instanceof Un) {
                                const s = this._createInjector(o, i, r, void 0);
                                let a = {
                                    $implicit: o.data,
                                    dialogRef: i
                                };
                                o.templateContext && (a = {
                                        ...a,
                                        ..."function" == typeof o.templateContext ? o.templateContext() : o.templateContext
                                    }),
                                r.attachTemplatePortal(new pg(e, null, a, s))
                            } else {
                                const s = this._createInjector(o, i, r, this._injector),
                                a = r.attachComponentPortal(new Rd(e, o.viewContainerRef, s, o.componentFactoryResolver));
                                i.componentInstance = a.instance
                            }
                        }
                        _createInjector(e, i, r, o) {
                            const s = e.injector || e.viewContainerRef?.injector,
                            a = [{
                                    provide: BH,
                                    useValue: e.data
                                }, {
                                    provide: bg,
                                    useValue: i
                                }
                            ];
                            return e.providers && ("function" == typeof e.providers ? a.push(...e.providers(i, e, r)) : a.push(...e.providers)),
                            e.direction && (!s || !s.get(hs, null, {
                                    optional: !0
                                })) && a.push({
                                provide: hs,
                                useValue: {
                                    value: e.direction,
                                    change: B()
                                }
                            }),
                            rt.create({
                                parent: s || o,
                                providers: a
                            })
                        }
                        _removeOpenDialog(e, i) {
                            const r = this.openDialogs.indexOf(e);
                            r > -1 && (this.openDialogs.splice(r, 1), this.openDialogs.length || (this._ariaHiddenElements.forEach((o, s) => {
                                        o ? s.setAttribute("aria-hidden", o) : s.removeAttribute("aria-hidden")
                                    }), this._ariaHiddenElements.clear(), i && this._getAfterAllClosed().next()))
                        }
                        _hideNonDialogContentFromAssistiveTechnology() {
                            const e = this._overlayContainer.getContainerElement();
                            if (e.parentElement) {
                                const i = e.parentElement.children;
                                for (let r = i.length - 1; r > -1; r--) {
                                    const o = i[r];
                                    o !== e && "SCRIPT" !== o.nodeName && "STYLE" !== o.nodeName && !o.hasAttribute("aria-live") && (this._ariaHiddenElements.set(o, o.getAttribute("aria-hidden")), o.setAttribute("aria-hidden", "true"))
                                }
                            }
                        }
                        _getAfterAllClosed() {
                            const e = this._parentDialog;
                            return e ? e._getAfterAllClosed() : this._afterAllClosedAtThisLevel
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(ar), v(rt), v(jH, 8), v(n, 12), v(Fd), v(IE))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                function vg(n, t) {
                    let e = n.length;
                    for (; e--; )
                        t(n[e])
                }
                let zH = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [OE, UH],
                        imports: [_g, Za, sE, Za]
                    }),
                    n
                })();
                class RE {}
                class GH {}
                const Fi = "*";
                function Qa(n, t) {
                    return {
                        type: 7,
                        name: n,
                        definitions: t,
                        options: {}
                    }
                }
                function cr(n, t = null) {
                    return {
                        type: 4,
                        styles: t,
                        timings: n
                    }
                }
                function FE(n, t = null) {
                    return {
                        type: 2,
                        steps: n,
                        options: t
                    }
                }
                function Xt(n) {
                    return {
                        type: 6,
                        styles: n,
                        offset: null
                    }
                }
                function hi(n, t, e) {
                    return {
                        type: 0,
                        name: n,
                        styles: t,
                        options: e
                    }
                }
                function lr(n, t, e = null) {
                    return {
                        type: 1,
                        expr: n,
                        animation: t,
                        options: e
                    }
                }
                function VE(n) {
                    Promise.resolve().then(n)
                }
                class Ja {
                    constructor(t = 0, e = 0) {
                        this._onDoneFns = [],
                        this._onStartFns = [],
                        this._onDestroyFns = [],
                        this._originalOnDoneFns = [],
                        this._originalOnStartFns = [],
                        this._started = !1,
                        this._destroyed = !1,
                        this._finished = !1,
                        this._position = 0,
                        this.parentPlayer = null,
                        this.totalTime = t + e
                    }
                    _onFinish() {
                        this._finished || (this._finished = !0, this._onDoneFns.forEach(t => t()), this._onDoneFns = [])
                    }
                    onStart(t) {
                        this._originalOnStartFns.push(t),
                        this._onStartFns.push(t)
                    }
                    onDone(t) {
                        this._originalOnDoneFns.push(t),
                        this._onDoneFns.push(t)
                    }
                    onDestroy(t) {
                        this._onDestroyFns.push(t)
                    }
                    hasStarted() {
                        return this._started
                    }
                    init() {}
                    play() {
                        this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
                        this._started = !0
                    }
                    triggerMicrotask() {
                        VE(() => this._onFinish())
                    }
                    _onStart() {
                        this._onStartFns.forEach(t => t()),
                        this._onStartFns = []
                    }
                    pause() {}
                    restart() {}
                    finish() {
                        this._onFinish()
                    }
                    destroy() {
                        this._destroyed || (this._destroyed = !0, this.hasStarted() || this._onStart(), this.finish(), this._onDestroyFns.forEach(t => t()), this._onDestroyFns = [])
                    }
                    reset() {
                        this._started = !1,
                        this._finished = !1,
                        this._onStartFns = this._originalOnStartFns,
                        this._onDoneFns = this._originalOnDoneFns
                    }
                    setPosition(t) {
                        this._position = this.totalTime ? t * this.totalTime : 1
                    }
                    getPosition() {
                        return this.totalTime ? this._position / this.totalTime : 1
                    }
                    triggerCallback(t) {
                        const e = "start" == t ? this._onStartFns : this._onDoneFns;
                        e.forEach(i => i()),
                        e.length = 0
                    }
                }
                class BE {
                    constructor(t) {
                        this._onDoneFns = [],
                        this._onStartFns = [],
                        this._finished = !1,
                        this._started = !1,
                        this._destroyed = !1,
                        this._onDestroyFns = [],
                        this.parentPlayer = null,
                        this.totalTime = 0,
                        this.players = t;
                        let e = 0,
                        i = 0,
                        r = 0;
                        const o = this.players.length;
                        0 == o ? VE(() => this._onFinish()) : this.players.forEach(s => {
                            s.onDone(() => {
                                ++e == o && this._onFinish()
                            }),
                            s.onDestroy(() => {
                                ++i == o && this._onDestroy()
                            }),
                            s.onStart(() => {
                                ++r == o && this._onStart()
                            })
                        }),
                        this.totalTime = this.players.reduce((s, a) => Math.max(s, a.totalTime), 0)
                    }
                    _onFinish() {
                        this._finished || (this._finished = !0, this._onDoneFns.forEach(t => t()), this._onDoneFns = [])
                    }
                    init() {
                        this.players.forEach(t => t.init())
                    }
                    onStart(t) {
                        this._onStartFns.push(t)
                    }
                    _onStart() {
                        this.hasStarted() || (this._started = !0, this._onStartFns.forEach(t => t()), this._onStartFns = [])
                    }
                    onDone(t) {
                        this._onDoneFns.push(t)
                    }
                    onDestroy(t) {
                        this._onDestroyFns.push(t)
                    }
                    hasStarted() {
                        return this._started
                    }
                    play() {
                        this.parentPlayer || this.init(),
                        this._onStart(),
                        this.players.forEach(t => t.play())
                    }
                    pause() {
                        this.players.forEach(t => t.pause())
                    }
                    restart() {
                        this.players.forEach(t => t.restart())
                    }
                    finish() {
                        this._onFinish(),
                        this.players.forEach(t => t.finish())
                    }
                    destroy() {
                        this._onDestroy()
                    }
                    _onDestroy() {
                        this._destroyed || (this._destroyed = !0, this._onFinish(), this.players.forEach(t => t.destroy()), this._onDestroyFns.forEach(t => t()), this._onDestroyFns = [])
                    }
                    reset() {
                        this.players.forEach(t => t.reset()),
                        this._destroyed = !1,
                        this._finished = !1,
                        this._started = !1
                    }
                    setPosition(t) {
                        const e = t * this.totalTime;
                        this.players.forEach(i => {
                            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
                            i.setPosition(r)
                        })
                    }
                    getPosition() {
                        const t = this.players.reduce((e, i) => null === e || i.totalTime > e.totalTime ? i : e, null);
                        return null != t ? t.getPosition() : 0
                    }
                    beforeDestroy() {
                        this.players.forEach(t => {
                            t.beforeDestroy && t.beforeDestroy()
                        })
                    }
                    triggerCallback(t) {
                        const e = "start" == t ? this._onStartFns : this._onDoneFns;
                        e.forEach(i => i()),
                        e.length = 0
                    }
                }
                function WH(n, t) {}
                class Ld {
                    constructor() {
                        this.role = "dialog",
                        this.panelClass = "",
                        this.hasBackdrop = !0,
                        this.backdropClass = "",
                        this.disableClose = !1,
                        this.width = "",
                        this.height = "",
                        this.maxWidth = "80vw",
                        this.data = null,
                        this.ariaDescribedBy = null,
                        this.ariaLabelledBy = null,
                        this.ariaLabel = null,
                        this.ariaModal = !0,
                        this.autoFocus = "first-tabbable",
                        this.restoreFocus = !0,
                        this.delayFocusTrap = !0,
                        this.closeOnNavigation = !0
                    }
                }
                let qH = (() => {
                    class n extends kE {
                        constructor(e, i, r, o, s, a, c, l) {
                            super(e, i, r, o, s, a, c, l),
                            this._animationStateChanged = new re
                        }
                        _captureInitialFocus() {
                            this._config.delayFocusTrap || this._trapFocus()
                        }
                        _openAnimationDone(e) {
                            this._config.delayFocusTrap && this._trapFocus(),
                            this._animationStateChanged.next({
                                state: "opened",
                                totalTime: e
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Md), p(Q, 8), p(Ld), p(Ua), p(X), p(Xa), p(rr))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["ng-component"]],
                        features: [H],
                        decls: 0,
                        vars: 0,
                        template: function (e, i) {},
                        encapsulation: 2
                    }),
                    n
                })();
                const jE = "--mat-dialog-transition-duration";
                function HE(n) {
                    return null == n ? null : "number" == typeof n ? n : n.endsWith("ms") ? qn(n.substring(0, n.length - 2)) : n.endsWith("s") ? 1e3 * qn(n.substring(0, n.length - 1)) : "0" === n ? 0 : null
                }
                let YH = (() => {
                    class n extends qH {
                        constructor(e, i, r, o, s, a, c, l, d) {
                            super(e, i, r, o, s, a, c, d),
                            this._animationMode = l,
                            this._animationsEnabled = "NoopAnimations" !== this._animationMode,
                            this._hostElement = this._elementRef.nativeElement,
                            this._openAnimationDuration = this._animationsEnabled ? HE(this._config.enterAnimationDuration) ?? 150 : 0,
                            this._closeAnimationDuration = this._animationsEnabled ? HE(this._config.exitAnimationDuration) ?? AE_DIALOG_ANIMATION_CLOSE_TIME_MS : 0,
                            this._animationTimer = null,
                            this._finishDialogOpen = () => {
                                this._clearAnimationClasses(),
                                this._openAnimationDone(this._openAnimationDuration)
                            },
                            this._finishDialogClose = () => {
                                this._clearAnimationClasses(),
                                this._animationStateChanged.emit({
                                    state: "closed",
                                    totalTime: this._closeAnimationDuration
                                })
                            }
                        }
                        _contentAttached() {
                            super._contentAttached(),
                            this._startOpenAnimation()
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(),
                            null !== this._animationTimer && clearTimeout(this._animationTimer)
                        }
                        _startOpenAnimation() {
                            this._animationStateChanged.emit({
                                state: "opening",
                                totalTime: this._openAnimationDuration
                            }),
                            this._animationsEnabled ? (this._hostElement.style.setProperty(jE, `${this._openAnimationDuration}ms`), this._hostElement.classList.add("mdc-dialog--opening"), this._hostElement.classList.add(Zr_OPEN), this._waitForAnimationToComplete(this._openAnimationDuration, this._finishDialogOpen)) : (this._hostElement.classList.add(Zr_OPEN), Promise.resolve().then(() => this._finishDialogOpen()))
                        }
                        _startExitAnimation() {
                            this._animationStateChanged.emit({
                                state: "closing",
                                totalTime: this._closeAnimationDuration
                            }),
                            this._hostElement.classList.remove(Zr_OPEN),
                            this._animationsEnabled ? (this._hostElement.style.setProperty(jE, `${this._openAnimationDuration}ms`), this._hostElement.classList.add("mdc-dialog--closing"), this._waitForAnimationToComplete(this._closeAnimationDuration, this._finishDialogClose)) : Promise.resolve().then(() => this._finishDialogClose())
                        }
                        _clearAnimationClasses() {
                            this._hostElement.classList.remove("mdc-dialog--opening"),
                            this._hostElement.classList.remove("mdc-dialog--closing")
                        }
                        _waitForAnimationToComplete(e, i) {
                            null !== this._animationTimer && clearTimeout(this._animationTimer),
                            this._animationTimer = setTimeout(i, e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Md), p(Q, 8), p(Ld), p(Ua), p(X), p(Xa), p(yt, 8), p(rr))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-dialog-container"]],
                        hostAttrs: ["tabindex", "-1", 1, "mat-mdc-dialog-container", "mdc-dialog"],
                        hostVars: 8,
                        hostBindings: function (e, i) {
                            2 & e && (ma("id", i._config.id), Ee("aria-modal", i._config.ariaModal)("role", i._config.role)("aria-labelledby", i._config.ariaLabel ? null : i._ariaLabelledBy)("aria-label", i._config.ariaLabel)("aria-describedby", i._config.ariaDescribedBy || null), be("_mat-animation-noopable", !i._animationsEnabled))
                        },
                        features: [H],
                        decls: 3,
                        vars: 0,
                        consts: [[1, "mdc-dialog__container"], [1, "mat-mdc-dialog-surface", "mdc-dialog__surface"], ["cdkPortalOutlet", ""]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "div", 1), I(2, WH, 0, 0, "ng-template", 2), b()())
                        },
                        dependencies: [Pd],
                        styles: ['.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:"";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, "Arial");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, "Arial");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}'],
                        encapsulation: 2
                    }),
                    n
                })();
                class wg {
                    constructor(t, e, i) {
                        this._ref = t,
                        this._containerInstance = i,
                        this._afterOpened = new K,
                        this._beforeClosed = new K,
                        this._state = 0,
                        this.disableClose = e.disableClose,
                        this.id = t.id,
                        i._animationStateChanged.pipe(ve(r => "opened" === r.state), Ge(1)).subscribe(() => {
                            this._afterOpened.next(),
                            this._afterOpened.complete()
                        }),
                        i._animationStateChanged.pipe(ve(r => "closed" === r.state), Ge(1)).subscribe(() => {
                            clearTimeout(this._closeFallbackTimeout),
                            this._finishDialogClose()
                        }),
                        t.overlayRef.detachments().subscribe(() => {
                            this._beforeClosed.next(this._result),
                            this._beforeClosed.complete(),
                            this._finishDialogClose()
                        }),
                        Cr(this.backdropClick(), this.keydownEvents().pipe(ve(r => 27 === r.keyCode && !this.disableClose && !as(r)))).subscribe(r => {
                            this.disableClose || (r.preventDefault(), UE(this, "keydown" === r.type ? "keyboard" : "mouse"))
                        })
                    }
                    close(t) {
                        this._result = t,
                        this._containerInstance._animationStateChanged.pipe(ve(e => "closing" === e.state), Ge(1)).subscribe(e => {
                            this._beforeClosed.next(t),
                            this._beforeClosed.complete(),
                            this._ref.overlayRef.detachBackdrop(),
                            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), e.totalTime + 100)
                        }),
                        this._state = 1,
                        this._containerInstance._startExitAnimation()
                    }
                    afterOpened() {
                        return this._afterOpened
                    }
                    afterClosed() {
                        return this._ref.closed
                    }
                    beforeClosed() {
                        return this._beforeClosed
                    }
                    backdropClick() {
                        return this._ref.backdropClick
                    }
                    keydownEvents() {
                        return this._ref.keydownEvents
                    }
                    updatePosition(t) {
                        let e = this._ref.config.positionStrategy;
                        return t && (t.left || t.right) ? t.left ? e.left(t.left) : e.right(t.right) : e.centerHorizontally(),
                        t && (t.top || t.bottom) ? t.top ? e.top(t.top) : e.bottom(t.bottom) : e.centerVertically(),
                        this._ref.updatePosition(),
                        this
                    }
                    updateSize(t = "", e = "") {
                        return this._ref.updateSize(t, e),
                        this
                    }
                    addPanelClass(t) {
                        return this._ref.addPanelClass(t),
                        this
                    }
                    removePanelClass(t) {
                        return this._ref.removePanelClass(t),
                        this
                    }
                    getState() {
                        return this._state
                    }
                    _finishDialogClose() {
                        this._state = 2,
                        this._ref.close(this._result, {
                            focusOrigin: this._closeInteractionType
                        }),
                        this.componentInstance = null
                    }
                }
                function UE(n, t, e) {
                    return n._closeInteractionType = t,
                    n.close(e)
                }
                const KH = new T("MatMdcDialogData"),
                ZH = new T("mat-mdc-dialog-default-options"),
                $E = new T("mat-mdc-dialog-scroll-strategy"),
                QH = {
                    provide: $E,
                    deps: [ar],
                    useFactory: function XH(n) {
                        return () => n.scrollStrategies.block()
                    }
                };
                let JH = 0,
                eU = (() => {
                    class n {
                        constructor(e, i, r, o, s, a, c, l, d, u) {
                            this._overlay = e,
                            this._defaultOptions = r,
                            this._parentDialog = o,
                            this._dialogRefConstructor = c,
                            this._dialogContainerType = l,
                            this._dialogDataToken = d,
                            this._openDialogsAtThisLevel = [],
                            this._afterAllClosedAtThisLevel = new K,
                            this._afterOpenedAtThisLevel = new K,
                            this._idPrefix = "mat-dialog-",
                            this.dialogConfigClass = Ld,
                            this.afterAllClosed = fs(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(ir(void 0))),
                            this._scrollStrategy = a,
                            this._dialog = i.get(OE)
                        }
                        get openDialogs() {
                            return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel
                        }
                        get afterOpened() {
                            return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel
                        }
                        _getAfterAllClosed() {
                            const e = this._parentDialog;
                            return e ? e._getAfterAllClosed() : this._afterAllClosedAtThisLevel
                        }
                        open(e, i) {
                            let r;
                            (i = {
                                    ...this._defaultOptions || new Ld,
                                    ...i
                                }).id = i.id || `${this._idPrefix}${JH++}`,
                            i.scrollStrategy = i.scrollStrategy || this._scrollStrategy();
                            const o = this._dialog.open(e, {
                                ...i,
                                positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),
                                disableClose: !0,
                                closeOnDestroy: !1,
                                container: {
                                    type: this._dialogContainerType,
                                    providers: () => [{
                                            provide: this.dialogConfigClass,
                                            useValue: i
                                        }, {
                                            provide: Nd,
                                            useValue: i
                                        }
                                    ]
                                },
                                templateContext: () => ({
                                    dialogRef: r
                                }),
                                providers: (s, a, c) => (r = new this._dialogRefConstructor(s, i, c), r.updatePosition(i?.position), [{
                                            provide: this._dialogContainerType,
                                            useValue: c
                                        }, {
                                            provide: this._dialogDataToken,
                                            useValue: a.data
                                        }, {
                                            provide: this._dialogRefConstructor,
                                            useValue: r
                                        }
                                    ])
                            });
                            return r.componentInstance = o.componentInstance,
                            this.openDialogs.push(r),
                            this.afterOpened.next(r),
                            r.afterClosed().subscribe(() => {
                                const s = this.openDialogs.indexOf(r);
                                s > -1 && (this.openDialogs.splice(s, 1), this.openDialogs.length || this._getAfterAllClosed().next())
                            }),
                            r
                        }
                        closeAll() {
                            this._closeDialogs(this.openDialogs)
                        }
                        getDialogById(e) {
                            return this.openDialogs.find(i => i.id === e)
                        }
                        ngOnDestroy() {
                            this._closeDialogs(this._openDialogsAtThisLevel),
                            this._afterAllClosedAtThisLevel.complete(),
                            this._afterOpenedAtThisLevel.complete()
                        }
                        _closeDialogs(e) {
                            let i = e.length;
                            for (; i--; )
                                e[i].close()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                Vd = (() => {
                    class n extends eU {
                        constructor(e, i, r, o, s, a, c, l) {
                            super(e, i, o, a, c, s, wg, YH, KH, l),
                            this._idPrefix = "mat-mdc-dialog-"
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(ar), v(rt), v(Sa, 8), v(ZH, 8), v($E), v(n, 12), v(Fd), v(yt, 8))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                tU = 0,
                nU = (() => {
                    class n {
                        constructor(e, i, r) {
                            this.dialogRef = e,
                            this._elementRef = i,
                            this._dialog = r,
                            this.type = "button"
                        }
                        ngOnInit() {
                            this.dialogRef || (this.dialogRef = zE(this._elementRef, this._dialog.openDialogs))
                        }
                        ngOnChanges(e) {
                            const i = e._matDialogClose || e._matDialogCloseResult;
                            i && (this.dialogResult = i.currentValue)
                        }
                        _onButtonClick(e) {
                            UE(this.dialogRef, 0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse", this.dialogResult)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(wg, 8), p(se), p(Vd))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "mat-dialog-close", ""], ["", "matDialogClose", ""]],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            1 & e && O("click", function (o) {
                                return i._onButtonClick(o)
                            }),
                            2 & e && Ee("aria-label", i.ariaLabel || null)("type", i.type)
                        },
                        inputs: {
                            ariaLabel: ["aria-label", "ariaLabel"],
                            type: "type",
                            dialogResult: ["mat-dialog-close", "dialogResult"],
                            _matDialogClose: ["matDialogClose", "_matDialogClose"]
                        },
                        exportAs: ["matDialogClose"],
                        features: [Ft]
                    }),
                    n
                })(),
                iU = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._dialogRef = e,
                            this._elementRef = i,
                            this._dialog = r,
                            this.id = "mat-mdc-dialog-title-" + tU++
                        }
                        ngOnInit() {
                            this._dialogRef || (this._dialogRef = zE(this._elementRef, this._dialog.openDialogs)),
                            this._dialogRef && Promise.resolve().then(() => {
                                const e = this._dialogRef._containerInstance;
                                e && !e._ariaLabelledBy && (e._ariaLabelledBy = this.id)
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(wg, 8), p(se), p(Vd))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "mat-dialog-title", ""], ["", "matDialogTitle", ""]],
                        hostAttrs: [1, "mat-mdc-dialog-title", "mdc-dialog__title"],
                        hostVars: 1,
                        hostBindings: function (e, i) {
                            2 & e && ma("id", i.id)
                        },
                        inputs: {
                            id: "id"
                        },
                        exportAs: ["matDialogTitle"]
                    }),
                    n
                })(),
                rU = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "mat-dialog-content", ""], ["mat-dialog-content"], ["", "matDialogContent", ""]],
                        hostAttrs: [1, "mat-mdc-dialog-content", "mdc-dialog__content"]
                    }),
                    n
                })(),
                oU = (() => {
                    class n {
                        constructor() {
                            this.align = "start"
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "mat-dialog-actions", ""], ["mat-dialog-actions"], ["", "matDialogActions", ""]],
                        hostAttrs: [1, "mat-mdc-dialog-actions", "mdc-dialog__actions"],
                        hostVars: 4,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-mdc-dialog-actions-align-center", "center" === i.align)("mat-mdc-dialog-actions-align-end", "end" === i.align)
                        },
                        inputs: {
                            align: "align"
                        }
                    }),
                    n
                })();
                function zE(n, t) {
                    let e = n.nativeElement.parentElement;
                    for (; e && !e.classList.contains("mat-mdc-dialog-container"); )
                        e = e.parentElement;
                    return e ? t.find(i => i.id === e.id) : null
                }
                let sU = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [Vd, QH],
                        imports: [zH, _g, Za, ct, ct]
                    }),
                    n
                })();
                function Xr(n, t) {
                    const e = pe(n) ? n : () => n,
                    i = r => r.error(e());
                    return new Ae(t ? r => t.schedule(i, 0, r) : i)
                }
                function Ni(n) {
                    return Be((t, e) => {
                        let o,
                        i = null,
                        r = !1;
                        i = t.subscribe(Ve(e, void 0, void 0, s => {
                                    o = Rt(n(s, Ni(n)(t))),
                                    i ? (i.unsubscribe(), i = null, o.subscribe(e)) : r = !0
                                })),
                        r && (i.unsubscribe(), i = null, o.subscribe(e))
                    })
                }
                function Bd(n) {
                    return Be((t, e) => {
                        try {
                            t.subscribe(e)
                        } finally {
                            e.add(n)
                        }
                    })
                }
                function dr(n, t) {
                    return pe(t) ? ut(n, t, 1) : ut(n, 1)
                }
                class jd {}
                class Cg {}
                class fi {
                    constructor(t) {
                        this.normalizedNames = new Map,
                        this.lazyUpdate = null,
                        t ? this.lazyInit = "string" == typeof t ? () => {
                            this.headers = new Map,
                            t.split("\n").forEach(e => {
                                const i = e.indexOf(":");
                                if (i > 0) {
                                    const r = e.slice(0, i),
                                    o = r.toLowerCase(),
                                    s = e.slice(i + 1).trim();
                                    this.maybeSetNormalizedName(r, o),
                                    this.headers.has(o) ? this.headers.get(o).push(s) : this.headers.set(o, [s])
                                }
                            })
                        }
                         : () => {
                            this.headers = new Map,
                            Object.keys(t).forEach(e => {
                                let i = t[e];
                                const r = e.toLowerCase();
                                "string" == typeof i && (i = [i]),
                                i.length > 0 && (this.headers.set(r, i), this.maybeSetNormalizedName(e, r))
                            })
                        }
                         : this.headers = new Map
                    }
                    has(t) {
                        return this.init(),
                        this.headers.has(t.toLowerCase())
                    }
                    get(t) {
                        this.init();
                        const e = this.headers.get(t.toLowerCase());
                        return e && e.length > 0 ? e[0] : null
                    }
                    keys() {
                        return this.init(),
                        Array.from(this.normalizedNames.values())
                    }
                    getAll(t) {
                        return this.init(),
                        this.headers.get(t.toLowerCase()) || null
                    }
                    append(t, e) {
                        return this.clone({
                            name: t,
                            value: e,
                            op: "a"
                        })
                    }
                    set(t, e) {
                        return this.clone({
                            name: t,
                            value: e,
                            op: "s"
                        })
                    }
                    delete (t, e) {
                        return this.clone({
                            name: t,
                            value: e,
                            op: "d"
                        })
                    }
                    maybeSetNormalizedName(t, e) {
                        this.normalizedNames.has(e) || this.normalizedNames.set(e, t)
                    }
                    init() {
                        this.lazyInit && (this.lazyInit instanceof fi ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(t => this.applyUpdate(t)), this.lazyUpdate = null))
                    }
                    copyFrom(t) {
                        t.init(),
                        Array.from(t.headers.keys()).forEach(e => {
                            this.headers.set(e, t.headers.get(e)),
                            this.normalizedNames.set(e, t.normalizedNames.get(e))
                        })
                    }
                    clone(t) {
                        const e = new fi;
                        return e.lazyInit = this.lazyInit && this.lazyInit instanceof fi ? this.lazyInit : this,
                        e.lazyUpdate = (this.lazyUpdate || []).concat([t]),
                        e
                    }
                    applyUpdate(t) {
                        const e = t.name.toLowerCase();
                        switch (t.op) {
                        case "a":
                        case "s":
                            let i = t.value;
                            if ("string" == typeof i && (i = [i]), 0 === i.length)
                                return;
                            this.maybeSetNormalizedName(t.name, e);
                            const r = ("a" === t.op ? this.headers.get(e) : void 0) || [];
                            r.push(...i),
                            this.headers.set(e, r);
                            break;
                        case "d":
                            const o = t.value;
                            if (o) {
                                let s = this.headers.get(e);
                                if (!s)
                                    return;
                                s = s.filter(a => -1 === o.indexOf(a)),
                                0 === s.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, s)
                            } else
                                this.headers.delete(e), this.normalizedNames.delete(e)
                        }
                    }
                    forEach(t) {
                        this.init(),
                        Array.from(this.normalizedNames.keys()).forEach(e => t(this.normalizedNames.get(e), this.headers.get(e)))
                    }
                }
                class aU {
                    encodeKey(t) {
                        return WE(t)
                    }
                    encodeValue(t) {
                        return WE(t)
                    }
                    decodeKey(t) {
                        return decodeURIComponent(t)
                    }
                    decodeValue(t) {
                        return decodeURIComponent(t)
                    }
                }
                const lU = /%(\d[a-f0-9])/gi,
                dU = {
                    40: "@",
                    "3A": ":",
                    24: "$",
                    "2C": ",",
                    "3B": ";",
                    "3D": "=",
                    "3F": "?",
                    "2F": "/"
                };
                function WE(n) {
                    return encodeURIComponent(n).replace(lU, (t, e) => dU[e] ?? t)
                }
                function Hd(n) {
                    return `${n}`
                }
                class ur {
                    constructor(t = {}) {
                        if (this.updates = null, this.cloneFrom = null, this.encoder = t.encoder || new aU, t.fromString) {
                            if (t.fromObject)
                                throw new Error("Cannot specify both fromString and fromObject.");
                            this.map = function cU(n, t) {
                                const e = new Map;
                                return n.length > 0 && n.replace(/^\?/, "").split("&").forEach(r => {
                                    const o = r.indexOf("="),
                                    [s, a] = -1 == o ? [t.decodeKey(r), ""] : [t.decodeKey(r.slice(0, o)), t.decodeValue(r.slice(o + 1))],
                                    c = e.get(s) || [];
                                    c.push(a),
                                    e.set(s, c)
                                }),
                                e
                            }
                            (t.fromString, this.encoder)
                        } else
                            t.fromObject ? (this.map = new Map, Object.keys(t.fromObject).forEach(e => {
                                    const i = t.fromObject[e],
                                    r = Array.isArray(i) ? i.map(Hd) : [Hd(i)];
                                    this.map.set(e, r)
                                })) : this.map = null
                    }
                    has(t) {
                        return this.init(),
                        this.map.has(t)
                    }
                    get(t) {
                        this.init();
                        const e = this.map.get(t);
                        return e ? e[0] : null
                    }
                    getAll(t) {
                        return this.init(),
                        this.map.get(t) || null
                    }
                    keys() {
                        return this.init(),
                        Array.from(this.map.keys())
                    }
                    append(t, e) {
                        return this.clone({
                            param: t,
                            value: e,
                            op: "a"
                        })
                    }
                    appendAll(t) {
                        const e = [];
                        return Object.keys(t).forEach(i => {
                            const r = t[i];
                            Array.isArray(r) ? r.forEach(o => {
                                e.push({
                                    param: i,
                                    value: o,
                                    op: "a"
                                })
                            }) : e.push({
                                param: i,
                                value: r,
                                op: "a"
                            })
                        }),
                        this.clone(e)
                    }
                    set(t, e) {
                        return this.clone({
                            param: t,
                            value: e,
                            op: "s"
                        })
                    }
                    delete (t, e) {
                        return this.clone({
                            param: t,
                            value: e,
                            op: "d"
                        })
                    }
                    toString() {
                        return this.init(),
                        this.keys().map(t => {
                            const e = this.encoder.encodeKey(t);
                            return this.map.get(t).map(i => e + "=" + this.encoder.encodeValue(i)).join("&")
                        }).filter(t => "" !== t).join("&")
                    }
                    clone(t) {
                        const e = new ur({
                            encoder: this.encoder
                        });
                        return e.cloneFrom = this.cloneFrom || this,
                        e.updates = (this.updates || []).concat(t),
                        e
                    }
                    init() {
                        null === this.map && (this.map = new Map),
                        null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(t => this.map.set(t, this.cloneFrom.map.get(t))), this.updates.forEach(t => {
                                switch (t.op) {
                                case "a":
                                case "s":
                                    const e = ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                                    e.push(Hd(t.value)),
                                    this.map.set(t.param, e);
                                    break;
                                case "d":
                                    if (void 0 === t.value) {
                                        this.map.delete(t.param);
                                        break
                                    } {
                                        let i = this.map.get(t.param) || [];
                                        const r = i.indexOf(Hd(t.value));
                                        -1 !== r && i.splice(r, 1),
                                        i.length > 0 ? this.map.set(t.param, i) : this.map.delete(t.param)
                                    }
                                }
                            }), this.cloneFrom = this.updates = null)
                    }
                }
                class uU {
                    constructor() {
                        this.map = new Map
                    }
                    set(t, e) {
                        return this.map.set(t, e),
                        this
                    }
                    get(t) {
                        return this.map.has(t) || this.map.set(t, t.defaultValue()),
                        this.map.get(t)
                    }
                    delete (t) {
                        return this.map.delete(t),
                        this
                    }
                    has(t) {
                        return this.map.has(t)
                    }
                    keys() {
                        return this.map.keys()
                    }
                }
                function qE(n) {
                    return typeof ArrayBuffer < "u" && n instanceof ArrayBuffer
                }
                function YE(n) {
                    return typeof Blob < "u" && n instanceof Blob
                }
                function KE(n) {
                    return typeof FormData < "u" && n instanceof FormData
                }
                class ec {
                    constructor(t, e, i, r) {
                        let o;
                        if (this.url = e, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = t.toUpperCase(), function hU(n) {
                            switch (n) {
                            case "DELETE":
                            case "GET":
                            case "HEAD":
                            case "OPTIONS":
                            case "JSONP":
                                return !1;
                            default:
                                return !0
                            }
                        }
                            (this.method) || r ? (this.body = void 0 !== i ? i : null, o = r) : o = i, o && (this.reportProgress = !!o.reportProgress, this.withCredentials = !!o.withCredentials, o.responseType && (this.responseType = o.responseType), o.headers && (this.headers = o.headers), o.context && (this.context = o.context), o.params && (this.params = o.params)), this.headers || (this.headers = new fi), this.context || (this.context = new uU), this.params) {
                            const s = this.params.toString();
                            if (0 === s.length)
                                this.urlWithParams = e;
                            else {
                                const a = e.indexOf("?");
                                this.urlWithParams = e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + s
                            }
                        } else
                            this.params = new ur, this.urlWithParams = e
                    }
                    serializeBody() {
                        return null === this.body ? null : qE(this.body) || YE(this.body) || KE(this.body) || function fU(n) {
                            return typeof URLSearchParams < "u" && n instanceof URLSearchParams
                        }
                        (this.body) || "string" == typeof this.body ? this.body : this.body instanceof ur ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString()
                    }
                    detectContentTypeHeader() {
                        return null === this.body || KE(this.body) ? null : YE(this.body) ? this.body.type || null : qE(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof ur ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null
                    }
                    clone(t = {}) {
                        const e = t.method || this.method,
                        i = t.url || this.url,
                        r = t.responseType || this.responseType,
                        o = void 0 !== t.body ? t.body : this.body,
                        s = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials,
                        a = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress;
                        let c = t.headers || this.headers,
                        l = t.params || this.params;
                        const d = t.context ?? this.context;
                        return void 0 !== t.setHeaders && (c = Object.keys(t.setHeaders).reduce((u, h) => u.set(h, t.setHeaders[h]), c)),
                        t.setParams && (l = Object.keys(t.setParams).reduce((u, h) => u.set(h, t.setParams[h]), l)),
                        new ec(e, i, o, {
                            params: l,
                            headers: c,
                            context: d,
                            reportProgress: a,
                            responseType: r,
                            withCredentials: s
                        })
                    }
                }
                var lt = (() => ((lt = lt || {})[lt.Sent = 0] = "Sent", lt[lt.UploadProgress = 1] = "UploadProgress", lt[lt.ResponseHeader = 2] = "ResponseHeader", lt[lt.DownloadProgress = 3] = "DownloadProgress", lt[lt.Response = 4] = "Response", lt[lt.User = 5] = "User", lt))();
                class Dg {
                    constructor(t, e = 200, i = "OK") {
                        this.headers = t.headers || new fi,
                        this.status = void 0 !== t.status ? t.status : e,
                        this.statusText = t.statusText || i,
                        this.url = t.url || null,
                        this.ok = this.status >= 200 && this.status < 300
                    }
                }
                class xg extends Dg {
                    constructor(t = {}) {
                        super(t),
                        this.type = lt.ResponseHeader
                    }
                    clone(t = {}) {
                        return new xg({
                            headers: t.headers || this.headers,
                            status: void 0 !== t.status ? t.status : this.status,
                            statusText: t.statusText || this.statusText,
                            url: t.url || this.url || void 0
                        })
                    }
                }
                class Ud extends Dg {
                    constructor(t = {}) {
                        super(t),
                        this.type = lt.Response,
                        this.body = void 0 !== t.body ? t.body : null
                    }
                    clone(t = {}) {
                        return new Ud({
                            body: void 0 !== t.body ? t.body : this.body,
                            headers: t.headers || this.headers,
                            status: void 0 !== t.status ? t.status : this.status,
                            statusText: t.statusText || this.statusText,
                            url: t.url || this.url || void 0
                        })
                    }
                }
                class ZE extends Dg {
                    constructor(t) {
                        super(t, 0, "Unknown Error"),
                        this.name = "HttpErrorResponse",
                        this.ok = !1,
                        this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${t.url || "(unknown url)"}` : `Http failure response for ${t.url || "(unknown url)"}: ${t.status} ${t.statusText}`,
                        this.error = t.error || null
                    }
                }
                function Eg(n, t) {
                    return {
                        body: t,
                        headers: n.headers,
                        context: n.context,
                        observe: n.observe,
                        params: n.params,
                        reportProgress: n.reportProgress,
                        responseType: n.responseType,
                        withCredentials: n.withCredentials
                    }
                }
                let $d = (() => {
                    class n {
                        constructor(e) {
                            this.handler = e
                        }
                        request(e, i, r = {}) {
                            let o;
                            if (e instanceof ec)
                                o = e;
                            else {
                                let c,
                                l;
                                c = r.headers instanceof fi ? r.headers : new fi(r.headers),
                                r.params && (l = r.params instanceof ur ? r.params : new ur({
                                        fromObject: r.params
                                    })),
                                o = new ec(e, i, void 0 !== r.body ? r.body : null, {
                                    headers: c,
                                    context: r.context,
                                    params: l,
                                    reportProgress: r.reportProgress,
                                    responseType: r.responseType || "json",
                                    withCredentials: r.withCredentials
                                })
                            }
                            const s = B(o).pipe(dr(c => this.handler.handle(c)));
                            if (e instanceof ec || "events" === r.observe)
                                return s;
                            const a = s.pipe(ve(c => c instanceof Ud));
                            switch (r.observe || "body") {
                            case "body":
                                switch (o.responseType) {
                                case "arraybuffer":
                                    return a.pipe(j(c => {
                                            if (null !== c.body && !(c.body instanceof ArrayBuffer))
                                                throw new Error("Response is not an ArrayBuffer.");
                                            return c.body
                                        }));
                                case "blob":
                                    return a.pipe(j(c => {
                                            if (null !== c.body && !(c.body instanceof Blob))
                                                throw new Error("Response is not a Blob.");
                                            return c.body
                                        }));
                                case "text":
                                    return a.pipe(j(c => {
                                            if (null !== c.body && "string" != typeof c.body)
                                                throw new Error("Response is not a string.");
                                            return c.body
                                        }));
                                default:
                                    return a.pipe(j(c => c.body))
                                }
                            case "response":
                                return a;
                            default:
                                throw new Error(`Unreachable: unhandled observe type ${r.observe}}`)
                            }
                        }
                        delete (e, i = {}) {
                            return this.request("DELETE", e, i)
                        }
                        get(e, i = {}) {
                            return this.request("GET", e, i)
                        }
                        head(e, i = {}) {
                            return this.request("HEAD", e, i)
                        }
                        jsonp(e, i) {
                            return this.request("JSONP", e, {
                                params: (new ur).append(i, "JSONP_CALLBACK"),
                                observe: "body",
                                responseType: "json"
                            })
                        }
                        options(e, i = {}) {
                            return this.request("OPTIONS", e, i)
                        }
                        patch(e, i, r = {}) {
                            return this.request("PATCH", e, Eg(r, i))
                        }
                        post(e, i, r = {}) {
                            return this.request("POST", e, Eg(r, i))
                        }
                        put(e, i, r = {}) {
                            return this.request("PUT", e, Eg(r, i))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(jd))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                function XE(n, t) {
                    return t(n)
                }
                function pU(n, t) {
                    return (e, i) => t.intercept(e, {
                        handle: r => n(r, i)
                    })
                }
                const gU = new T("HTTP_INTERCEPTORS"),
                tc = new T("HTTP_INTERCEPTOR_FNS");
                function _U() {
                    let n = null;
                    return (t, e) => (null === n && (n = (ce(gU, {
                                    optional: !0
                                }) ?? []).reduceRight(pU, XE)), n(t, e))
                }
                let QE = (() => {
                    class n extends jd {
                        constructor(e, i) {
                            super(),
                            this.backend = e,
                            this.injector = i,
                            this.chain = null
                        }
                        handle(e) {
                            if (null === this.chain) {
                                const i = Array.from(new Set(this.injector.get(tc)));
                                this.chain = i.reduceRight((r, o) => function mU(n, t, e) {
                                    return (i, r) => e.runInContext(() => t(i, o => n(o, r)))
                                }
                                        (r, o, this.injector), XE)
                            }
                            return this.chain(e, i => this.backend.handle(i))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Cg), v(xi))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                const wU = /^\)\]\}',?\n/;
                let eS = (() => {
                    class n {
                        constructor(e) {
                            this.xhrFactory = e
                        }
                        handle(e) {
                            if ("JSONP" === e.method)
                                throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");
                            return new Ae(i => {
                                const r = this.xhrFactory.build();
                                if (r.open(e.method, e.urlWithParams), e.withCredentials && (r.withCredentials = !0), e.headers.forEach((f, m) => r.setRequestHeader(f, m.join(","))), e.headers.has("Accept") || r.setRequestHeader("Accept", "application/json, text/plain, */*"), !e.headers.has("Content-Type")) {
                                    const f = e.detectContentTypeHeader();
                                    null !== f && r.setRequestHeader("Content-Type", f)
                                }
                                if (e.responseType) {
                                    const f = e.responseType.toLowerCase();
                                    r.responseType = "json" !== f ? f : "text"
                                }
                                const o = e.serializeBody();
                                let s = null;
                                const a = () => {
                                    if (null !== s)
                                        return s;
                                    const f = r.statusText || "OK",
                                    m = new fi(r.getAllResponseHeaders()),
                                    _ = function CU(n) {
                                        return "responseURL" in n && n.responseURL ? n.responseURL : /^X-Request-URL:/m.test(n.getAllResponseHeaders()) ? n.getResponseHeader("X-Request-URL") : null
                                    }
                                    (r) || e.url;
                                    return s = new xg({
                                        headers: m,
                                        status: r.status,
                                        statusText: f,
                                        url: _
                                    }),
                                    s
                                },
                                c = () => {
                                    let {
                                        headers: f,
                                        status: m,
                                        statusText: _,
                                        url: C
                                    } = a(),
                                    D = null;
                                    204 !== m && (D = typeof r.response > "u" ? r.responseText : r.response),
                                    0 === m && (m = D ? 200 : 0);
                                    let A = m >= 200 && m < 300;
                                    if ("json" === e.responseType && "string" == typeof D) {
                                        const x = D;
                                        D = D.replace(wU, "");
                                        try {
                                            D = "" !== D ? JSON.parse(D) : null
                                        } catch (P) {
                                            D = x,
                                            A && (A = !1, D = {
                                                    error: P,
                                                    text: D
                                                })
                                        }
                                    }
                                    A ? (i.next(new Ud({
                                                body: D,
                                                headers: f,
                                                status: m,
                                                statusText: _,
                                                url: C || void 0
                                            })), i.complete()) : i.error(new ZE({
                                            error: D,
                                            headers: f,
                                            status: m,
                                            statusText: _,
                                            url: C || void 0
                                        }))
                                },
                                l = f => {
                                    const {
                                        url: m
                                    } = a(),
                                    _ = new ZE({
                                        error: f,
                                        status: r.status || 0,
                                        statusText: r.statusText || "Unknown Error",
                                        url: m || void 0
                                    });
                                    i.error(_)
                                };
                                let d = !1;
                                const u = f => {
                                    d || (i.next(a()), d = !0);
                                    let m = {
                                        type: lt.DownloadProgress,
                                        loaded: f.loaded
                                    };
                                    f.lengthComputable && (m.total = f.total),
                                    "text" === e.responseType && !!r.responseText && (m.partialText = r.responseText),
                                    i.next(m)
                                },
                                h = f => {
                                    let m = {
                                        type: lt.UploadProgress,
                                        loaded: f.loaded
                                    };
                                    f.lengthComputable && (m.total = f.total),
                                    i.next(m)
                                };
                                return r.addEventListener("load", c),
                                r.addEventListener("error", l),
                                r.addEventListener("timeout", l),
                                r.addEventListener("abort", l),
                                e.reportProgress && (r.addEventListener("progress", u), null !== o && r.upload && r.upload.addEventListener("progress", h)),
                                r.send(o),
                                i.next({
                                    type: lt.Sent
                                }),
                                () => {
                                    r.removeEventListener("error", l),
                                    r.removeEventListener("abort", l),
                                    r.removeEventListener("load", c),
                                    r.removeEventListener("timeout", l),
                                    e.reportProgress && (r.removeEventListener("progress", u), null !== o && r.upload && r.upload.removeEventListener("progress", h)),
                                    r.readyState !== r.DONE && r.abort()
                                }
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(uD))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                const Sg = new T("XSRF_ENABLED"),
                tS = "XSRF-TOKEN",
                nS = new T("XSRF_COOKIE_NAME", {
                    providedIn: "root",
                    factory: () => tS
                }),
                iS = "X-XSRF-TOKEN",
                rS = new T("XSRF_HEADER_NAME", {
                    providedIn: "root",
                    factory: () => iS
                });
                class oS {}
                let DU = (() => {
                    class n {
                        constructor(e, i, r) {
                            this.doc = e,
                            this.platform = i,
                            this.cookieName = r,
                            this.lastCookieString = "",
                            this.lastToken = null,
                            this.parseCount = 0
                        }
                        getToken() {
                            if ("server" === this.platform)
                                return null;
                            const e = this.doc.cookie || "";
                            return e !== this.lastCookieString && (this.parseCount++, this.lastToken = eD(e, this.cookieName), this.lastCookieString = e),
                            this.lastToken
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Q), v(ts), v(nS))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                function xU(n, t) {
                    const e = n.url.toLowerCase();
                    if (!ce(Sg) || "GET" === n.method || "HEAD" === n.method || e.startsWith("http://") || e.startsWith("https://"))
                        return t(n);
                    const i = ce(oS).getToken(),
                    r = ce(rS);
                    return null != i && !n.headers.has(r) && (n = n.clone({
                            headers: n.headers.set(r, i)
                        })),
                    t(n)
                }
                var tt = (() => ((tt = tt || {})[tt.Interceptors = 0] = "Interceptors", tt[tt.LegacyInterceptors = 1] = "LegacyInterceptors", tt[tt.CustomXsrfConfiguration = 2] = "CustomXsrfConfiguration", tt[tt.NoXsrfProtection = 3] = "NoXsrfProtection", tt[tt.JsonpSupport = 4] = "JsonpSupport", tt[tt.RequestsMadeViaParent = 5] = "RequestsMadeViaParent", tt))();
                function ps(n, t) {
                    return {
                         \u0275kind: n,
                         \u0275providers: t
                    }
                }
                function EU(...n) {
                    const t = [$d, eS, QE, {
                            provide: jd,
                            useExisting: QE
                        }, {
                            provide: Cg,
                            useExisting: eS
                        }, {
                            provide: tc,
                            useValue: xU,
                            multi: !0
                        }, {
                            provide: Sg,
                            useValue: !0
                        }, {
                            provide: oS,
                            useClass: DU
                        }
                    ];
                    for (const e of n)
                        t.push(...e. \u0275providers);
                    return function s1(n) {
                        return {
                             \u0275providers: n
                        }
                    }
                    (t)
                }
                const sS = new T("LEGACY_INTERCEPTOR_FN");
                function MU({
                    cookieName: n,
                    headerName: t
                }) {
                    const e = [];
                    return void 0 !== n && e.push({
                        provide: nS,
                        useValue: n
                    }),
                    void 0 !== t && e.push({
                        provide: rS,
                        useValue: t
                    }),
                    ps(tt.CustomXsrfConfiguration, e)
                }
                let TU = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [EU(ps(tt.LegacyInterceptors, [{
                                            provide: sS,
                                            useFactory: _U
                                        }, {
                                            provide: tc,
                                            useExisting: sS,
                                            multi: !0
                                        }
                                    ]), MU({
                                    cookieName: tS,
                                    headerName: iS
                                }))]
                    }),
                    n
                })();
                const AU = ["*"];
                let zd;
                function nc(n) {
                    return function kU() {
                        if (void 0 === zd && (zd = null, typeof window < "u")) {
                            const n = window;
                            void 0 !== n.trustedTypes && (zd = n.trustedTypes.createPolicy("angular#components", {
                                    createHTML: t => t
                                }))
                        }
                        return zd
                    }
                    ()?.createHTML(n) || n
                }
                function aS(n) {
                    return Error(`Unable to find icon with the name "${n}"`)
                }
                function cS(n) {
                    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${n}".`)
                }
                function lS(n) {
                    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${n}".`)
                }
                class Qr {
                    constructor(t, e, i) {
                        this.url = t,
                        this.svgText = e,
                        this.options = i
                    }
                }
                let Gd = (() => {
                    class n {
                        constructor(e, i, r, o) {
                            this._httpClient = e,
                            this._sanitizer = i,
                            this._errorHandler = o,
                            this._svgIconConfigs = new Map,
                            this._iconSetConfigs = new Map,
                            this._cachedIconsByUrl = new Map,
                            this._inProgressUrlFetches = new Map,
                            this._fontCssClassesByAlias = new Map,
                            this._resolvers = [],
                            this._defaultFontSetClass = ["material-icons", "mat-ligature-font"],
                            this._document = r
                        }
                        addSvgIcon(e, i, r) {
                            return this.addSvgIconInNamespace("", e, i, r)
                        }
                        addSvgIconLiteral(e, i, r) {
                            return this.addSvgIconLiteralInNamespace("", e, i, r)
                        }
                        addSvgIconInNamespace(e, i, r, o) {
                            return this._addSvgIconConfig(e, i, new Qr(r, null, o))
                        }
                        addSvgIconResolver(e) {
                            return this._resolvers.push(e),
                            this
                        }
                        addSvgIconLiteralInNamespace(e, i, r, o) {
                            const s = this._sanitizer.sanitize(xe.HTML, r);
                            if (!s)
                                throw lS(r);
                            const a = nc(s);
                            return this._addSvgIconConfig(e, i, new Qr("", a, o))
                        }
                        addSvgIconSet(e, i) {
                            return this.addSvgIconSetInNamespace("", e, i)
                        }
                        addSvgIconSetLiteral(e, i) {
                            return this.addSvgIconSetLiteralInNamespace("", e, i)
                        }
                        addSvgIconSetInNamespace(e, i, r) {
                            return this._addSvgIconSetConfig(e, new Qr(i, null, r))
                        }
                        addSvgIconSetLiteralInNamespace(e, i, r) {
                            const o = this._sanitizer.sanitize(xe.HTML, i);
                            if (!o)
                                throw lS(i);
                            const s = nc(o);
                            return this._addSvgIconSetConfig(e, new Qr("", s, r))
                        }
                        registerFontClassAlias(e, i = e) {
                            return this._fontCssClassesByAlias.set(e, i),
                            this
                        }
                        classNameForFontAlias(e) {
                            return this._fontCssClassesByAlias.get(e) || e
                        }
                        setDefaultFontSetClass(...e) {
                            return this._defaultFontSetClass = e,
                            this
                        }
                        getDefaultFontSetClass() {
                            return this._defaultFontSetClass
                        }
                        getSvgIconFromUrl(e) {
                            const i = this._sanitizer.sanitize(xe.RESOURCE_URL, e);
                            if (!i)
                                throw cS(e);
                            const r = this._cachedIconsByUrl.get(i);
                            return r ? B(Wd(r)) : this._loadSvgIconFromConfig(new Qr(e, null)).pipe(Je(o => this._cachedIconsByUrl.set(i, o)), j(o => Wd(o)))
                        }
                        getNamedSvgIcon(e, i = "") {
                            const r = dS(i, e);
                            let o = this._svgIconConfigs.get(r);
                            if (o)
                                return this._getSvgFromConfig(o);
                            if (o = this._getIconConfigFromResolvers(i, e), o)
                                return this._svgIconConfigs.set(r, o), this._getSvgFromConfig(o);
                            const s = this._iconSetConfigs.get(i);
                            return s ? this._getSvgFromIconSetConfigs(e, s) : Xr(aS(r))
                        }
                        ngOnDestroy() {
                            this._resolvers = [],
                            this._svgIconConfigs.clear(),
                            this._iconSetConfigs.clear(),
                            this._cachedIconsByUrl.clear()
                        }
                        _getSvgFromConfig(e) {
                            return e.svgText ? B(Wd(this._svgElementFromConfig(e))) : this._loadSvgIconFromConfig(e).pipe(j(i => Wd(i)))
                        }
                        _getSvgFromIconSetConfigs(e, i) {
                            const r = this._extractIconWithNameFromAnySet(e, i);
                            return r ? B(r) : BD(i.filter(s => !s.svgText).map(s => this._loadSvgIconSetFromConfig(s).pipe(Ni(a => {
                                            const l = `Loading icon set URL: ${this._sanitizer.sanitize(xe.RESOURCE_URL, s.url)} failed: ${a.message}`;
                                            return this._errorHandler.handleError(new Error(l)),
                                            B(null)
                                        })))).pipe(j(() => {
                                    const s = this._extractIconWithNameFromAnySet(e, i);
                                    if (!s)
                                        throw aS(e);
                                    return s
                                }))
                        }
                        _extractIconWithNameFromAnySet(e, i) {
                            for (let r = i.length - 1; r >= 0; r--) {
                                const o = i[r];
                                if (o.svgText && o.svgText.toString().indexOf(e) > -1) {
                                    const s = this._svgElementFromConfig(o),
                                    a = this._extractSvgIconFromSet(s, e, o.options);
                                    if (a)
                                        return a
                                }
                            }
                            return null
                        }
                        _loadSvgIconFromConfig(e) {
                            return this._fetchIcon(e).pipe(Je(i => e.svgText = i), j(() => this._svgElementFromConfig(e)))
                        }
                        _loadSvgIconSetFromConfig(e) {
                            return e.svgText ? B(null) : this._fetchIcon(e).pipe(Je(i => e.svgText = i))
                        }
                        _extractSvgIconFromSet(e, i, r) {
                            const o = e.querySelector(`[id="${i}"]`);
                            if (!o)
                                return null;
                            const s = o.cloneNode(!0);
                            if (s.removeAttribute("id"), "svg" === s.nodeName.toLowerCase())
                                return this._setSvgAttributes(s, r);
                            if ("symbol" === s.nodeName.toLowerCase())
                                return this._setSvgAttributes(this._toSvgElement(s), r);
                            const a = this._svgElementFromString(nc("<svg></svg>"));
                            return a.appendChild(s),
                            this._setSvgAttributes(a, r)
                        }
                        _svgElementFromString(e) {
                            const i = this._document.createElement("DIV");
                            i.innerHTML = e;
                            const r = i.querySelector("svg");
                            if (!r)
                                throw Error("<svg> tag not found");
                            return r
                        }
                        _toSvgElement(e) {
                            const i = this._svgElementFromString(nc("<svg></svg>")),
                            r = e.attributes;
                            for (let o = 0; o < r.length; o++) {
                                const {
                                    name: s,
                                    value: a
                                } = r[o];
                                "id" !== s && i.setAttribute(s, a)
                            }
                            for (let o = 0; o < e.childNodes.length; o++)
                                e.childNodes[o].nodeType === this._document.ELEMENT_NODE && i.appendChild(e.childNodes[o].cloneNode(!0));
                            return i
                        }
                        _setSvgAttributes(e, i) {
                            return e.setAttribute("fit", ""),
                            e.setAttribute("height", "100%"),
                            e.setAttribute("width", "100%"),
                            e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
                            e.setAttribute("focusable", "false"),
                            i && i.viewBox && e.setAttribute("viewBox", i.viewBox),
                            e
                        }
                        _fetchIcon(e) {
                            const {
                                url: i,
                                options: r
                            } = e,
                            o = r?.withCredentials ?? !1;
                            if (!this._httpClient)
                                throw function IU() {
                                    return Error("Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.")
                                }
                            ();
                            if (null == i)
                                throw Error(`Cannot fetch icon from URL "${i}".`);
                            const s = this._sanitizer.sanitize(xe.RESOURCE_URL, i);
                            if (!s)
                                throw cS(i);
                            const a = this._inProgressUrlFetches.get(s);
                            if (a)
                                return a;
                            const c = this._httpClient.get(s, {
                                responseType: "text",
                                withCredentials: o
                            }).pipe(j(l => nc(l)), Bd(() => this._inProgressUrlFetches.delete(s)), lh());
                            return this._inProgressUrlFetches.set(s, c),
                            c
                        }
                        _addSvgIconConfig(e, i, r) {
                            return this._svgIconConfigs.set(dS(e, i), r),
                            this
                        }
                        _addSvgIconSetConfig(e, i) {
                            const r = this._iconSetConfigs.get(e);
                            return r ? r.push(i) : this._iconSetConfigs.set(e, [i]),
                            this
                        }
                        _svgElementFromConfig(e) {
                            if (!e.svgElement) {
                                const i = this._svgElementFromString(e.svgText);
                                this._setSvgAttributes(i, e.options),
                                e.svgElement = i
                            }
                            return e.svgElement
                        }
                        _getIconConfigFromResolvers(e, i) {
                            for (let r = 0; r < this._resolvers.length; r++) {
                                const o = this._resolvers[r](i, e);
                                if (o)
                                    return RU(o) ? new Qr(o.url, null, o.options) : new Qr(o, null)
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v($d, 8), v(ym), v(Q, 8), v(Si))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function Wd(n) {
                    return n.cloneNode(!0)
                }
                function dS(n, t) {
                    return n + ":" + t
                }
                function RU(n) {
                    return !(!n.url || !n.options)
                }
                const PU = za(class {
                    constructor(n) {
                        this._elementRef = n
                    }
                }),
                FU = new T("MAT_ICON_DEFAULT_OPTIONS"),
                NU = new T("mat-icon-location", {
                    providedIn: "root",
                    factory: function LU() {
                        const n = ce(Q),
                        t = n ? n.location : null;
                        return {
                            getPathname: () => t ? t.pathname + t.search : ""
                        }
                    }
                }),
                uS = ["clip-path", "color-profile", "src", "cursor", "fill", "filter", "marker", "marker-start", "marker-mid", "marker-end", "mask", "stroke"],
                VU = uS.map(n => `[${n}]`).join(", "),
                BU = /^url\(['"]?#(.*?)['"]?\)$/;
                let xt = (() => {
                    class n extends PU {
                        constructor(e, i, r, o, s, a) {
                            super(e),
                            this._iconRegistry = i,
                            this._location = o,
                            this._errorHandler = s,
                            this._inline = !1,
                            this._previousFontSetClass = [],
                            this._currentIconFetch = nt.EMPTY,
                            a && (a.color && (this.color = this.defaultColor = a.color), a.fontSet && (this.fontSet = a.fontSet)),
                            r || e.nativeElement.setAttribute("aria-hidden", "true")
                        }
                        get inline() {
                            return this._inline
                        }
                        set inline(e) {
                            this._inline = Ne(e)
                        }
                        get svgIcon() {
                            return this._svgIcon
                        }
                        set svgIcon(e) {
                            e !== this._svgIcon && (e ? this._updateSvgIcon(e) : this._svgIcon && this._clearSvgElement(), this._svgIcon = e)
                        }
                        get fontSet() {
                            return this._fontSet
                        }
                        set fontSet(e) {
                            const i = this._cleanupFontValue(e);
                            i !== this._fontSet && (this._fontSet = i, this._updateFontIconClasses())
                        }
                        get fontIcon() {
                            return this._fontIcon
                        }
                        set fontIcon(e) {
                            const i = this._cleanupFontValue(e);
                            i !== this._fontIcon && (this._fontIcon = i, this._updateFontIconClasses())
                        }
                        _splitIconName(e) {
                            if (!e)
                                return ["", ""];
                            const i = e.split(":");
                            switch (i.length) {
                            case 1:
                                return ["", i[0]];
                            case 2:
                                return i;
                            default:
                                throw Error(`Invalid icon name: "${e}"`)
                            }
                        }
                        ngOnInit() {
                            this._updateFontIconClasses()
                        }
                        ngAfterViewChecked() {
                            const e = this._elementsWithExternalReferences;
                            if (e && e.size) {
                                const i = this._location.getPathname();
                                i !== this._previousPath && (this._previousPath = i, this._prependPathToReferences(i))
                            }
                        }
                        ngOnDestroy() {
                            this._currentIconFetch.unsubscribe(),
                            this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear()
                        }
                        _usingFontIcon() {
                            return !this.svgIcon
                        }
                        _setSvgElement(e) {
                            this._clearSvgElement();
                            const i = this._location.getPathname();
                            this._previousPath = i,
                            this._cacheChildrenWithExternalReferences(e),
                            this._prependPathToReferences(i),
                            this._elementRef.nativeElement.appendChild(e)
                        }
                        _clearSvgElement() {
                            const e = this._elementRef.nativeElement;
                            let i = e.childNodes.length;
                            for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); i--; ) {
                                const r = e.childNodes[i];
                                (1 !== r.nodeType || "svg" === r.nodeName.toLowerCase()) && r.remove()
                            }
                        }
                        _updateFontIconClasses() {
                            if (!this._usingFontIcon())
                                return;
                            const e = this._elementRef.nativeElement,
                            i = (this.fontSet ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/) : this._iconRegistry.getDefaultFontSetClass()).filter(r => r.length > 0);
                            this._previousFontSetClass.forEach(r => e.classList.remove(r)),
                            i.forEach(r => e.classList.add(r)),
                            this._previousFontSetClass = i,
                            this.fontIcon !== this._previousFontIconClass && !i.includes("mat-ligature-font") && (this._previousFontIconClass && e.classList.remove(this._previousFontIconClass), this.fontIcon && e.classList.add(this.fontIcon), this._previousFontIconClass = this.fontIcon)
                        }
                        _cleanupFontValue(e) {
                            return "string" == typeof e ? e.trim().split(" ")[0] : e
                        }
                        _prependPathToReferences(e) {
                            const i = this._elementsWithExternalReferences;
                            i && i.forEach((r, o) => {
                                r.forEach(s => {
                                    o.setAttribute(s.name, `url('${e}#${s.value}')`)
                                })
                            })
                        }
                        _cacheChildrenWithExternalReferences(e) {
                            const i = e.querySelectorAll(VU),
                            r = this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map;
                            for (let o = 0; o < i.length; o++)
                                uS.forEach(s => {
                                    const a = i[o],
                                    c = a.getAttribute(s),
                                    l = c ? c.match(BU) : null;
                                    if (l) {
                                        let d = r.get(a);
                                        d || (d = [], r.set(a, d)),
                                        d.push({
                                            name: s,
                                            value: l[1]
                                        })
                                    }
                                })
                        }
                        _updateSvgIcon(e) {
                            if (this._svgNamespace = null, this._svgName = null, this._currentIconFetch.unsubscribe(), e) {
                                const [i, r] = this._splitIconName(e);
                                i && (this._svgNamespace = i),
                                r && (this._svgName = r),
                                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(r, i).pipe(Ge(1)).subscribe(o => this._setSvgElement(o), o => {
                                    this._errorHandler.handleError(new Error(`Error retrieving icon ${i}:${r}! ${o.message}`))
                                })
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Gd), Gi("aria-hidden"), p(NU), p(Si), p(FU, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-icon"]],
                        hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
                        hostVars: 8,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("data-mat-icon-type", i._usingFontIcon() ? "font" : "svg")("data-mat-icon-name", i._svgName || i.fontIcon)("data-mat-icon-namespace", i._svgNamespace || i.fontSet)("fontIcon", i._usingFontIcon() ? i.fontIcon : null), be("mat-icon-inline", i.inline)("mat-icon-no-color", "primary" !== i.color && "accent" !== i.color && "warn" !== i.color))
                        },
                        inputs: {
                            color: "color",
                            inline: "inline",
                            svgIcon: "svgIcon",
                            fontSet: "fontSet",
                            fontIcon: "fontIcon"
                        },
                        exportAs: ["matIcon"],
                        features: [H],
                        ngContentSelectors: AU,
                        decls: 1,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && (vt(), ye(0))
                        },
                        styles: [".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                jU = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, ct]
                    }),
                    n
                })();
                const HU = ["inputUrl"];
                function UU(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 11)(1, "div", 12),
                        S(2, "No image"),
                        b(),
                        V(3, "img", 13),
                        g(4, "label")(5, "div", 14)(6, "input", 15),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().changeRotation(o))
                        }),
                        b(),
                        g(7, "div"),
                        S(8, "Rotate"),
                        b()()(),
                        g(9, "button", 16),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().remove(o))
                        }),
                        g(10, "mat-icon"),
                        S(11, "close"),
                        b()()()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(3),
                        Zi("src", e.url, wn),
                        w(3),
                        y("checked", e.printRotate)
                    }
                }
                class qd {
                    _printExternalService;
                    inputUrl = null;
                    constructor(t) {
                        this._printExternalService = t
                    }
                    ngOnInit() {}
                    remove(t) {
                        this._printExternalService.deleteByIndex(t)
                    }
                    add() {
                        this.inputUrl && "" !== this.inputUrl.nativeElement.value.trim() && this._printExternalService.add({
                            url: this.inputUrl.nativeElement.value
                        })
                    }
                    changeRotation(t) {
                        this._printExternalService.changeRotationByIndex(t)
                    }
                    get printList() {
                        return this._printExternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || qd)(p(Ri))
                    };
                    static \u0275cmp = Z({
                        type: qd,
                        selectors: [["app-ExternalImageLinksDialog"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(HU, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i.inputUrl = r.first)
                            }
                        },
                        decls: 17,
                        vars: 1,
                        consts: [["mat-dialog-title", ""], ["mat-dialog-content", "", 2, "height", "100%"], [1, "add-area"], [1, "url-input"], ["type", "text"], ["inputUrl", ""], ["mat-mini-fab", "", 3, "click"], [1, "list"], ["class", "img-area mat-elevation-z4", 4, "ngFor", "ngForOf"], ["mat-dialog-actions", ""], ["mat-button", "", "mat-dialog-close", ""], [1, "img-area", "mat-elevation-z4"], [1, "error", 2, "display", "none"], ["loading", "lazy", 2, "height", "100%", 3, "src"], [1, "rotate-area"], ["type", "checkbox", 3, "checked", "click"], ["mat-mini-fab", "", 1, "close-view", 3, "click"]],
                        template: function (e, i) {
                            1 & e && (g(0, "h1", 0), S(1, "External image list"), b(), g(2, "div", 1)(3, "div", 2)(4, "div"), S(5, "Image link:"), b(), g(6, "div", 3), V(7, "input", 4, 5), b(), g(9, "button", 6), O("click", function () {
                                    return i.add()
                                }), g(10, "mat-icon"), S(11, "playlist_add_check_circle"), b()()(), g(12, "div", 7), I(13, UU, 12, 2, "div", 8), b()(), g(14, "div", 9)(15, "button", 10), S(16, "Close"), b()()),
                            2 & e && (w(13), y("ngForOf", i.printList))
                        },
                        dependencies: [Qi, lg, sr, nU, iU, rU, oU, xt],
                        styles: ["*[_ngcontent-%COMP%]{color:#fff}.mat-dialog-content[_ngcontent-%COMP%]{max-height:600px;border:0 solid black;border-top-width:1px;border-bottom-width:1px;padding:0}.add-area[_ngcontent-%COMP%]{display:flex;align-items:center;margin:8px}.add-area[_ngcontent-%COMP%]   .url-input[_ngcontent-%COMP%]{flex-grow:1;margin:0 8px}.add-area[_ngcontent-%COMP%]   .url-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:calc(100% - 16px);background-color:#ffffff4d}.list[_ngcontent-%COMP%]{margin:8px 0 8px 8px;min-height:160px;max-height:500px;width:calc(100% - 8px);overflow:auto;display:flex;flex-wrap:wrap;gap:8px;justify-content:center}.list[_ngcontent-%COMP%]   .img-area[_ngcontent-%COMP%]{position:relative;height:200px;min-width:150px;background-color:#fff}.list[_ngcontent-%COMP%]   .img-area[_ngcontent-%COMP%]   .rotate-area[_ngcontent-%COMP%]{cursor:pointer;color:#000;position:absolute;width:100%;left:0;bottom:0;background-color:#000000bf;border:1px solid rgba(0,0,0,.5);display:flex;justify-content:center;align-items:center}.close-view[_ngcontent-%COMP%]{position:absolute;top:4px;right:4px}"]
                    })
                }
                class Jr {
                    _downloads = new Oe([]);
                    constructor() {}
                    removeItem(t, e) {
                        const i = t.indexOf(e);
                        return i > -1 && t.splice(i, 1),
                        t
                    }
                    addDownload(t) {
                        const e = this._downloads.value;
                        e.push(t),
                        this._downloads.next(e),
                        t.observable.subscribe(() => {
                            window.setTimeout(() => {
                                this._downloads.next(this.removeItem(this._downloads.value, t))
                            }, 1)
                        })
                    }
                    listen(t) {
                        const e = new Oe(0);
                        return this._downloads.subscribe(() => {
                            let i = 0;
                            this._downloads.value.forEach(r => {
                                -1 !== t.indexOf(r.type) && i++
                            }),
                            e.next(i)
                        }),
                        e.asObservable()
                    }
                    static \u0275fac = function (e) {
                        return new(e || Jr)
                    };
                    static \u0275prov = k({
                        token: Jr,
                        factory: Jr. \u0275fac,
                        providedIn: "root"
                    })
                }
                var ms = (() => {
                    return (n = ms || (ms = {}))[n.MAIN = 0] = "MAIN",
                    ms;
                    var n
                })();
                const Yd = Ps(n => function () {
                    n(this),
                    this.name = "EmptyError",
                    this.message = "no elements in sequence"
                });
                function Mg() {
                    return Be((n, t) => {
                        let e = null;
                        n._refCount++;
                        const i = Ve(t, void 0, void 0, void 0, () => {
                            if (!n || n._refCount <= 0 || 0 < --n._refCount)
                                return void(e = null);
                            const r = n._connection,
                            o = e;
                            e = null,
                            r && (!o || r === o) && r.unsubscribe(),
                            t.unsubscribe()
                        });
                        n.subscribe(i),
                        i.closed || (e = n.connect())
                    })
                }
                class Tg extends Ae {
                    constructor(t, e) {
                        super(),
                        this.source = t,
                        this.subjectFactory = e,
                        this._subject = null,
                        this._refCount = 0,
                        this._connection = null,
                        $_(t) && (this.lift = t.lift)
                    }
                    _subscribe(t) {
                        return this.getSubject().subscribe(t)
                    }
                    getSubject() {
                        const t = this._subject;
                        return (!t || t.isStopped) && (this._subject = this.subjectFactory()),
                        this._subject
                    }
                    _teardown() {
                        this._refCount = 0;
                        const {
                            _connection: t
                        } = this;
                        this._subject = this._connection = null,
                        t?.unsubscribe()
                    }
                    connect() {
                        let t = this._connection;
                        if (!t) {
                            t = this._connection = new nt;
                            const e = this.getSubject();
                            t.add(this.source.subscribe(Ve(e, void 0, () => {
                                        this._teardown(),
                                        e.complete()
                                    }, i => {
                                        this._teardown(),
                                        e.error(i)
                                    }, () => this._teardown()))),
                            t.closed && (this._connection = null, t = nt.EMPTY)
                        }
                        return t
                    }
                    refCount() {
                        return Mg()(this)
                    }
                }
                function Qt(n, t) {
                    return Be((e, i) => {
                        let r = null,
                        o = 0,
                        s = !1;
                        const a = () => s && !r && i.complete();
                        e.subscribe(Ve(i, c => {
                                r?.unsubscribe();
                                let l = 0;
                                const d = o++;
                                Rt(n(c, d)).subscribe(r = Ve(i, u => i.next(t ? t(c, u, d, l++) : u), () => {
                                        r = null,
                                        a()
                                    }))
                            }, () => {
                                s = !0,
                                a()
                            }))
                    })
                }
                function Kd(n) {
                    return Be((t, e) => {
                        let i = !1;
                        t.subscribe(Ve(e, r => {
                                i = !0,
                                e.next(r)
                            }, () => {
                                i || e.next(n),
                                e.complete()
                            }))
                    })
                }
                function hS(n = $U) {
                    return Be((t, e) => {
                        let i = !1;
                        t.subscribe(Ve(e, r => {
                                i = !0,
                                e.next(r)
                            }, () => i ? e.complete() : e.error(n())))
                    })
                }
                function $U() {
                    return new Yd
                }
                function hr(n, t) {
                    const e = arguments.length >= 2;
                    return i => i.pipe(n ? ve((r, o) => n(r, o, i)) : Hi, Ge(1), e ? Kd(t) : hS(() => new Yd))
                }
                function zU(n, t, e, i, r) {
                    return (o, s) => {
                        let a = e,
                        c = t,
                        l = 0;
                        o.subscribe(Ve(s, d => {
                                const u = l++;
                                c = a ? n(c, d, u) : (a = !0, d),
                                i && s.next(c)
                            }, r && (() => {
                                    a && s.next(c),
                                    s.complete()
                                })))
                    }
                }
                function fS(n, t) {
                    return Be(zU(n, t, arguments.length >= 2, !0))
                }
                function Ag(n) {
                    return n <= 0 ? () => Xn : Be((t, e) => {
                        let i = [];
                        t.subscribe(Ve(e, r => {
                                i.push(r),
                                n < i.length && i.shift()
                            }, () => {
                                for (const r of i)
                                    e.next(r);
                                e.complete()
                            }, void 0, () => {
                                i = null
                            }))
                    })
                }
                function pS(n, t) {
                    const e = arguments.length >= 2;
                    return i => i.pipe(n ? ve((r, o) => n(r, o, i)) : Hi, Ag(1), e ? Kd(t) : hS(() => new Yd))
                }
                function Zd(n) {
                    return j(() => n)
                }
                const ae = "primary",
                ic = Symbol("RouteTitle");
                class WU {
                    constructor(t) {
                        this.params = t || {}
                    }
                    has(t) {
                        return Object.prototype.hasOwnProperty.call(this.params, t)
                    }
                    get(t) {
                        if (this.has(t)) {
                            const e = this.params[t];
                            return Array.isArray(e) ? e[0] : e
                        }
                        return null
                    }
                    getAll(t) {
                        if (this.has(t)) {
                            const e = this.params[t];
                            return Array.isArray(e) ? e : [e]
                        }
                        return []
                    }
                    get keys() {
                        return Object.keys(this.params)
                    }
                }
                function gs(n) {
                    return new WU(n)
                }
                function qU(n, t, e) {
                    const i = e.path.split("/");
                    if (i.length > n.length || "full" === e.pathMatch && (t.hasChildren() || i.length < n.length))
                        return null;
                    const r = {};
                    for (let o = 0; o < i.length; o++) {
                        const s = i[o],
                        a = n[o];
                        if (s.startsWith(":"))
                            r[s.substring(1)] = a;
                        else if (s !== a.path)
                            return null
                    }
                    return {
                        consumed: n.slice(0, i.length),
                        posParams: r
                    }
                }
                function pi(n, t) {
                    const e = n ? Object.keys(n) : void 0,
                    i = t ? Object.keys(t) : void 0;
                    if (!e || !i || e.length != i.length)
                        return !1;
                    let r;
                    for (let o = 0; o < e.length; o++)
                        if (r = e[o], !mS(n[r], t[r]))
                            return !1;
                    return !0
                }
                function mS(n, t) {
                    if (Array.isArray(n) && Array.isArray(t)) {
                        if (n.length !== t.length)
                            return !1;
                        const e = [...n].sort(),
                        i = [...t].sort();
                        return e.every((r, o) => i[o] === r)
                    }
                    return n === t
                }
                function gS(n) {
                    return Array.prototype.concat.apply([], n)
                }
                function _S(n) {
                    return n.length > 0 ? n[n.length - 1] : null
                }
                function Et(n, t) {
                    for (const e in n)
                        n.hasOwnProperty(e) && t(n[e], e)
                }
                function fr(n) {
                    return dp(n) ? n : fa(n) ? it(Promise.resolve(n)) : B(n)
                }
                const Xd = !1,
                KU = {
                    exact: function yS(n, t, e) {
                        if (!to(n.segments, t.segments) || !Qd(n.segments, t.segments, e) || n.numberOfChildren !== t.numberOfChildren)
                            return !1;
                        for (const i in t.children)
                            if (!n.children[i] || !yS(n.children[i], t.children[i], e))
                                return !1;
                        return !0
                    },
                    subset: wS
                },
                bS = {
                    exact: function ZU(n, t) {
                        return pi(n, t)
                    },
                    subset: function XU(n, t) {
                        return Object.keys(t).length <= Object.keys(n).length && Object.keys(t).every(e => mS(n[e], t[e]))
                    },
                    ignored: () => !0
                };
                function vS(n, t, e) {
                    return KU[e.paths](n.root, t.root, e.matrixParams) && bS[e.queryParams](n.queryParams, t.queryParams) && !("exact" === e.fragment && n.fragment !== t.fragment)
                }
                function wS(n, t, e) {
                    return CS(n, t, t.segments, e)
                }
                function CS(n, t, e, i) {
                    if (n.segments.length > e.length) {
                        const r = n.segments.slice(0, e.length);
                        return !(!to(r, e) || t.hasChildren() || !Qd(r, e, i))
                    }
                    if (n.segments.length === e.length) {
                        if (!to(n.segments, e) || !Qd(n.segments, e, i))
                            return !1;
                        for (const r in t.children)
                            if (!n.children[r] || !wS(n.children[r], t.children[r], i))
                                return !1;
                        return !0
                    } {
                        const r = e.slice(0, n.segments.length),
                        o = e.slice(n.segments.length);
                        return !!(to(n.segments, r) && Qd(n.segments, r, i) && n.children[ae]) && CS(n.children[ae], t, o, i)
                    }
                }
                function Qd(n, t, e) {
                    return t.every((i, r) => bS[e](n[r].parameters, i.parameters))
                }
                class eo {
                    constructor(t = new le([], {}), e = {}, i = null) {
                        this.root = t,
                        this.queryParams = e,
                        this.fragment = i
                    }
                    get queryParamMap() {
                        return this._queryParamMap || (this._queryParamMap = gs(this.queryParams)),
                        this._queryParamMap
                    }
                    toString() {
                        return e8.serialize(this)
                    }
                }
                class le {
                    constructor(t, e) {
                        this.segments = t,
                        this.children = e,
                        this.parent = null,
                        Et(e, (i, r) => i.parent = this)
                    }
                    hasChildren() {
                        return this.numberOfChildren > 0
                    }
                    get numberOfChildren() {
                        return Object.keys(this.children).length
                    }
                    toString() {
                        return Jd(this)
                    }
                }
                class rc {
                    constructor(t, e) {
                        this.path = t,
                        this.parameters = e
                    }
                    get parameterMap() {
                        return this._parameterMap || (this._parameterMap = gs(this.parameters)),
                        this._parameterMap
                    }
                    toString() {
                        return SS(this)
                    }
                }
                function to(n, t) {
                    return n.length === t.length && n.every((e, i) => e.path === t[i].path)
                }
                let DS = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return new kg
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                class kg {
                    parse(t) {
                        const e = new l8(t);
                        return new eo(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment())
                    }
                    serialize(t) {
                        const e = `/${oc(t.root, !0)}`,
                        i = function i8(n) {
                            const t = Object.keys(n).map(e => {
                                const i = n[e];
                                return Array.isArray(i) ? i.map(r => `${eu(e)}=${eu(r)}`).join("&") : `${eu(e)}=${eu(i)}`
                            }).filter(e => !!e);
                            return t.length ? `?${t.join("&")}` : ""
                        }
                        (t.queryParams);
                        return `${e}${i}${"string" == typeof t.fragment ? `#${function t8(n) {
                            return encodeURI(n)
                        }
                        (t.fragment)}` : ""}`
                    }
                }
                const e8 = new kg;
                function Jd(n) {
                    return n.segments.map(t => SS(t)).join("/")
                }
                function oc(n, t) {
                    if (!n.hasChildren())
                        return Jd(n);
                    if (t) {
                        const e = n.children[ae] ? oc(n.children[ae], !1) : "",
                        i = [];
                        return Et(n.children, (r, o) => {
                            o !== ae && i.push(`${o}:${oc(r, !1)}`)
                        }),
                        i.length > 0 ? `${e}(${i.join("//")})` : e
                    } {
                        const e = function JU(n, t) {
                            let e = [];
                            return Et(n.children, (i, r) => {
                                r === ae && (e = e.concat(t(i, r)))
                            }),
                            Et(n.children, (i, r) => {
                                r !== ae && (e = e.concat(t(i, r)))
                            }),
                            e
                        }
                        (n, (i, r) => r === ae ? [oc(n.children[ae], !1)] : [`${r}:${oc(i, !1)}`]);
                        return 1 === Object.keys(n.children).length && null != n.children[ae] ? `${Jd(n)}/${e[0]}` : `${Jd(n)}/(${e.join("//")})`
                    }
                }
                function xS(n) {
                    return encodeURIComponent(n).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",")
                }
                function eu(n) {
                    return xS(n).replace(/%3B/gi, ";")
                }
                function Ig(n) {
                    return xS(n).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&")
                }
                function tu(n) {
                    return decodeURIComponent(n)
                }
                function ES(n) {
                    return tu(n.replace(/\+/g, "%20"))
                }
                function SS(n) {
                    return `${Ig(n.path)}${function n8(n) {
                        return Object.keys(n).map(t => `;${Ig(t)}=${Ig(n[t])}`).join("")
                    }
                    (n.parameters)}`
                }
                const r8 = /^[^\/()?;=#]+/;
                function nu(n) {
                    const t = n.match(r8);
                    return t ? t[0] : ""
                }
                const o8 = /^[^=?&#]+/,
                a8 = /^[^&#]+/;
                class l8 {
                    constructor(t) {
                        this.url = t,
                        this.remaining = t
                    }
                    parseRootSegment() {
                        return this.consumeOptional("/"),
                        "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new le([], {}) : new le([], this.parseChildren())
                    }
                    parseQueryParams() {
                        const t = {};
                        if (this.consumeOptional("?"))
                            do {
                                this.parseQueryParam(t)
                            } while (this.consumeOptional("&"));
                        return t
                    }
                    parseFragment() {
                        return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null
                    }
                    parseChildren() {
                        if ("" === this.remaining)
                            return {};
                        this.consumeOptional("/");
                        const t = [];
                        for (this.peekStartsWith("(") || t.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/("); )
                            this.capture("/"), t.push(this.parseSegment());
                        let e = {};
                        this.peekStartsWith("/(") && (this.capture("/"), e = this.parseParens(!0));
                        let i = {};
                        return this.peekStartsWith("(") && (i = this.parseParens(!1)),
                        (t.length > 0 || Object.keys(e).length > 0) && (i[ae] = new le(t, e)),
                        i
                    }
                    parseSegment() {
                        const t = nu(this.remaining);
                        if ("" === t && this.peekStartsWith(";"))
                            throw new E(4009, Xd);
                        return this.capture(t),
                        new rc(tu(t), this.parseMatrixParams())
                    }
                    parseMatrixParams() {
                        const t = {};
                        for (; this.consumeOptional(";"); )
                            this.parseParam(t);
                        return t
                    }
                    parseParam(t) {
                        const e = nu(this.remaining);
                        if (!e)
                            return;
                        this.capture(e);
                        let i = "";
                        if (this.consumeOptional("=")) {
                            const r = nu(this.remaining);
                            r && (i = r, this.capture(i))
                        }
                        t[tu(e)] = tu(i)
                    }
                    parseQueryParam(t) {
                        const e = function s8(n) {
                            const t = n.match(o8);
                            return t ? t[0] : ""
                        }
                        (this.remaining);
                        if (!e)
                            return;
                        this.capture(e);
                        let i = "";
                        if (this.consumeOptional("=")) {
                            const s = function c8(n) {
                                const t = n.match(a8);
                                return t ? t[0] : ""
                            }
                            (this.remaining);
                            s && (i = s, this.capture(i))
                        }
                        const r = ES(e),
                        o = ES(i);
                        if (t.hasOwnProperty(r)) {
                            let s = t[r];
                            Array.isArray(s) || (s = [s], t[r] = s),
                            s.push(o)
                        } else
                            t[r] = o
                    }
                    parseParens(t) {
                        const e = {};
                        for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0; ) {
                            const i = nu(this.remaining),
                            r = this.remaining[i.length];
                            if ("/" !== r && ")" !== r && ";" !== r)
                                throw new E(4010, Xd);
                            let o;
                            i.indexOf(":") > -1 ? (o = i.slice(0, i.indexOf(":")), this.capture(o), this.capture(":")) : t && (o = ae);
                            const s = this.parseChildren();
                            e[o] = 1 === Object.keys(s).length ? s[ae] : new le([], s),
                            this.consumeOptional("//")
                        }
                        return e
                    }
                    peekStartsWith(t) {
                        return this.remaining.startsWith(t)
                    }
                    consumeOptional(t) {
                        return !!this.peekStartsWith(t) && (this.remaining = this.remaining.substring(t.length), !0)
                    }
                    capture(t) {
                        if (!this.consumeOptional(t))
                            throw new E(4011, Xd)
                    }
                }
                function Og(n) {
                    return n.segments.length > 0 ? new le([], {
                        [ae]: n
                    }) : n
                }
                function iu(n) {
                    const t = {};
                    for (const i of Object.keys(n.children)) {
                        const o = iu(n.children[i]);
                        (o.segments.length > 0 || o.hasChildren()) && (t[i] = o)
                    }
                    return function d8(n) {
                        if (1 === n.numberOfChildren && n.children[ae]) {
                            const t = n.children[ae];
                            return new le(n.segments.concat(t.segments), t.children)
                        }
                        return n
                    }
                    (new le(n.segments, t))
                }
                function no(n) {
                    return n instanceof eo
                }
                function f8(n, t, e, i, r) {
                    if (0 === e.length)
                        return _s(t.root, t.root, t.root, i, r);
                    const o = function AS(n) {
                        if ("string" == typeof n[0] && 1 === n.length && "/" === n[0])
                            return new TS(!0, 0, n);
                        let t = 0,
                        e = !1;
                        const i = n.reduce((r, o, s) => {
                            if ("object" == typeof o && null != o) {
                                if (o.outlets) {
                                    const a = {};
                                    return Et(o.outlets, (c, l) => {
                                        a[l] = "string" == typeof c ? c.split("/") : c
                                    }),
                                    [...r, {
                                            outlets: a
                                        }
                                    ]
                                }
                                if (o.segmentPath)
                                    return [...r, o.segmentPath]
                            }
                            return "string" != typeof o ? [...r, o] : 0 === s ? (o.split("/").forEach((a, c) => {
                                    0 == c && "." === a || (0 == c && "" === a ? e = !0 : ".." === a ? t++ : "" != a && r.push(a))
                                }), r) : [...r, o]
                        }, []);
                        return new TS(e, t, i)
                    }
                    (e);
                    return o.toRoot() ? _s(t.root, t.root, new le([], {}), i, r) : function s(c) {
                        const l = function m8(n, t, e, i) {
                            if (n.isAbsolute)
                                return new bs(t.root, !0, 0);
                            if (-1 === i)
                                return new bs(e, e === t.root, 0);
                            return function kS(n, t, e) {
                                let i = n,
                                r = t,
                                o = e;
                                for (; o > r; ) {
                                    if (o -= r, i = i.parent, !i)
                                        throw new E(4005, !1);
                                    r = i.segments.length
                                }
                                return new bs(i, !1, r - o)
                            }
                            (e, i + (sc(n.commands[0]) ? 0 : 1), n.numberOfDoubleDots)
                        }
                        (o, t, n.snapshot?._urlSegment, c),
                        d = l.processChildren ? cc(l.segmentGroup, l.index, o.commands) : Pg(l.segmentGroup, l.index, o.commands);
                        return _s(t.root, l.segmentGroup, d, i, r)
                    }
                    (n.snapshot?._lastPathIndex)
                }
                function sc(n) {
                    return "object" == typeof n && null != n && !n.outlets && !n.segmentPath
                }
                function ac(n) {
                    return "object" == typeof n && null != n && n.outlets
                }
                function _s(n, t, e, i, r) {
                    let s,
                    o = {};
                    i && Et(i, (c, l) => {
                        o[l] = Array.isArray(c) ? c.map(d => `${d}`) : `${c}`
                    }),
                    s = n === t ? e : MS(n, t, e);
                    const a = Og(iu(s));
                    return new eo(a, o, r)
                }
                function MS(n, t, e) {
                    const i = {};
                    return Et(n.children, (r, o) => {
                        i[o] = r === t ? e : MS(r, t, e)
                    }),
                    new le(n.segments, i)
                }
                class TS {
                    constructor(t, e, i) {
                        if (this.isAbsolute = t, this.numberOfDoubleDots = e, this.commands = i, t && i.length > 0 && sc(i[0]))
                            throw new E(4003, !1);
                        const r = i.find(ac);
                        if (r && r !== _S(i))
                            throw new E(4004, !1)
                    }
                    toRoot() {
                        return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0]
                    }
                }
                class bs {
                    constructor(t, e, i) {
                        this.segmentGroup = t,
                        this.processChildren = e,
                        this.index = i
                    }
                }
                function Pg(n, t, e) {
                    if (n || (n = new le([], {})), 0 === n.segments.length && n.hasChildren())
                        return cc(n, t, e);
                    const i = function _8(n, t, e) {
                        let i = 0,
                        r = t;
                        const o = {
                            match: !1,
                            pathIndex: 0,
                            commandIndex: 0
                        };
                        for (; r < n.segments.length; ) {
                            if (i >= e.length)
                                return o;
                            const s = n.segments[r],
                            a = e[i];
                            if (ac(a))
                                break;
                            const c = `${a}`,
                            l = i < e.length - 1 ? e[i + 1] : null;
                            if (r > 0 && void 0 === c)
                                break;
                            if (c && l && "object" == typeof l && void 0 === l.outlets) {
                                if (!OS(c, l, s))
                                    return o;
                                i += 2
                            } else {
                                if (!OS(c, {}, s))
                                    return o;
                                i++
                            }
                            r++
                        }
                        return {
                            match: !0,
                            pathIndex: r,
                            commandIndex: i
                        }
                    }
                    (n, t, e),
                    r = e.slice(i.commandIndex);
                    if (i.match && i.pathIndex < n.segments.length) {
                        const o = new le(n.segments.slice(0, i.pathIndex), {});
                        return o.children[ae] = new le(n.segments.slice(i.pathIndex), n.children),
                        cc(o, 0, r)
                    }
                    return i.match && 0 === r.length ? new le(n.segments, {}) : i.match && !n.hasChildren() ? Fg(n, t, e) : i.match ? cc(n, 0, r) : Fg(n, t, e)
                }
                function cc(n, t, e) {
                    if (0 === e.length)
                        return new le(n.segments, {}); {
                        const i = function g8(n) {
                            return ac(n[0]) ? n[0].outlets : {
                                [ae]: n
                            }
                        }
                        (e),
                        r = {};
                        return Et(i, (o, s) => {
                            "string" == typeof o && (o = [o]),
                            null !== o && (r[s] = Pg(n.children[s], t, o))
                        }),
                        Et(n.children, (o, s) => {
                            void 0 === i[s] && (r[s] = o)
                        }),
                        new le(n.segments, r)
                    }
                }
                function Fg(n, t, e) {
                    const i = n.segments.slice(0, t);
                    let r = 0;
                    for (; r < e.length; ) {
                        const o = e[r];
                        if (ac(o)) {
                            const c = b8(o.outlets);
                            return new le(i, c)
                        }
                        if (0 === r && sc(e[0])) {
                            i.push(new rc(n.segments[t].path, IS(e[0]))),
                            r++;
                            continue
                        }
                        const s = ac(o) ? o.outlets[ae] : `${o}`,
                        a = r < e.length - 1 ? e[r + 1] : null;
                        s && a && sc(a) ? (i.push(new rc(s, IS(a))), r += 2) : (i.push(new rc(s, {})), r++)
                    }
                    return new le(i, {})
                }
                function b8(n) {
                    const t = {};
                    return Et(n, (e, i) => {
                        "string" == typeof e && (e = [e]),
                        null !== e && (t[i] = Fg(new le([], {}), 0, e))
                    }),
                    t
                }
                function IS(n) {
                    const t = {};
                    return Et(n, (e, i) => t[i] = `${e}`),
                    t
                }
                function OS(n, t, e) {
                    return n == e.path && pi(t, e.parameters)
                }
                class Li {
                    constructor(t, e) {
                        this.id = t,
                        this.url = e
                    }
                }
                class Ng extends Li {
                    constructor(t, e, i = "imperative", r = null) {
                        super(t, e),
                        this.type = 0,
                        this.navigationTrigger = i,
                        this.restoredState = r
                    }
                    toString() {
                        return `NavigationStart(id: ${this.id}, url: '${this.url}')`
                    }
                }
                class io extends Li {
                    constructor(t, e, i) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.type = 1
                    }
                    toString() {
                        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`
                    }
                }
                class ru extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.reason = i,
                        this.code = r,
                        this.type = 2
                    }
                    toString() {
                        return `NavigationCancel(id: ${this.id}, url: '${this.url}')`
                    }
                }
                class RS extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.error = i,
                        this.target = r,
                        this.type = 3
                    }
                    toString() {
                        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`
                    }
                }
                class v8 extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.state = r,
                        this.type = 4
                    }
                    toString() {
                        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                    }
                }
                class y8 extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.state = r,
                        this.type = 7
                    }
                    toString() {
                        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                    }
                }
                class w8 extends Li {
                    constructor(t, e, i, r, o) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.state = r,
                        this.shouldActivate = o,
                        this.type = 8
                    }
                    toString() {
                        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`
                    }
                }
                class C8 extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.state = r,
                        this.type = 5
                    }
                    toString() {
                        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                    }
                }
                class D8 extends Li {
                    constructor(t, e, i, r) {
                        super(t, e),
                        this.urlAfterRedirects = i,
                        this.state = r,
                        this.type = 6
                    }
                    toString() {
                        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                    }
                }
                class x8 {
                    constructor(t) {
                        this.route = t,
                        this.type = 9
                    }
                    toString() {
                        return `RouteConfigLoadStart(path: ${this.route.path})`
                    }
                }
                class E8 {
                    constructor(t) {
                        this.route = t,
                        this.type = 10
                    }
                    toString() {
                        return `RouteConfigLoadEnd(path: ${this.route.path})`
                    }
                }
                class S8 {
                    constructor(t) {
                        this.snapshot = t,
                        this.type = 11
                    }
                    toString() {
                        return `ChildActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
                    }
                }
                class M8 {
                    constructor(t) {
                        this.snapshot = t,
                        this.type = 12
                    }
                    toString() {
                        return `ChildActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
                    }
                }
                class T8 {
                    constructor(t) {
                        this.snapshot = t,
                        this.type = 13
                    }
                    toString() {
                        return `ActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
                    }
                }
                class A8 {
                    constructor(t) {
                        this.snapshot = t,
                        this.type = 14
                    }
                    toString() {
                        return `ActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')`
                    }
                }
                class PS {
                    constructor(t, e, i) {
                        this.routerEvent = t,
                        this.position = e,
                        this.anchor = i,
                        this.type = 15
                    }
                    toString() {
                        return `Scroll(anchor: '${this.anchor}', position: '${this.position ? `${this.position[0]}, ${this.position[1]}` : null}')`
                    }
                }
                class FS {
                    constructor(t) {
                        this._root = t
                    }
                    get root() {
                        return this._root.value
                    }
                    parent(t) {
                        const e = this.pathFromRoot(t);
                        return e.length > 1 ? e[e.length - 2] : null
                    }
                    children(t) {
                        const e = Lg(t, this._root);
                        return e ? e.children.map(i => i.value) : []
                    }
                    firstChild(t) {
                        const e = Lg(t, this._root);
                        return e && e.children.length > 0 ? e.children[0].value : null
                    }
                    siblings(t) {
                        const e = Vg(t, this._root);
                        return e.length < 2 ? [] : e[e.length - 2].children.map(r => r.value).filter(r => r !== t)
                    }
                    pathFromRoot(t) {
                        return Vg(t, this._root).map(e => e.value)
                    }
                }
                function Lg(n, t) {
                    if (n === t.value)
                        return t;
                    for (const e of t.children) {
                        const i = Lg(n, e);
                        if (i)
                            return i
                    }
                    return null
                }
                function Vg(n, t) {
                    if (n === t.value)
                        return [t];
                    for (const e of t.children) {
                        const i = Vg(n, e);
                        if (i.length)
                            return i.unshift(t), i
                    }
                    return []
                }
                class Vi {
                    constructor(t, e) {
                        this.value = t,
                        this.children = e
                    }
                    toString() {
                        return `TreeNode(${this.value})`
                    }
                }
                function vs(n) {
                    const t = {};
                    return n && n.children.forEach(e => t[e.value.outlet] = e),
                    t
                }
                class NS extends FS {
                    constructor(t, e) {
                        super(t),
                        this.snapshot = e,
                        Bg(this, t)
                    }
                    toString() {
                        return this.snapshot.toString()
                    }
                }
                function LS(n, t) {
                    const e = function I8(n, t) {
                        const s = new ou([], {}, {}, "", {}, ae, t, null, n.root, -1, {});
                        return new BS("", new Vi(s, []))
                    }
                    (n, t),
                    i = new Oe([new rc("", {})]),
                    r = new Oe({}),
                    o = new Oe({}),
                    s = new Oe({}),
                    a = new Oe(""),
                    c = new ro(i, r, s, a, o, ae, t, e.root);
                    return c.snapshot = e.root,
                    new NS(new Vi(c, []), e)
                }
                class ro {
                    constructor(t, e, i, r, o, s, a, c) {
                        this.url = t,
                        this.params = e,
                        this.queryParams = i,
                        this.fragment = r,
                        this.data = o,
                        this.outlet = s,
                        this.component = a,
                        this.title = this.data?.pipe(j(l => l[ic])) ?? B(void 0),
                        this._futureSnapshot = c
                    }
                    get routeConfig() {
                        return this._futureSnapshot.routeConfig
                    }
                    get root() {
                        return this._routerState.root
                    }
                    get parent() {
                        return this._routerState.parent(this)
                    }
                    get firstChild() {
                        return this._routerState.firstChild(this)
                    }
                    get children() {
                        return this._routerState.children(this)
                    }
                    get pathFromRoot() {
                        return this._routerState.pathFromRoot(this)
                    }
                    get paramMap() {
                        return this._paramMap || (this._paramMap = this.params.pipe(j(t => gs(t)))),
                        this._paramMap
                    }
                    get queryParamMap() {
                        return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(j(t => gs(t)))),
                        this._queryParamMap
                    }
                    toString() {
                        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`
                    }
                }
                function VS(n, t = "emptyOnly") {
                    const e = n.pathFromRoot;
                    let i = 0;
                    if ("always" !== t)
                        for (i = e.length - 1; i >= 1; ) {
                            const r = e[i],
                            o = e[i - 1];
                            if (r.routeConfig && "" === r.routeConfig.path)
                                i--;
                            else {
                                if (o.component)
                                    break;
                                i--
                            }
                        }
                    return function O8(n) {
                        return n.reduce((t, e) => ({
                                params: {
                                    ...t.params,
                                    ...e.params
                                },
                                data: {
                                    ...t.data,
                                    ...e.data
                                },
                                resolve: {
                                    ...e.data,
                                    ...t.resolve,
                                    ...e.routeConfig?.data,
                                    ...e._resolvedData
                                }
                            }), {
                            params: {},
                            data: {},
                            resolve: {}
                        })
                    }
                    (e.slice(i))
                }
                class ou {
                    constructor(t, e, i, r, o, s, a, c, l, d, u) {
                        this.url = t,
                        this.params = e,
                        this.queryParams = i,
                        this.fragment = r,
                        this.data = o,
                        this.outlet = s,
                        this.component = a,
                        this.routeConfig = c,
                        this._urlSegment = l,
                        this._lastPathIndex = d,
                        this._resolve = u
                    }
                    get title() {
                        return this.data?.[ic]
                    }
                    get root() {
                        return this._routerState.root
                    }
                    get parent() {
                        return this._routerState.parent(this)
                    }
                    get firstChild() {
                        return this._routerState.firstChild(this)
                    }
                    get children() {
                        return this._routerState.children(this)
                    }
                    get pathFromRoot() {
                        return this._routerState.pathFromRoot(this)
                    }
                    get paramMap() {
                        return this._paramMap || (this._paramMap = gs(this.params)),
                        this._paramMap
                    }
                    get queryParamMap() {
                        return this._queryParamMap || (this._queryParamMap = gs(this.queryParams)),
                        this._queryParamMap
                    }
                    toString() {
                        return `Route(url:'${this.url.map(i => i.toString()).join("/")}', path:'${this.routeConfig ? this.routeConfig.path : ""}')`
                    }
                }
                class BS extends FS {
                    constructor(t, e) {
                        super(e),
                        this.url = t,
                        Bg(this, e)
                    }
                    toString() {
                        return jS(this._root)
                    }
                }
                function Bg(n, t) {
                    t.value._routerState = n,
                    t.children.forEach(e => Bg(n, e))
                }
                function jS(n) {
                    const t = n.children.length > 0 ? ` { ${n.children.map(jS).join(", ")} } ` : "";
                    return `${n.value}${t}`
                }
                function jg(n) {
                    if (n.snapshot) {
                        const t = n.snapshot,
                        e = n._futureSnapshot;
                        n.snapshot = e,
                        pi(t.queryParams, e.queryParams) || n.queryParams.next(e.queryParams),
                        t.fragment !== e.fragment && n.fragment.next(e.fragment),
                        pi(t.params, e.params) || n.params.next(e.params),
                        function YU(n, t) {
                            if (n.length !== t.length)
                                return !1;
                            for (let e = 0; e < n.length; ++e)
                                if (!pi(n[e], t[e]))
                                    return !1;
                            return !0
                        }
                        (t.url, e.url) || n.url.next(e.url),
                        pi(t.data, e.data) || n.data.next(e.data)
                    } else
                        n.snapshot = n._futureSnapshot, n.data.next(n._futureSnapshot.data)
                }
                function Hg(n, t) {
                    const e = pi(n.params, t.params) && function QU(n, t) {
                        return to(n, t) && n.every((e, i) => pi(e.parameters, t[i].parameters))
                    }
                    (n.url, t.url);
                    return e && !(!n.parent != !t.parent) && (!n.parent || Hg(n.parent, t.parent))
                }
                function lc(n, t, e) {
                    if (e && n.shouldReuseRoute(t.value, e.value.snapshot)) {
                        const i = e.value;
                        i._futureSnapshot = t.value;
                        const r = function P8(n, t, e) {
                            return t.children.map(i => {
                                for (const r of e.children)
                                    if (n.shouldReuseRoute(i.value, r.value.snapshot))
                                        return lc(n, i, r);
                                return lc(n, i)
                            })
                        }
                        (n, t, e);
                        return new Vi(i, r)
                    } {
                        if (n.shouldAttach(t.value)) {
                            const o = n.retrieve(t.value);
                            if (null !== o) {
                                const s = o.route;
                                return s.value._futureSnapshot = t.value,
                                s.children = t.children.map(a => lc(n, a)),
                                s
                            }
                        }
                        const i = function F8(n) {
                            return new ro(new Oe(n.url), new Oe(n.params), new Oe(n.queryParams), new Oe(n.fragment), new Oe(n.data), n.outlet, n.component, n)
                        }
                        (t.value),
                        r = t.children.map(o => lc(n, o));
                        return new Vi(i, r)
                    }
                }
                const Ug = "ngNavigationCancelingError";
                function HS(n, t) {
                    const {
                        redirectTo: e,
                        navigationBehaviorOptions: i
                    } = no(t) ? {
                        redirectTo: t,
                        navigationBehaviorOptions: void 0
                    }
                     : t,
                    r = US(!1, 0, t);
                    return r.url = e,
                    r.navigationBehaviorOptions = i,
                    r
                }
                function US(n, t, e) {
                    const i = new Error("NavigationCancelingError: " + (n || ""));
                    return i[Ug] = !0,
                    i.cancellationCode = t,
                    e && (i.url = e),
                    i
                }
                function $S(n) {
                    return zS(n) && no(n.url)
                }
                function zS(n) {
                    return n && n[Ug]
                }
                class N8 {
                    constructor() {
                        this.outlet = null,
                        this.route = null,
                        this.resolver = null,
                        this.injector = null,
                        this.children = new dc,
                        this.attachRef = null
                    }
                }
                let dc = (() => {
                    class n {
                        constructor() {
                            this.contexts = new Map
                        }
                        onChildOutletCreated(e, i) {
                            const r = this.getOrCreateContext(e);
                            r.outlet = i,
                            this.contexts.set(e, r)
                        }
                        onChildOutletDestroyed(e) {
                            const i = this.getContext(e);
                            i && (i.outlet = null, i.attachRef = null)
                        }
                        onOutletDeactivated() {
                            const e = this.contexts;
                            return this.contexts = new Map,
                            e
                        }
                        onOutletReAttached(e) {
                            this.contexts = e
                        }
                        getOrCreateContext(e) {
                            let i = this.getContext(e);
                            return i || (i = new N8, this.contexts.set(e, i)),
                            i
                        }
                        getContext(e) {
                            return this.contexts.get(e) || null
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const su = !1;
                let GS = (() => {
                    class n {
                        constructor() {
                            this.activated = null,
                            this._activatedRoute = null,
                            this.name = ae,
                            this.activateEvents = new re,
                            this.deactivateEvents = new re,
                            this.attachEvents = new re,
                            this.detachEvents = new re,
                            this.parentContexts = ce(dc),
                            this.location = ce(Yt),
                            this.changeDetector = ce($t),
                            this.environmentInjector = ce(xi)
                        }
                        ngOnChanges(e) {
                            if (e.name) {
                                const {
                                    firstChange: i,
                                    previousValue: r
                                } = e.name;
                                if (i)
                                    return;
                                this.isTrackedInParentContexts(r) && (this.deactivate(), this.parentContexts.onChildOutletDestroyed(r)),
                                this.initializeOutletWithName()
                            }
                        }
                        ngOnDestroy() {
                            this.isTrackedInParentContexts(this.name) && this.parentContexts.onChildOutletDestroyed(this.name)
                        }
                        isTrackedInParentContexts(e) {
                            return this.parentContexts.getContext(e)?.outlet === this
                        }
                        ngOnInit() {
                            this.initializeOutletWithName()
                        }
                        initializeOutletWithName() {
                            if (this.parentContexts.onChildOutletCreated(this.name, this), this.activated)
                                return;
                            const e = this.parentContexts.getContext(this.name);
                            e?.route && (e.attachRef ? this.attach(e.attachRef, e.route) : this.activateWith(e.route, e.injector))
                        }
                        get isActivated() {
                            return !!this.activated
                        }
                        get component() {
                            if (!this.activated)
                                throw new E(4012, su);
                            return this.activated.instance
                        }
                        get activatedRoute() {
                            if (!this.activated)
                                throw new E(4012, su);
                            return this._activatedRoute
                        }
                        get activatedRouteData() {
                            return this._activatedRoute ? this._activatedRoute.snapshot.data : {}
                        }
                        detach() {
                            if (!this.activated)
                                throw new E(4012, su);
                            this.location.detach();
                            const e = this.activated;
                            return this.activated = null,
                            this._activatedRoute = null,
                            this.detachEvents.emit(e.instance),
                            e
                        }
                        attach(e, i) {
                            this.activated = e,
                            this._activatedRoute = i,
                            this.location.insert(e.hostView),
                            this.attachEvents.emit(e.instance)
                        }
                        deactivate() {
                            if (this.activated) {
                                const e = this.component;
                                this.activated.destroy(),
                                this.activated = null,
                                this._activatedRoute = null,
                                this.deactivateEvents.emit(e)
                            }
                        }
                        activateWith(e, i) {
                            if (this.isActivated)
                                throw new E(4013, su);
                            this._activatedRoute = e;
                            const r = this.location,
                            s = e.snapshot.component,
                            a = this.parentContexts.getOrCreateContext(this.name).children,
                            c = new L8(e, a, r.injector);
                            if (i && function V8(n) {
                                return !!n.resolveComponentFactory
                            }
                                (i)) {
                                const l = i.resolveComponentFactory(s);
                                this.activated = r.createComponent(l, r.length, c)
                            } else
                                this.activated = r.createComponent(s, {
                                    index: r.length,
                                    injector: c,
                                    environmentInjector: i ?? this.environmentInjector
                                });
                            this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["router-outlet"]],
                        inputs: {
                            name: "name"
                        },
                        outputs: {
                            activateEvents: "activate",
                            deactivateEvents: "deactivate",
                            attachEvents: "attach",
                            detachEvents: "detach"
                        },
                        exportAs: ["outlet"],
                        standalone: !0,
                        features: [Ft]
                    }),
                    n
                })();
                class L8 {
                    constructor(t, e, i) {
                        this.route = t,
                        this.childContexts = e,
                        this.parent = i
                    }
                    get(t, e) {
                        return t === ro ? this.route : t === dc ? this.childContexts : this.parent.get(t, e)
                    }
                }
                let $g = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["ng-component"]],
                        standalone: !0,
                        features: [xw],
                        decls: 1,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && V(0, "router-outlet")
                        },
                        dependencies: [GS],
                        encapsulation: 2
                    }),
                    n
                })();
                function WS(n, t) {
                    return n.providers && !n._injector && (n._injector = Vl(n.providers, t, `Route: ${n.path}`)),
                    n._injector ?? t
                }
                function Gg(n) {
                    const t = n.children && n.children.map(Gg),
                    e = t ? {
                        ...n,
                        children: t
                    }
                     : {
                        ...n
                    };
                    return !e.component && !e.loadComponent && (t || e.loadChildren) && e.outlet && e.outlet !== ae && (e.component = $g),
                    e
                }
                function Mn(n) {
                    return n.outlet || ae
                }
                function qS(n, t) {
                    const e = n.filter(i => Mn(i) === t);
                    return e.push(...n.filter(i => Mn(i) !== t)),
                    e
                }
                function uc(n) {
                    if (!n)
                        return null;
                    if (n.routeConfig?._injector)
                        return n.routeConfig._injector;
                    for (let t = n.parent; t; t = t.parent) {
                        const e = t.routeConfig;
                        if (e?._loadedInjector)
                            return e._loadedInjector;
                        if (e?._injector)
                            return e._injector
                    }
                    return null
                }
                class $8 {
                    constructor(t, e, i, r) {
                        this.routeReuseStrategy = t,
                        this.futureState = e,
                        this.currState = i,
                        this.forwardEvent = r
                    }
                    activate(t) {
                        const e = this.futureState._root,
                        i = this.currState ? this.currState._root : null;
                        this.deactivateChildRoutes(e, i, t),
                        jg(this.futureState.root),
                        this.activateChildRoutes(e, i, t)
                    }
                    deactivateChildRoutes(t, e, i) {
                        const r = vs(e);
                        t.children.forEach(o => {
                            const s = o.value.outlet;
                            this.deactivateRoutes(o, r[s], i),
                            delete r[s]
                        }),
                        Et(r, (o, s) => {
                            this.deactivateRouteAndItsChildren(o, i)
                        })
                    }
                    deactivateRoutes(t, e, i) {
                        const r = t.value,
                        o = e ? e.value : null;
                        if (r === o)
                            if (r.component) {
                                const s = i.getContext(r.outlet);
                                s && this.deactivateChildRoutes(t, e, s.children)
                            } else
                                this.deactivateChildRoutes(t, e, i);
                        else
                            o && this.deactivateRouteAndItsChildren(e, i)
                    }
                    deactivateRouteAndItsChildren(t, e) {
                        t.value.component && this.routeReuseStrategy.shouldDetach(t.value.snapshot) ? this.detachAndStoreRouteSubtree(t, e) : this.deactivateRouteAndOutlet(t, e)
                    }
                    detachAndStoreRouteSubtree(t, e) {
                        const i = e.getContext(t.value.outlet),
                        r = i && t.value.component ? i.children : e,
                        o = vs(t);
                        for (const s of Object.keys(o))
                            this.deactivateRouteAndItsChildren(o[s], r);
                        if (i && i.outlet) {
                            const s = i.outlet.detach(),
                            a = i.children.onOutletDeactivated();
                            this.routeReuseStrategy.store(t.value.snapshot, {
                                componentRef: s,
                                route: t,
                                contexts: a
                            })
                        }
                    }
                    deactivateRouteAndOutlet(t, e) {
                        const i = e.getContext(t.value.outlet),
                        r = i && t.value.component ? i.children : e,
                        o = vs(t);
                        for (const s of Object.keys(o))
                            this.deactivateRouteAndItsChildren(o[s], r);
                        i && i.outlet && (i.outlet.deactivate(), i.children.onOutletDeactivated(), i.attachRef = null, i.resolver = null, i.route = null)
                    }
                    activateChildRoutes(t, e, i) {
                        const r = vs(e);
                        t.children.forEach(o => {
                            this.activateRoutes(o, r[o.value.outlet], i),
                            this.forwardEvent(new A8(o.value.snapshot))
                        }),
                        t.children.length && this.forwardEvent(new M8(t.value.snapshot))
                    }
                    activateRoutes(t, e, i) {
                        const r = t.value,
                        o = e ? e.value : null;
                        if (jg(r), r === o)
                            if (r.component) {
                                const s = i.getOrCreateContext(r.outlet);
                                this.activateChildRoutes(t, e, s.children)
                            } else
                                this.activateChildRoutes(t, e, i);
                        else if (r.component) {
                            const s = i.getOrCreateContext(r.outlet);
                            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
                                const a = this.routeReuseStrategy.retrieve(r.snapshot);
                                this.routeReuseStrategy.store(r.snapshot, null),
                                s.children.onOutletReAttached(a.contexts),
                                s.attachRef = a.componentRef,
                                s.route = a.route.value,
                                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                                jg(a.route.value),
                                this.activateChildRoutes(t, null, s.children)
                            } else {
                                const a = uc(r.snapshot),
                                c = a?.get(Pr) ?? null;
                                s.attachRef = null,
                                s.route = r,
                                s.resolver = c,
                                s.injector = a,
                                s.outlet && s.outlet.activateWith(r, s.injector),
                                this.activateChildRoutes(t, null, s.children)
                            }
                        } else
                            this.activateChildRoutes(t, null, i)
                    }
                }
                class YS {
                    constructor(t) {
                        this.path = t,
                        this.route = this.path[this.path.length - 1]
                    }
                }
                class au {
                    constructor(t, e) {
                        this.component = t,
                        this.route = e
                    }
                }
                function z8(n, t, e) {
                    const i = n._root;
                    return hc(i, t ? t._root : null, e, [i.value])
                }
                function ys(n, t) {
                    const e = Symbol(),
                    i = t.get(n, e);
                    return i === e ? "function" != typeof n || function CA(n) {
                        return null !== Bc(n)
                    }
                    (n) ? t.get(n) : n : i
                }
                function hc(n, t, e, i, r = {
                        canDeactivateChecks: [],
                        canActivateChecks: []
                    }) {
                    const o = vs(t);
                    return n.children.forEach(s => {
                        (function W8(n, t, e, i, r = {
                                    canDeactivateChecks: [],
                                    canActivateChecks: []
                                }) {
                            const o = n.value,
                            s = t ? t.value : null,
                            a = e ? e.getContext(n.value.outlet) : null;
                            if (s && o.routeConfig === s.routeConfig) {
                                const c = function q8(n, t, e) {
                                    if ("function" == typeof e)
                                        return e(n, t);
                                    switch (e) {
                                    case "pathParamsChange":
                                        return !to(n.url, t.url);
                                    case "pathParamsOrQueryParamsChange":
                                        return !to(n.url, t.url) || !pi(n.queryParams, t.queryParams);
                                    case "always":
                                        return !0;
                                    case "paramsOrQueryParamsChange":
                                        return !Hg(n, t) || !pi(n.queryParams, t.queryParams);
                                    default:
                                        return !Hg(n, t)
                                    }
                                }
                                (s, o, o.routeConfig.runGuardsAndResolvers);
                                c ? r.canActivateChecks.push(new YS(i)) : (o.data = s.data, o._resolvedData = s._resolvedData),
                                hc(n, t, o.component ? a ? a.children : null : e, i, r),
                                c && a && a.outlet && a.outlet.isActivated && r.canDeactivateChecks.push(new au(a.outlet.component, s))
                            } else
                                s && fc(t, a, r), r.canActivateChecks.push(new YS(i)), hc(n, null, o.component ? a ? a.children : null : e, i, r)
                        })(s, o[s.value.outlet], e, i.concat([s.value]), r),
                        delete o[s.value.outlet]
                    }),
                    Et(o, (s, a) => fc(s, e.getContext(a), r)),
                    r
                }
                function fc(n, t, e) {
                    const i = vs(n),
                    r = n.value;
                    Et(i, (o, s) => {
                        fc(o, r.component ? t ? t.children.getContext(s) : null : t, e)
                    }),
                    e.canDeactivateChecks.push(new au(r.component && t && t.outlet && t.outlet.isActivated ? t.outlet.component : null, r))
                }
                function pc(n) {
                    return "function" == typeof n
                }
                function Wg(n) {
                    return n instanceof Yd || "EmptyError" === n?.name
                }
                const cu = Symbol("INITIAL_VALUE");
                function ws() {
                    return Qt(n => Jm(n.map(t => t.pipe(Ge(1), ir(cu)))).pipe(j(t => {
                                for (const e of t)
                                    if (!0 !== e) {
                                        if (e === cu)
                                            return cu;
                                        if (!1 === e || e instanceof eo)
                                            return e
                                    }
                                return !0
                            }), ve(t => t !== cu), Ge(1)))
                }
                function KS(n) {
                    return function zT(...n) {
                        return j_(n)
                    }
                    (Je(t => {
                            if (no(t))
                                throw HS(0, t)
                        }), j(t => !0 === t))
                }
                const qg = {
                    matched: !1,
                    consumedSegments: [],
                    remainingSegments: [],
                    parameters: {},
                    positionalParamSegments: {}
                };
                function ZS(n, t, e, i, r) {
                    const o = Yg(n, t, e);
                    return o.matched ? function d4(n, t, e, i) {
                        const r = t.canMatch;
                        return r && 0 !== r.length ? B(r.map(s => {
                                const a = ys(s, n);
                                return fr(function J8(n) {
                                    return n && pc(n.canMatch)
                                }
                                    (a) ? a.canMatch(t, e) : n.runInContext(() => a(t, e)))
                            })).pipe(ws(), KS()) : B(!0)
                    }
                    (i = WS(t, i), t, e).pipe(j(s => !0 === s ? o : {
                            ...qg
                        })) : B(o)
                }
                function Yg(n, t, e) {
                    if ("" === t.path)
                        return "full" === t.pathMatch && (n.hasChildren() || e.length > 0) ? {
                            ...qg
                        }
                     : {
                        matched: !0,
                        consumedSegments: [],
                        remainingSegments: e,
                        parameters: {},
                        positionalParamSegments: {}
                    };
                    const r = (t.matcher || qU)(e, n, t);
                    if (!r)
                        return {
                            ...qg
                        };
                    const o = {};
                    Et(r.posParams, (a, c) => {
                        o[c] = a.path
                    });
                    const s = r.consumed.length > 0 ? {
                        ...o,
                        ...r.consumed[r.consumed.length - 1].parameters
                    }
                     : o;
                    return {
                        matched: !0,
                        consumedSegments: r.consumed,
                        remainingSegments: e.slice(r.consumed.length),
                        parameters: s,
                        positionalParamSegments: r.posParams ?? {}
                    }
                }
                function lu(n, t, e, i) {
                    if (e.length > 0 && function f4(n, t, e) {
                        return e.some(i => du(n, t, i) && Mn(i) !== ae)
                    }
                        (n, e, i)) {
                        const o = new le(t, function h4(n, t, e, i) {
                            const r = {};
                            r[ae] = i,
                            i._sourceSegment = n,
                            i._segmentIndexShift = t.length;
                            for (const o of e)
                                if ("" === o.path && Mn(o) !== ae) {
                                    const s = new le([], {});
                                    s._sourceSegment = n,
                                    s._segmentIndexShift = t.length,
                                    r[Mn(o)] = s
                                }
                            return r
                        }
                                (n, t, i, new le(e, n.children)));
                        return o._sourceSegment = n,
                        o._segmentIndexShift = t.length, {
                            segmentGroup: o,
                            slicedSegments: []
                        }
                    }
                    if (0 === e.length && function p4(n, t, e) {
                        return e.some(i => du(n, t, i))
                    }
                        (n, e, i)) {
                        const o = new le(n.segments, function u4(n, t, e, i, r) {
                            const o = {};
                            for (const s of i)
                                if (du(n, e, s) && !r[Mn(s)]) {
                                    const a = new le([], {});
                                    a._sourceSegment = n,
                                    a._segmentIndexShift = t.length,
                                    o[Mn(s)] = a
                                }
                            return {
                                ...r,
                                ...o
                            }
                        }
                                (n, t, e, i, n.children));
                        return o._sourceSegment = n,
                        o._segmentIndexShift = t.length, {
                            segmentGroup: o,
                            slicedSegments: e
                        }
                    }
                    const r = new le(n.segments, n.children);
                    return r._sourceSegment = n,
                    r._segmentIndexShift = t.length, {
                        segmentGroup: r,
                        slicedSegments: e
                    }
                }
                function du(n, t, e) {
                    return (!(n.hasChildren() || t.length > 0) || "full" !== e.pathMatch) && "" === e.path
                }
                function XS(n, t, e, i) {
                    return !!(Mn(n) === i || i !== ae && du(t, e, n)) && ("**" === n.path || Yg(t, n, e).matched)
                }
                function QS(n, t, e) {
                    return 0 === t.length && !n.children[e]
                }
                const uu = !1;
                class hu {
                    constructor(t) {
                        this.segmentGroup = t || null
                    }
                }
                class JS {
                    constructor(t) {
                        this.urlTree = t
                    }
                }
                function mc(n) {
                    return Xr(new hu(n))
                }
                function eM(n) {
                    return Xr(new JS(n))
                }
                class b4 {
                    constructor(t, e, i, r, o) {
                        this.injector = t,
                        this.configLoader = e,
                        this.urlSerializer = i,
                        this.urlTree = r,
                        this.config = o,
                        this.allowRedirects = !0
                    }
                    apply() {
                        const t = lu(this.urlTree.root, [], [], this.config).segmentGroup,
                        e = new le(t.segments, t.children);
                        return this.expandSegmentGroup(this.injector, this.config, e, ae).pipe(j(o => this.createUrlTree(iu(o), this.urlTree.queryParams, this.urlTree.fragment))).pipe(Ni(o => {
                                if (o instanceof JS)
                                    return this.allowRedirects = !1, this.match(o.urlTree);
                                throw o instanceof hu ? this.noMatchError(o) : o
                            }))
                    }
                    match(t) {
                        return this.expandSegmentGroup(this.injector, this.config, t.root, ae).pipe(j(r => this.createUrlTree(iu(r), t.queryParams, t.fragment))).pipe(Ni(r => {
                                throw r instanceof hu ? this.noMatchError(r) : r
                            }))
                    }
                    noMatchError(t) {
                        return new E(4002, uu)
                    }
                    createUrlTree(t, e, i) {
                        const r = Og(t);
                        return new eo(r, e, i)
                    }
                    expandSegmentGroup(t, e, i, r) {
                        return 0 === i.segments.length && i.hasChildren() ? this.expandChildren(t, e, i).pipe(j(o => new le([], o))) : this.expandSegment(t, i, e, i.segments, r, !0)
                    }
                    expandChildren(t, e, i) {
                        const r = [];
                        for (const o of Object.keys(i.children))
                            "primary" === o ? r.unshift(o) : r.push(o);
                        return it(r).pipe(dr(o => {
                                const s = i.children[o],
                                a = qS(e, o);
                                return this.expandSegmentGroup(t, a, s, o).pipe(j(c => ({
                                            segment: c,
                                            outlet: o
                                        })))
                            }), fS((o, s) => (o[s.outlet] = s.segment, o), {}), pS())
                    }
                    expandSegment(t, e, i, r, o, s) {
                        return it(i).pipe(dr(a => this.expandSegmentAgainstRoute(t, e, i, a, r, o, s).pipe(Ni(l => {
                                        if (l instanceof hu)
                                            return B(null);
                                        throw l
                                    }))), hr(a => !!a), Ni((a, c) => {
                                if (Wg(a))
                                    return QS(e, r, o) ? B(new le([], {})) : mc(e);
                                throw a
                            }))
                    }
                    expandSegmentAgainstRoute(t, e, i, r, o, s, a) {
                        return XS(r, e, o, s) ? void 0 === r.redirectTo ? this.matchSegmentAgainstRoute(t, e, r, o, s) : a && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s) : mc(e) : mc(e)
                    }
                    expandSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s) {
                        return "**" === r.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, i, r, s) : this.expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s)
                    }
                    expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, i, r) {
                        const o = this.applyRedirectCommands([], i.redirectTo, {});
                        return i.redirectTo.startsWith("/") ? eM(o) : this.lineralizeSegments(i, o).pipe(ut(s => {
                                const a = new le(s, {});
                                return this.expandSegment(t, a, e, s, r, !1)
                            }))
                    }
                    expandRegularSegmentAgainstRouteUsingRedirect(t, e, i, r, o, s) {
                        const {
                            matched: a,
                            consumedSegments: c,
                            remainingSegments: l,
                            positionalParamSegments: d
                        } = Yg(e, r, o);
                        if (!a)
                            return mc(e);
                        const u = this.applyRedirectCommands(c, r.redirectTo, d);
                        return r.redirectTo.startsWith("/") ? eM(u) : this.lineralizeSegments(r, u).pipe(ut(h => this.expandSegment(t, e, i, h.concat(l), s, !1)))
                    }
                    matchSegmentAgainstRoute(t, e, i, r, o) {
                        return "**" === i.path ? (t = WS(i, t), i.loadChildren ? (i._loadedRoutes ? B({
                                    routes: i._loadedRoutes,
                                    injector: i._loadedInjector
                                }) : this.configLoader.loadChildren(t, i)).pipe(j(a => (i._loadedRoutes = a.routes, i._loadedInjector = a.injector, new le(r, {})))) : B(new le(r, {}))) : ZS(e, i, r, t).pipe(Qt(({
                                    matched: s,
                                    consumedSegments: a,
                                    remainingSegments: c
                                }) => s ? this.getChildConfig(t = i._injector ?? t, i, r).pipe(ut(d => {
                                        const u = d.injector ?? t,
                                        h = d.routes, {
                                            segmentGroup: f,
                                            slicedSegments: m
                                        } = lu(e, a, c, h),
                                        _ = new le(f.segments, f.children);
                                        if (0 === m.length && _.hasChildren())
                                            return this.expandChildren(u, h, _).pipe(j(x => new le(a, x)));
                                        if (0 === h.length && 0 === m.length)
                                            return B(new le(a, {}));
                                        const C = Mn(i) === o;
                                        return this.expandSegment(u, _, h, m, C ? ae : o, !0).pipe(j(A => new le(a.concat(A.segments), A.children)))
                                    })) : mc(e)))
                    }
                    getChildConfig(t, e, i) {
                        return e.children ? B({
                            routes: e.children,
                            injector: t
                        }) : e.loadChildren ? void 0 !== e._loadedRoutes ? B({
                            routes: e._loadedRoutes,
                            injector: e._loadedInjector
                        }) : function l4(n, t, e, i) {
                            const r = t.canLoad;
                            return void 0 === r || 0 === r.length ? B(!0) : B(r.map(s => {
                                    const a = ys(s, n);
                                    return fr(function K8(n) {
                                        return n && pc(n.canLoad)
                                    }
                                        (a) ? a.canLoad(t, e) : n.runInContext(() => a(t, e)))
                                })).pipe(ws(), KS())
                        }
                        (t, e, i).pipe(ut(r => r ? this.configLoader.loadChildren(t, e).pipe(Je(o => {
                                        e._loadedRoutes = o.routes,
                                        e._loadedInjector = o.injector
                                    })) : function g4(n) {
                                return Xr(US(uu, 3))
                            }
                                ())) : B({
                            routes: [],
                            injector: t
                        })
                    }
                    lineralizeSegments(t, e) {
                        let i = [],
                        r = e.root;
                        for (; ; ) {
                            if (i = i.concat(r.segments), 0 === r.numberOfChildren)
                                return B(i);
                            if (r.numberOfChildren > 1 || !r.children[ae])
                                return Xr(new E(4e3, uu));
                            r = r.children[ae]
                        }
                    }
                    applyRedirectCommands(t, e, i) {
                        return this.applyRedirectCreateUrlTree(e, this.urlSerializer.parse(e), t, i)
                    }
                    applyRedirectCreateUrlTree(t, e, i, r) {
                        const o = this.createSegmentGroup(t, e.root, i, r);
                        return new eo(o, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment)
                    }
                    createQueryParams(t, e) {
                        const i = {};
                        return Et(t, (r, o) => {
                            if ("string" == typeof r && r.startsWith(":")) {
                                const a = r.substring(1);
                                i[o] = e[a]
                            } else
                                i[o] = r
                        }),
                        i
                    }
                    createSegmentGroup(t, e, i, r) {
                        const o = this.createSegments(t, e.segments, i, r);
                        let s = {};
                        return Et(e.children, (a, c) => {
                            s[c] = this.createSegmentGroup(t, a, i, r)
                        }),
                        new le(o, s)
                    }
                    createSegments(t, e, i, r) {
                        return e.map(o => o.path.startsWith(":") ? this.findPosParam(t, o, r) : this.findOrReturn(o, i))
                    }
                    findPosParam(t, e, i) {
                        const r = i[e.path.substring(1)];
                        if (!r)
                            throw new E(4001, uu);
                        return r
                    }
                    findOrReturn(t, e) {
                        let i = 0;
                        for (const r of e) {
                            if (r.path === t.path)
                                return e.splice(i), r;
                            i++
                        }
                        return t
                    }
                }
                class y4 {}
                class D4 {
                    constructor(t, e, i, r, o, s, a) {
                        this.injector = t,
                        this.rootComponentType = e,
                        this.config = i,
                        this.urlTree = r,
                        this.url = o,
                        this.paramsInheritanceStrategy = s,
                        this.urlSerializer = a
                    }
                    recognize() {
                        const t = lu(this.urlTree.root, [], [], this.config.filter(e => void 0 === e.redirectTo)).segmentGroup;
                        return this.processSegmentGroup(this.injector, this.config, t, ae).pipe(j(e => {
                                if (null === e)
                                    return null;
                                const i = new ou([], Object.freeze({}), Object.freeze({
                                            ...this.urlTree.queryParams
                                        }), this.urlTree.fragment, {}, ae, this.rootComponentType, null, this.urlTree.root, -1, {}),
                                r = new Vi(i, e),
                                o = new BS(this.url, r);
                                return this.inheritParamsAndData(o._root),
                                o
                            }))
                    }
                    inheritParamsAndData(t) {
                        const e = t.value,
                        i = VS(e, this.paramsInheritanceStrategy);
                        e.params = Object.freeze(i.params),
                        e.data = Object.freeze(i.data),
                        t.children.forEach(r => this.inheritParamsAndData(r))
                    }
                    processSegmentGroup(t, e, i, r) {
                        return 0 === i.segments.length && i.hasChildren() ? this.processChildren(t, e, i) : this.processSegment(t, e, i, i.segments, r)
                    }
                    processChildren(t, e, i) {
                        return it(Object.keys(i.children)).pipe(dr(r => {
                                const o = i.children[r],
                                s = qS(e, r);
                                return this.processSegmentGroup(t, s, o, r)
                            }), fS((r, o) => r && o ? (r.push(...o), r) : null), function GU(n, t = !1) {
                            return Be((e, i) => {
                                let r = 0;
                                e.subscribe(Ve(i, o => {
                                        const s = n(o, r++);
                                        (s || t) && i.next(o),
                                        !s && i.complete()
                                    }))
                            })
                        }
                            (r => null !== r), Kd(null), pS(), j(r => {
                                if (null === r)
                                    return null;
                                const o = nM(r);
                                return function x4(n) {
                                    n.sort((t, e) => t.value.outlet === ae ? -1 : e.value.outlet === ae ? 1 : t.value.outlet.localeCompare(e.value.outlet))
                                }
                                (o),
                                o
                            }))
                    }
                    processSegment(t, e, i, r, o) {
                        return it(e).pipe(dr(s => this.processSegmentAgainstRoute(s._injector ?? t, s, i, r, o)), hr(s => !!s), Ni(s => {
                                if (Wg(s))
                                    return QS(i, r, o) ? B([]) : B(null);
                                throw s
                            }))
                    }
                    processSegmentAgainstRoute(t, e, i, r, o) {
                        if (e.redirectTo || !XS(e, i, r, o))
                            return B(null);
                        let s;
                        if ("**" === e.path) {
                            const a = r.length > 0 ? _S(r).parameters : {},
                            c = rM(i) + r.length;
                            s = B({
                                snapshot: new ou(r, a, Object.freeze({
                                        ...this.urlTree.queryParams
                                    }), this.urlTree.fragment, oM(e), Mn(e), e.component ?? e._loadedComponent ?? null, e, iM(i), c, sM(e)),
                                consumedSegments: [],
                                remainingSegments: []
                            })
                        } else
                            s = ZS(i, e, r, t).pipe(j(({
                                            matched: a,
                                            consumedSegments: c,
                                            remainingSegments: l,
                                            parameters: d
                                        }) => {
                                        if (!a)
                                            return null;
                                        const u = rM(i) + c.length;
                                        return {
                                            snapshot: new ou(c, d, Object.freeze({
                                                    ...this.urlTree.queryParams
                                                }), this.urlTree.fragment, oM(e), Mn(e), e.component ?? e._loadedComponent ?? null, e, iM(i), u, sM(e)),
                                            consumedSegments: c,
                                            remainingSegments: l
                                        }
                                    }));
                        return s.pipe(Qt(a => {
                                if (null === a)
                                    return B(null);
                                const {
                                    snapshot: c,
                                    consumedSegments: l,
                                    remainingSegments: d
                                } = a;
                                t = e._injector ?? t;
                                const u = e._loadedInjector ?? t,
                                h = function E4(n) {
                                    return n.children ? n.children : n.loadChildren ? n._loadedRoutes : []
                                }
                                (e), {
                                    segmentGroup: f,
                                    slicedSegments: m
                                } = lu(i, l, d, h.filter(C => void 0 === C.redirectTo));
                                if (0 === m.length && f.hasChildren())
                                    return this.processChildren(u, h, f).pipe(j(C => null === C ? null : [new Vi(c, C)]));
                                if (0 === h.length && 0 === m.length)
                                    return B([new Vi(c, [])]);
                                const _ = Mn(e) === o;
                                return this.processSegment(u, h, f, m, _ ? ae : o).pipe(j(C => null === C ? null : [new Vi(c, C)]))
                            }))
                    }
                }
                function S4(n) {
                    const t = n.value.routeConfig;
                    return t && "" === t.path && void 0 === t.redirectTo
                }
                function nM(n) {
                    const t = [],
                    e = new Set;
                    for (const i of n) {
                        if (!S4(i)) {
                            t.push(i);
                            continue
                        }
                        const r = t.find(o => i.value.routeConfig === o.value.routeConfig);
                        void 0 !== r ? (r.children.push(...i.children), e.add(r)) : t.push(i)
                    }
                    for (const i of e) {
                        const r = nM(i.children);
                        t.push(new Vi(i.value, r))
                    }
                    return t.filter(i => !e.has(i))
                }
                function iM(n) {
                    let t = n;
                    for (; t._sourceSegment; )
                        t = t._sourceSegment;
                    return t
                }
                function rM(n) {
                    let t = n,
                    e = t._segmentIndexShift ?? 0;
                    for (; t._sourceSegment; )
                        t = t._sourceSegment, e += t._segmentIndexShift ?? 0;
                    return e - 1
                }
                function oM(n) {
                    return n.data || {}
                }
                function sM(n) {
                    return n.resolve || {}
                }
                function aM(n) {
                    return "string" == typeof n.title || null === n.title
                }
                function Kg(n) {
                    return Qt(t => {
                        const e = n(t);
                        return e ? it(e).pipe(j(() => t)) : B(t)
                    })
                }
                class P4 {
                    constructor(t) {
                        this.router = t,
                        this.currentNavigation = null
                    }
                    setupNavigations(t) {
                        const e = this.router.events;
                        return t.pipe(ve(i => 0 !== i.id), j(i => ({
                                    ...i,
                                    extractedUrl: this.router.urlHandlingStrategy.extract(i.rawUrl)
                                })), Qt(i => {
                                let r = !1,
                                o = !1;
                                return B(i).pipe(Je(s => {
                                        this.currentNavigation = {
                                            id: s.id,
                                            initialUrl: s.rawUrl,
                                            extractedUrl: s.extractedUrl,
                                            trigger: s.source,
                                            extras: s.extras,
                                            previousNavigation: this.router.lastSuccessfulNavigation ? {
                                                ...this.router.lastSuccessfulNavigation,
                                                previousNavigation: null
                                            }
                                             : null
                                        }
                                    }), Qt(s => {
                                        const a = this.router.browserUrlTree.toString(),
                                        c = !this.router.navigated || s.extractedUrl.toString() !== a || a !== this.router.currentUrlTree.toString();
                                        if (("reload" === this.router.onSameUrlNavigation || c) && this.router.urlHandlingStrategy.shouldProcessUrl(s.rawUrl))
                                            return lM(s.source) && (this.router.browserUrlTree = s.extractedUrl), B(s).pipe(Qt(d => {
                                                    const u = this.router.transitions.getValue();
                                                    return e.next(new Ng(d.id, this.router.serializeUrl(d.extractedUrl), d.source, d.restoredState)),
                                                    u !== this.router.transitions.getValue() ? Xn : Promise.resolve(d)
                                                }), function v4(n, t, e, i) {
                                                return Qt(r => function _4(n, t, e, i, r) {
                                                    return new b4(n, t, e, i, r).apply()
                                                }
                                                    (n, t, e, r.extractedUrl, i).pipe(j(o => ({
                                                                ...r,
                                                                urlAfterRedirects: o
                                                            }))))
                                            }
                                                (this.router.ngModule.injector, this.router.configLoader, this.router.urlSerializer, this.router.config), Je(d => {
                                                    this.currentNavigation = {
                                                        ...this.currentNavigation,
                                                        finalUrl: d.urlAfterRedirects
                                                    },
                                                    i.urlAfterRedirects = d.urlAfterRedirects
                                                }), function T4(n, t, e, i, r) {
                                                return ut(o => function C4(n, t, e, i, r, o, s = "emptyOnly") {
                                                    return new D4(n, t, e, i, r, s, o).recognize().pipe(Qt(a => null === a ? function w4(n) {
                                                            return new Ae(t => t.error(n))
                                                        }
                                                            (new y4) : B(a)))
                                                }
                                                    (n, t, e, o.urlAfterRedirects, i.serialize(o.urlAfterRedirects), i, r).pipe(j(s => ({
                                                                ...o,
                                                                targetSnapshot: s
                                                            }))))
                                            }
                                                (this.router.ngModule.injector, this.router.rootComponentType, this.router.config, this.router.urlSerializer, this.router.paramsInheritanceStrategy), Je(d => {
                                                    if (i.targetSnapshot = d.targetSnapshot, "eager" === this.router.urlUpdateStrategy) {
                                                        if (!d.extras.skipLocationChange) {
                                                            const h = this.router.urlHandlingStrategy.merge(d.urlAfterRedirects, d.rawUrl);
                                                            this.router.setBrowserUrl(h, d)
                                                        }
                                                        this.router.browserUrlTree = d.urlAfterRedirects
                                                    }
                                                    const u = new v8(d.id, this.router.serializeUrl(d.extractedUrl), this.router.serializeUrl(d.urlAfterRedirects), d.targetSnapshot);
                                                    e.next(u)
                                                }));
                                        if (c && this.router.rawUrlTree && this.router.urlHandlingStrategy.shouldProcessUrl(this.router.rawUrlTree)) {
                                            const {
                                                id: u,
                                                extractedUrl: h,
                                                source: f,
                                                restoredState: m,
                                                extras: _
                                            } = s,
                                            C = new Ng(u, this.router.serializeUrl(h), f, m);
                                            e.next(C);
                                            const D = LS(h, this.router.rootComponentType).snapshot;
                                            return B(i = {
                                                    ...s,
                                                    targetSnapshot: D,
                                                    urlAfterRedirects: h,
                                                    extras: {
                                                        ..._,
                                                        skipLocationChange: !1,
                                                        replaceUrl: !1
                                                    }
                                                })
                                        }
                                        return this.router.rawUrlTree = s.rawUrl,
                                        s.resolve(null),
                                        Xn
                                    }), Je(s => {
                                        const a = new y8(s.id, this.router.serializeUrl(s.extractedUrl), this.router.serializeUrl(s.urlAfterRedirects), s.targetSnapshot);
                                        this.router.triggerEvent(a)
                                    }), j(s => i = {
                                            ...s,
                                            guards: z8(s.targetSnapshot, s.currentSnapshot, this.router.rootContexts)
                                        }), function t4(n, t) {
                                    return ut(e => {
                                        const {
                                            targetSnapshot: i,
                                            currentSnapshot: r,
                                            guards: {
                                                canActivateChecks: o,
                                                canDeactivateChecks: s
                                            }
                                        } = e;
                                        return 0 === s.length && 0 === o.length ? B({
                                            ...e,
                                            guardsResult: !0
                                        }) : function n4(n, t, e, i) {
                                            return it(n).pipe(ut(r => function c4(n, t, e, i, r) {
                                                    const o = t && t.routeConfig ? t.routeConfig.canDeactivate : null;
                                                    return o && 0 !== o.length ? B(o.map(a => {
                                                            const c = uc(t) ?? r,
                                                            l = ys(a, c);
                                                            return fr(function Q8(n) {
                                                                return n && pc(n.canDeactivate)
                                                            }
                                                                (l) ? l.canDeactivate(n, t, e, i) : c.runInContext(() => l(n, t, e, i))).pipe(hr())
                                                        })).pipe(ws()) : B(!0)
                                                }
                                                    (r.component, r.route, e, t, i)), hr(r => !0 !== r, !0))
                                        }
                                        (s, i, r, n).pipe(ut(a => a && function Y8(n) {
                                                return "boolean" == typeof n
                                            }
                                                (a) ? function i4(n, t, e, i) {
                                                return it(t).pipe(dr(r => ls(function o4(n, t) {
                                                            return null !== n && t && t(new S8(n)),
                                                            B(!0)
                                                        }
                                                            (r.route.parent, i), function r4(n, t) {
                                                            return null !== n && t && t(new T8(n)),
                                                            B(!0)
                                                        }
                                                            (r.route, i), function a4(n, t, e) {
                                                            const i = t[t.length - 1],
                                                            o = t.slice(0, t.length - 1).reverse().map(s => function G8(n) {
                                                                const t = n.routeConfig ? n.routeConfig.canActivateChild : null;
                                                                return t && 0 !== t.length ? {
                                                                    node: n,
                                                                    guards: t
                                                                }
                                                                 : null
                                                            }
                                                                    (s)).filter(s => null !== s).map(s => fs(() => B(s.guards.map(c => {
                                                                                const l = uc(s.node) ?? e,
                                                                                d = ys(c, l);
                                                                                return fr(function X8(n) {
                                                                                    return n && pc(n.canActivateChild)
                                                                                }
                                                                                    (d) ? d.canActivateChild(i, n) : l.runInContext(() => d(i, n))).pipe(hr())
                                                                            })).pipe(ws())));
                                                            return B(o).pipe(ws())
                                                        }
                                                            (n, r.path, e), function s4(n, t, e) {
                                                            const i = t.routeConfig ? t.routeConfig.canActivate : null;
                                                            if (!i || 0 === i.length)
                                                                return B(!0);
                                                            const r = i.map(o => fs(() => {
                                                                        const s = uc(t) ?? e,
                                                                        a = ys(o, s);
                                                                        return fr(function Z8(n) {
                                                                            return n && pc(n.canActivate)
                                                                        }
                                                                            (a) ? a.canActivate(t, n) : s.runInContext(() => a(t, n))).pipe(hr())
                                                                    }));
                                                            return B(r).pipe(ws())
                                                        }
                                                            (n, r.route, e))), hr(r => !0 !== r, !0))
                                            }
                                                (i, o, n, t) : B(a)), j(a => ({
                                                    ...e,
                                                    guardsResult: a
                                                })))
                                    })
                                }
                                    (this.router.ngModule.injector, s => this.router.triggerEvent(s)), Je(s => {
                                        if (i.guardsResult = s.guardsResult, no(s.guardsResult))
                                            throw HS(0, s.guardsResult);
                                        const a = new w8(s.id, this.router.serializeUrl(s.extractedUrl), this.router.serializeUrl(s.urlAfterRedirects), s.targetSnapshot, !!s.guardsResult);
                                        this.router.triggerEvent(a)
                                    }), ve(s => !!s.guardsResult || (this.router.restoreHistory(s), this.router.cancelNavigationTransition(s, "", 3), !1)), Kg(s => {
                                        if (s.guards.canActivateChecks.length)
                                            return B(s).pipe(Je(a => {
                                                    const c = new C8(a.id, this.router.serializeUrl(a.extractedUrl), this.router.serializeUrl(a.urlAfterRedirects), a.targetSnapshot);
                                                    this.router.triggerEvent(c)
                                                }), Qt(a => {
                                                    let c = !1;
                                                    return B(a).pipe(function A4(n, t) {
                                                        return ut(e => {
                                                            const {
                                                                targetSnapshot: i,
                                                                guards: {
                                                                    canActivateChecks: r
                                                                }
                                                            } = e;
                                                            if (!r.length)
                                                                return B(e);
                                                            let o = 0;
                                                            return it(r).pipe(dr(s => function k4(n, t, e, i) {
                                                                    const r = n.routeConfig,
                                                                    o = n._resolve;
                                                                    return void 0 !== r?.title && !aM(r) && (o[ic] = r.title),
                                                                    function I4(n, t, e, i) {
                                                                        const r = function O4(n) {
                                                                            return [...Object.keys(n), ...Object.getOwnPropertySymbols(n)]
                                                                        }
                                                                        (n);
                                                                        if (0 === r.length)
                                                                            return B({});
                                                                        const o = {};
                                                                        return it(r).pipe(ut(s => function R4(n, t, e, i) {
                                                                                const r = uc(t) ?? i,
                                                                                o = ys(n, r);
                                                                                return fr(o.resolve ? o.resolve(t, e) : r.runInContext(() => o(t, e)))
                                                                            }
                                                                                (n[s], t, e, i).pipe(hr(), Je(a => {
                                                                                        o[s] = a
                                                                                    }))), Ag(1), Zd(o), Ni(s => Wg(s) ? Xn : Xr(s)))
                                                                    }
                                                                    (o, n, t, i).pipe(j(s => (n._resolvedData = s, n.data = VS(n, e).resolve, r && aM(r) && (n.data[ic] = r.title), null)))
                                                                }
                                                                    (s.route, i, n, t)), Je(() => o++), Ag(1), ut(s => o === r.length ? B(e) : Xn))
                                                        })
                                                    }
                                                        (this.router.paramsInheritanceStrategy, this.router.ngModule.injector), Je({
                                                            next: () => c = !0,
                                                            complete: () => {
                                                                c || (this.router.restoreHistory(a), this.router.cancelNavigationTransition(a, "", 2))
                                                            }
                                                        }))
                                                }), Je(a => {
                                                    const c = new D8(a.id, this.router.serializeUrl(a.extractedUrl), this.router.serializeUrl(a.urlAfterRedirects), a.targetSnapshot);
                                                    this.router.triggerEvent(c)
                                                }))
                                    }), Kg(s => {
                                        const a = c => {
                                            const l = [];
                                            c.routeConfig?.loadComponent && !c.routeConfig._loadedComponent && l.push(this.router.configLoader.loadComponent(c.routeConfig).pipe(Je(d => {
                                                        c.component = d
                                                    }), j(() => {})));
                                            for (const d of c.children)
                                                l.push(...a(d));
                                            return l
                                        };
                                        return Jm(a(s.targetSnapshot.root)).pipe(Kd(), Ge(1))
                                    }), Kg(() => this.router.afterPreactivation()), j(s => {
                                        const a = function R8(n, t, e) {
                                            const i = lc(n, t._root, e ? e._root : void 0);
                                            return new NS(i, t)
                                        }
                                        (this.router.routeReuseStrategy, s.targetSnapshot, s.currentRouterState);
                                        return i = {
                                            ...s,
                                            targetRouterState: a
                                        }
                                    }), Je(s => {
                                        this.router.currentUrlTree = s.urlAfterRedirects,
                                        this.router.rawUrlTree = this.router.urlHandlingStrategy.merge(s.urlAfterRedirects, s.rawUrl),
                                        this.router.routerState = s.targetRouterState,
                                        "deferred" === this.router.urlUpdateStrategy && (s.extras.skipLocationChange || this.router.setBrowserUrl(this.router.rawUrlTree, s), this.router.browserUrlTree = s.urlAfterRedirects)
                                    }), ((n, t, e) => j(i => (new $8(t, i.targetRouterState, i.currentRouterState, e).activate(n), i)))(this.router.rootContexts, this.router.routeReuseStrategy, s => this.router.triggerEvent(s)), Je({
                                        next() {
                                            r = !0
                                        },
                                        complete() {
                                            r = !0
                                        }
                                    }), Bd(() => {
                                        r || o || this.router.cancelNavigationTransition(i, "", 1),
                                        this.currentNavigation?.id === i.id && (this.currentNavigation = null)
                                    }), Ni(s => {
                                        if (o = !0, zS(s)) {
                                            $S(s) || (this.router.navigated = !0, this.router.restoreHistory(i, !0));
                                            const a = new ru(i.id, this.router.serializeUrl(i.extractedUrl), s.message, s.cancellationCode);
                                            if (e.next(a), $S(s)) {
                                                const c = this.router.urlHandlingStrategy.merge(s.url, this.router.rawUrlTree),
                                                l = {
                                                    skipLocationChange: i.extras.skipLocationChange,
                                                    replaceUrl: "eager" === this.router.urlUpdateStrategy || lM(i.source)
                                                };
                                                this.router.scheduleNavigation(c, "imperative", null, l, {
                                                    resolve: i.resolve,
                                                    reject: i.reject,
                                                    promise: i.promise
                                                })
                                            } else
                                                i.resolve(!1)
                                        } else {
                                            this.router.restoreHistory(i, !0);
                                            const a = new RS(i.id, this.router.serializeUrl(i.extractedUrl), s, i.targetSnapshot ?? void 0);
                                            e.next(a);
                                            try {
                                                i.resolve(this.router.errorHandler(s))
                                            } catch (c) {
                                                i.reject(c)
                                            }
                                        }
                                        return Xn
                                    }))
                            }))
                    }
                }
                function lM(n) {
                    return "imperative" !== n
                }
                let dM = (() => {
                    class n {
                        buildTitle(e) {
                            let i,
                            r = e.root;
                            for (; void 0 !== r; )
                                i = this.getResolvedTitleForRoute(r) ?? i, r = r.children.find(o => o.outlet === ae);
                            return i
                        }
                        getResolvedTitleForRoute(e) {
                            return e.data[ic]
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return ce(F4)
                        },
                        providedIn: "root"
                    }),
                    n
                })(),
                F4 = (() => {
                    class n extends dM {
                        constructor(e) {
                            super(),
                            this.title = e
                        }
                        updateTitle(e) {
                            const i = this.buildTitle(e);
                            void 0 !== i && this.title.setTitle(i)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(RD))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })(),
                N4 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return ce(V4)
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                class L4 {
                    shouldDetach(t) {
                        return !1
                    }
                    store(t, e) {}
                    shouldAttach(t) {
                        return !1
                    }
                    retrieve(t) {
                        return null
                    }
                    shouldReuseRoute(t, e) {
                        return t.routeConfig === e.routeConfig
                    }
                }
                let V4 = (() => {
                    class n extends L4 {}
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const fu = new T("", {
                    providedIn: "root",
                    factory: () => ({})
                }),
                Cs = new T("ROUTES");
                let Zg = (() => {
                    class n {
                        constructor(e, i) {
                            this.injector = e,
                            this.compiler = i,
                            this.componentLoaders = new WeakMap,
                            this.childrenLoaders = new WeakMap
                        }
                        loadComponent(e) {
                            if (this.componentLoaders.get(e))
                                return this.componentLoaders.get(e);
                            if (e._loadedComponent)
                                return B(e._loadedComponent);
                            this.onLoadStartListener && this.onLoadStartListener(e);
                            const i = fr(e.loadComponent()).pipe(j(hM), Je(o => {
                                        this.onLoadEndListener && this.onLoadEndListener(e),
                                        e._loadedComponent = o
                                    }), Bd(() => {
                                        this.componentLoaders.delete(e)
                                    })),
                            r = new Tg(i, () => new K).pipe(Mg());
                            return this.componentLoaders.set(e, r),
                            r
                        }
                        loadChildren(e, i) {
                            if (this.childrenLoaders.get(i))
                                return this.childrenLoaders.get(i);
                            if (i._loadedRoutes)
                                return B({
                                    routes: i._loadedRoutes,
                                    injector: i._loadedInjector
                                });
                            this.onLoadStartListener && this.onLoadStartListener(i);
                            const o = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(j(a => {
                                        this.onLoadEndListener && this.onLoadEndListener(i);
                                        let c,
                                        l,
                                        d = !1;
                                        Array.isArray(a) ? l = a : (c = a.create(e).injector, l = gS(c.get(Cs, [], W.Self | W.Optional)));
                                        return {
                                            routes: l.map(Gg),
                                            injector: c
                                        }
                                    }), Bd(() => {
                                        this.childrenLoaders.delete(i)
                                    })),
                            s = new Tg(o, () => new K).pipe(Mg());
                            return this.childrenLoaders.set(i, s),
                            s
                        }
                        loadModuleFactoryOrRoutes(e) {
                            return fr(e()).pipe(j(hM), ut(r => r instanceof Cw || Array.isArray(r) ? B(r) : it(this.compiler.compileModuleAsync(r))))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(rt), v(Np))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function hM(n) {
                    return function H4(n) {
                        return n && "object" == typeof n && "default" in n
                    }
                    (n) ? n.default : n
                }
                let U4 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return ce($4)
                        },
                        providedIn: "root"
                    }),
                    n
                })(),
                $4 = (() => {
                    class n {
                        shouldProcessUrl(e) {
                            return !0
                        }
                        extract(e) {
                            return e
                        }
                        merge(e, i) {
                            return e
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                function z4(n) {
                    throw n
                }
                function G4(n, t, e) {
                    return t.parse("/")
                }
                const W4 = {
                    paths: "exact",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "exact"
                },
                q4 = {
                    paths: "subset",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "subset"
                };
                function pM() {
                    const n = ce(DS),
                    t = ce(dc),
                    e = ce(Sa),
                    i = ce(rt),
                    r = ce(Np),
                    o = ce(Cs, {
                        optional: !0
                    }) ?? [],
                    s = ce(fu, {
                        optional: !0
                    }) ?? {},
                    a = new It(null, n, t, e, i, r, gS(o));
                    return function Y4(n, t) {
                        n.errorHandler && (t.errorHandler = n.errorHandler),
                        n.malformedUriErrorHandler && (t.malformedUriErrorHandler = n.malformedUriErrorHandler),
                        n.onSameUrlNavigation && (t.onSameUrlNavigation = n.onSameUrlNavigation),
                        n.paramsInheritanceStrategy && (t.paramsInheritanceStrategy = n.paramsInheritanceStrategy),
                        n.urlUpdateStrategy && (t.urlUpdateStrategy = n.urlUpdateStrategy),
                        n.canceledNavigationResolution && (t.canceledNavigationResolution = n.canceledNavigationResolution)
                    }
                    (s, a),
                    a
                }
                let It = (() => {
                    class n {
                        constructor(e, i, r, o, s, a, c) {
                            this.rootComponentType = e,
                            this.urlSerializer = i,
                            this.rootContexts = r,
                            this.location = o,
                            this.config = c,
                            this.lastSuccessfulNavigation = null,
                            this.disposed = !1,
                            this.navigationId = 0,
                            this.currentPageId = 0,
                            this.isNgZoneEnabled = !1,
                            this.events = new K,
                            this.errorHandler = z4,
                            this.malformedUriErrorHandler = G4,
                            this.navigated = !1,
                            this.lastSuccessfulId = -1,
                            this.afterPreactivation = () => B(void 0),
                            this.urlHandlingStrategy = ce(U4),
                            this.routeReuseStrategy = ce(N4),
                            this.titleStrategy = ce(dM),
                            this.onSameUrlNavigation = "ignore",
                            this.paramsInheritanceStrategy = "emptyOnly",
                            this.urlUpdateStrategy = "deferred",
                            this.canceledNavigationResolution = "replace",
                            this.navigationTransitions = new P4(this),
                            this.configLoader = s.get(Zg),
                            this.configLoader.onLoadEndListener = h => this.triggerEvent(new E8(h)),
                            this.configLoader.onLoadStartListener = h => this.triggerEvent(new x8(h)),
                            this.ngModule = s.get(Br),
                            this.console = s.get(aN);
                            const u = s.get(X);
                            this.isNgZoneEnabled = u instanceof X && X.isInAngularZone(),
                            this.resetConfig(c),
                            this.currentUrlTree = new eo,
                            this.rawUrlTree = this.currentUrlTree,
                            this.browserUrlTree = this.currentUrlTree,
                            this.routerState = LS(this.currentUrlTree, this.rootComponentType),
                            this.transitions = new Oe({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                                urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: "imperative",
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: []
                                },
                                guardsResult: null
                            }),
                            this.navigations = this.navigationTransitions.setupNavigations(this.transitions),
                            this.processNavigations()
                        }
                        get browserPageId() {
                            return this.location.getState()?. \u0275routerPageId
                        }
                        resetRootComponentType(e) {
                            this.rootComponentType = e,
                            this.routerState.root.component = this.rootComponentType
                        }
                        setTransition(e) {
                            this.transitions.next({
                                ...this.transitions.value,
                                ...e
                            })
                        }
                        initialNavigation() {
                            this.setUpLocationChangeListener(),
                            0 === this.navigationId && this.navigateByUrl(this.location.path(!0), {
                                replaceUrl: !0
                            })
                        }
                        setUpLocationChangeListener() {
                            this.locationSubscription || (this.locationSubscription = this.location.subscribe(e => {
                                    const i = "popstate" === e.type ? "popstate" : "hashchange";
                                    "popstate" === i && setTimeout(() => {
                                        const r = {
                                            replaceUrl: !0
                                        },
                                        o = e.state?.navigationId ? e.state : null;
                                        if (e.state) {
                                            const a = {
                                                ...e.state
                                            };
                                            delete a.navigationId,
                                            delete a. \u0275routerPageId,
                                            0 !== Object.keys(a).length && (r.state = a)
                                        }
                                        const s = this.parseUrl(e.url);
                                        this.scheduleNavigation(s, i, o, r)
                                    }, 0)
                                }))
                        }
                        get url() {
                            return this.serializeUrl(this.currentUrlTree)
                        }
                        getCurrentNavigation() {
                            return this.navigationTransitions.currentNavigation
                        }
                        triggerEvent(e) {
                            this.events.next(e)
                        }
                        resetConfig(e) {
                            this.config = e.map(Gg),
                            this.navigated = !1,
                            this.lastSuccessfulId = -1
                        }
                        ngOnDestroy() {
                            this.dispose()
                        }
                        dispose() {
                            this.transitions.complete(),
                            this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0),
                            this.disposed = !0
                        }
                        createUrlTree(e, i = {}) {
                            const {
                                relativeTo: r,
                                queryParams: o,
                                fragment: s,
                                queryParamsHandling: a,
                                preserveFragment: c
                            } = i,
                            l = r || this.routerState.root,
                            d = c ? this.currentUrlTree.fragment : s;
                            let u = null;
                            switch (a) {
                            case "merge":
                                u = {
                                    ...this.currentUrlTree.queryParams,
                                    ...o
                                };
                                break;
                            case "preserve":
                                u = this.currentUrlTree.queryParams;
                                break;
                            default:
                                u = o || null
                            }
                            return null !== u && (u = this.removeEmptyProps(u)),
                            f8(l, this.currentUrlTree, e, u, d ?? null)
                        }
                        navigateByUrl(e, i = {
                                skipLocationChange: !1
                            }) {
                            const r = no(e) ? e : this.parseUrl(e),
                            o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
                            return this.scheduleNavigation(o, "imperative", null, i)
                        }
                        navigate(e, i = {
                                skipLocationChange: !1
                            }) {
                            return function K4(n) {
                                for (let t = 0; t < n.length; t++) {
                                    if (null == n[t])
                                        throw new E(4008, !1)
                                }
                            }
                            (e),
                            this.navigateByUrl(this.createUrlTree(e, i), i)
                        }
                        serializeUrl(e) {
                            return this.urlSerializer.serialize(e)
                        }
                        parseUrl(e) {
                            let i;
                            try {
                                i = this.urlSerializer.parse(e)
                            } catch (r) {
                                i = this.malformedUriErrorHandler(r, this.urlSerializer, e)
                            }
                            return i
                        }
                        isActive(e, i) {
                            let r;
                            if (r = !0 === i ? {
                                    ...W4
                                }
                                 : !1 === i ? {
                                ...q4
                            }
                                 : i, no(e))
                                return vS(this.currentUrlTree, e, r);
                            const o = this.parseUrl(e);
                            return vS(this.currentUrlTree, o, r)
                        }
                        removeEmptyProps(e) {
                            return Object.keys(e).reduce((i, r) => {
                                const o = e[r];
                                return null != o && (i[r] = o),
                                i
                            }, {})
                        }
                        processNavigations() {
                            this.navigations.subscribe(e => {
                                this.navigated = !0,
                                this.lastSuccessfulId = e.id,
                                this.currentPageId = e.targetPageId,
                                this.events.next(new io(e.id, this.serializeUrl(e.extractedUrl), this.serializeUrl(this.currentUrlTree))),
                                this.lastSuccessfulNavigation = this.getCurrentNavigation(),
                                this.titleStrategy?.updateTitle(this.routerState.snapshot),
                                e.resolve(!0)
                            }, e => {
                                this.console.warn(`Unhandled Navigation Error: ${e}`)
                            })
                        }
                        scheduleNavigation(e, i, r, o, s) {
                            if (this.disposed)
                                return Promise.resolve(!1);
                            let a,
                            c,
                            l;
                            s ? (a = s.resolve, c = s.reject, l = s.promise) : l = new Promise((h, f) => {
                                a = h,
                                c = f
                            });
                            const d = ++this.navigationId;
                            let u;
                            return "computed" === this.canceledNavigationResolution ? (0 === this.currentPageId && (r = this.location.getState()), u = r && r. \u0275routerPageId ? r. \u0275routerPageId : o.replaceUrl || o.skipLocationChange ? this.browserPageId ?? 0 : (this.browserPageId ?? 0) + 1) : u = 0,
                            this.setTransition({
                                id: d,
                                targetPageId: u,
                                source: i,
                                restoredState: r,
                                currentUrlTree: this.currentUrlTree,
                                rawUrl: e,
                                extras: o,
                                resolve: a,
                                reject: c,
                                promise: l,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState
                            }),
                            l.catch(h => Promise.reject(h))
                        }
                        setBrowserUrl(e, i) {
                            const r = this.urlSerializer.serialize(e),
                            o = {
                                ...i.extras.state,
                                ...this.generateNgRouterState(i.id, i.targetPageId)
                            };
                            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl ? this.location.replaceState(r, "", o) : this.location.go(r, "", o)
                        }
                        restoreHistory(e, i = !1) {
                            if ("computed" === this.canceledNavigationResolution) {
                                const r = this.currentPageId - e.targetPageId;
                                "popstate" !== e.source && "eager" !== this.urlUpdateStrategy && this.currentUrlTree !== this.getCurrentNavigation()?.finalUrl || 0 === r ? this.currentUrlTree === this.getCurrentNavigation()?.finalUrl && 0 === r && (this.resetState(e), this.browserUrlTree = e.currentUrlTree, this.resetUrlToCurrentUrlTree()) : this.location.historyGo(r)
                            } else
                                "replace" === this.canceledNavigationResolution && (i && this.resetState(e), this.resetUrlToCurrentUrlTree())
                        }
                        resetState(e) {
                            this.routerState = e.currentRouterState,
                            this.currentUrlTree = e.currentUrlTree,
                            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, e.rawUrl)
                        }
                        resetUrlToCurrentUrlTree() {
                            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId))
                        }
                        cancelNavigationTransition(e, i, r) {
                            const o = new ru(e.id, this.serializeUrl(e.extractedUrl), i, r);
                            this.triggerEvent(o),
                            e.resolve(!1)
                        }
                        generateNgRouterState(e, i) {
                            return "computed" === this.canceledNavigationResolution ? {
                                navigationId: e,
                                 \u0275routerPageId: i
                            }
                             : {
                                navigationId: e
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: function () {
                            return pM()
                        },
                        providedIn: "root"
                    }),
                    n
                })();
                class mM {}
                let Q4 = (() => {
                    class n {
                        constructor(e, i, r, o, s) {
                            this.router = e,
                            this.injector = r,
                            this.preloadingStrategy = o,
                            this.loader = s
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events.pipe(ve(e => e instanceof io), dr(() => this.preload())).subscribe(() => {})
                        }
                        preload() {
                            return this.processRoutes(this.injector, this.router.config)
                        }
                        ngOnDestroy() {
                            this.subscription && this.subscription.unsubscribe()
                        }
                        processRoutes(e, i) {
                            const r = [];
                            for (const o of i) {
                                o.providers && !o._injector && (o._injector = Vl(o.providers, e, `Route: ${o.path}`));
                                const s = o._injector ?? e,
                                a = o._loadedInjector ?? s;
                                o.loadChildren && !o._loadedRoutes && void 0 === o.canLoad || o.loadComponent && !o._loadedComponent ? r.push(this.preloadConfig(s, o)) : (o.children || o._loadedRoutes) && r.push(this.processRoutes(a, o.children ?? o._loadedRoutes))
                            }
                            return it(r).pipe(fo())
                        }
                        preloadConfig(e, i) {
                            return this.preloadingStrategy.preload(i, () => {
                                let r;
                                r = i.loadChildren && void 0 === i.canLoad ? this.loader.loadChildren(e, i) : B(null);
                                const o = r.pipe(ut(s => null === s ? B(void 0) : (i._loadedRoutes = s.routes, i._loadedInjector = s.injector, this.processRoutes(s.injector ?? e, s.routes))));
                                return i.loadComponent && !i._loadedComponent ? it([o, this.loader.loadComponent(i)]).pipe(fo()) : o
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(It), v(Np), v(xi), v(mM), v(Zg))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                const Qg = new T("");
                let gM = (() => {
                    class n {
                        constructor(e, i, r, o = {}) {
                            this.router = e,
                            this.viewportScroller = i,
                            this.zone = r,
                            this.options = o,
                            this.lastId = 0,
                            this.lastSource = "imperative",
                            this.restoredId = 0,
                            this.store = {},
                            o.scrollPositionRestoration = o.scrollPositionRestoration || "disabled",
                            o.anchorScrolling = o.anchorScrolling || "disabled"
                        }
                        init() {
                            "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"),
                            this.routerEventsSubscription = this.createScrollEvents(),
                            this.scrollEventsSubscription = this.consumeScrollEvents()
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe(e => {
                                e instanceof Ng ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = e.navigationTrigger, this.restoredId = e.restoredState ? e.restoredState.navigationId : 0) : e instanceof io && (this.lastId = e.id, this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment))
                            })
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe(e => {
                                e instanceof PS && (e.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(e.position) : e.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(e.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0]))
                            })
                        }
                        scheduleScrollEvent(e, i) {
                            this.zone.runOutsideAngular(() => {
                                setTimeout(() => {
                                    this.zone.run(() => {
                                        this.router.triggerEvent(new PS(e, "popstate" === this.lastSource ? this.store[this.restoredId] : null, i))
                                    })
                                }, 0)
                            })
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                            this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                function xs(n, t) {
                    return {
                         \u0275kind: n,
                         \u0275providers: t
                    }
                }
                function bM() {
                    const n = ce(rt);
                    return t => {
                        const e = n.get(Hr);
                        if (t !== e.components[0])
                            return;
                        const i = n.get(It),
                        r = n.get(vM);
                        1 === n.get(e_) && i.initialNavigation(),
                        n.get(yM, null, W.Optional)?.setUpPreloading(),
                        n.get(Qg, null, W.Optional)?.init(),
                        i.resetRootComponentType(e.componentTypes[0]),
                        r.closed || (r.next(), r.unsubscribe())
                    }
                }
                const vM = new T("", {
                    factory: () => new K
                }),
                e_ = new T("", {
                    providedIn: "root",
                    factory: () => 1
                });
                const yM = new T("");
                function r3(n) {
                    return xs(0, [{
                                provide: yM,
                                useExisting: Q4
                            }, {
                                provide: mM,
                                useExisting: n
                            }
                        ])
                }
                const wM = new T("ROUTER_FORROOT_GUARD"),
                o3 = [Sa, {
                        provide: DS,
                        useClass: kg
                    }, {
                        provide: It,
                        useFactory: pM
                    }, dc, {
                        provide: ro,
                        useFactory: function _M(n) {
                            return n.routerState.root
                        },
                        deps: [It]
                    }, Zg, []];
                function s3() {
                    return new wC("Router", It)
                }
                let CM = (() => {
                    class n {
                        constructor(e) {}
                        static forRoot(e, i) {
                            return {
                                ngModule: n,
                                providers: [o3, [], {
                                        provide: Cs,
                                        multi: !0,
                                        useValue: e
                                    }, {
                                        provide: wM,
                                        useFactory: d3,
                                        deps: [[It, new Wi, new ko]]
                                    }, {
                                        provide: fu,
                                        useValue: i || {}
                                    }, i?.useHash ? {
                                        provide: $r,
                                        useClass: KN
                                    }
                                     : {
                                        provide: $r,
                                        useClass: zC
                                    }, {
                                        provide: Qg,
                                        useFactory: () => {
                                            const n = ce(It),
                                            t = ce(f2),
                                            e = ce(X),
                                            i = ce(fu);
                                            return i.scrollOffset && t.setOffset(i.scrollOffset),
                                            new gM(n, t, e, i)
                                        }
                                    }, i?.preloadingStrategy ? r3(i.preloadingStrategy). \u0275providers : [], {
                                        provide: wC,
                                        multi: !0,
                                        useFactory: s3
                                    }, i?.initialNavigation ? u3(i) : [], [{
                                            provide: DM,
                                            useFactory: bM
                                        }, {
                                            provide: pC,
                                            multi: !0,
                                            useExisting: DM
                                        }
                                    ]]
                            }
                        }
                        static forChild(e) {
                            return {
                                ngModule: n,
                                providers: [{
                                        provide: Cs,
                                        multi: !0,
                                        useValue: e
                                    }
                                ]
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(wM, 8))
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [$g]
                    }),
                    n
                })();
                function d3(n) {
                    return "guarded"
                }
                function u3(n) {
                    return ["disabled" === n.initialNavigation ? xs(3, [{
                                    provide: xa,
                                    multi: !0,
                                    useFactory: () => {
                                        const t = ce(It);
                                        return () => {
                                            t.setUpLocationChangeListener()
                                        }
                                    }
                                }, {
                                    provide: e_,
                                    useValue: 2
                                }
                            ]). \u0275providers : [], "enabledBlocking" === n.initialNavigation ? xs(2, [{
                                    provide: e_,
                                    useValue: 0
                                }, {
                                    provide: xa,
                                    multi: !0,
                                    deps: [rt],
                                    useFactory: t => {
                                        const e = t.get(qN, Promise.resolve());
                                        return () => e.then(() => new Promise(r => {
                                                const o = t.get(It),
                                                s = t.get(vM);
                                                (function i(r) {
                                                    t.get(It).events.pipe(ve(s => s instanceof io || s instanceof ru || s instanceof RS), j(s => s instanceof io || s instanceof ru && (0 === s.code || 1 === s.code) && null), ve(s => null !== s), Ge(1)).subscribe(() => {
                                                        r()
                                                    })
                                                })(() => {
                                                    r(!0)
                                                }),
                                                o.afterPreactivation = () => (r(!0), s.closed ? B(void 0) : s),
                                                o.initialNavigation()
                                            }))
                                    }
                                }
                            ]). \u0275providers : []]
                }
                const DM = new T(""),
                f3 = ["determinateSpinner"];
                function p3(n, t) {
                    if (1 & n && (Xc(), g(0, "svg", 11), V(1, "circle", 12), b()), 2 & n) {
                        const e = $();
                        Ee("viewBox", e._viewBox()),
                        w(1),
                        oi("stroke-dasharray", e._strokeCircumference(), "px")("stroke-dashoffset", e._strokeCircumference() / 2, "px")("stroke-width", e._circleStrokeWidth(), "%"),
                        Ee("r", e._circleRadius())
                    }
                }
                const m3 = za(class {
                    constructor(n) {
                        this._elementRef = n
                    }
                }, "primary"),
                g3 = new T("mat-progress-spinner-default-options", {
                    providedIn: "root",
                    factory: function _3() {
                        return {
                            diameter: xM
                        }
                    }
                }),
                xM = 100;
                let v3 = (() => {
                    class n extends m3 {
                        constructor(e, i, r) {
                            super(e),
                            this.mode = "mat-spinner" === this._elementRef.nativeElement.nodeName.toLowerCase() ? "indeterminate" : "determinate",
                            this._value = 0,
                            this._diameter = xM,
                            this._noopAnimations = "NoopAnimations" === i && !!r && !r._forceAnimations,
                            r && (r.color && (this.color = this.defaultColor = r.color), r.diameter && (this.diameter = r.diameter), r.strokeWidth && (this.strokeWidth = r.strokeWidth))
                        }
                        get value() {
                            return "determinate" === this.mode ? this._value : 0
                        }
                        set value(e) {
                            this._value = Math.max(0, Math.min(100, qn(e)))
                        }
                        get diameter() {
                            return this._diameter
                        }
                        set diameter(e) {
                            this._diameter = qn(e)
                        }
                        get strokeWidth() {
                            return this._strokeWidth ?? this.diameter / 10
                        }
                        set strokeWidth(e) {
                            this._strokeWidth = qn(e)
                        }
                        _circleRadius() {
                            return (this.diameter - 10) / 2
                        }
                        _viewBox() {
                            const e = 2 * this._circleRadius() + this.strokeWidth;
                            return `0 0 ${e} ${e}`
                        }
                        _strokeCircumference() {
                            return 2 * Math.PI * this._circleRadius()
                        }
                        _strokeDashOffset() {
                            return "determinate" === this.mode ? this._strokeCircumference() * (100 - this._value) / 100 : null
                        }
                        _circleStrokeWidth() {
                            return this.strokeWidth / this.diameter * 100
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(yt, 8), p(g3))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-progress-spinner"], ["mat-spinner"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(f3, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._determinateCircle = r.first)
                            }
                        },
                        hostAttrs: ["role", "progressbar", "tabindex", "-1", 1, "mat-mdc-progress-spinner", "mdc-circular-progress"],
                        hostVars: 12,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("aria-valuemin", 0)("aria-valuemax", 100)("aria-valuenow", "determinate" === i.mode ? i.value : null)("mode", i.mode), oi("width", i.diameter, "px")("height", i.diameter, "px"), be("_mat-animation-noopable", i._noopAnimations)("mdc-circular-progress--indeterminate", "indeterminate" === i.mode))
                        },
                        inputs: {
                            color: "color",
                            mode: "mode",
                            value: "value",
                            diameter: "diameter",
                            strokeWidth: "strokeWidth"
                        },
                        exportAs: ["matProgressSpinner"],
                        features: [H],
                        decls: 14,
                        vars: 11,
                        consts: [["circle", ""], ["aria-hidden", "true", 1, "mdc-circular-progress__determinate-container"], ["determinateSpinner", ""], ["xmlns", "http://www.w3.org/2000/svg", "focusable", "false", 1, "mdc-circular-progress__determinate-circle-graphic"], ["cx", "50%", "cy", "50%", 1, "mdc-circular-progress__determinate-circle"], ["aria-hidden", "true", 1, "mdc-circular-progress__indeterminate-container"], [1, "mdc-circular-progress__spinner-layer"], [1, "mdc-circular-progress__circle-clipper", "mdc-circular-progress__circle-left"], [3, "ngTemplateOutlet"], [1, "mdc-circular-progress__gap-patch"], [1, "mdc-circular-progress__circle-clipper", "mdc-circular-progress__circle-right"], ["xmlns", "http://www.w3.org/2000/svg", "focusable", "false", 1, "mdc-circular-progress__indeterminate-circle-graphic"], ["cx", "50%", "cy", "50%"]],
                        template: function (e, i) {
                            if (1 & e && (I(0, p3, 2, 8, "ng-template", null, 0, qw), g(2, "div", 1, 2), Xc(), g(4, "svg", 3), V(5, "circle", 4), b()(), function Lh() {
                                    !function fk() {
                                        J.lFrame.currentNamespace = null
                                    }
                                    ()
                                }
                                    (), g(6, "div", 5)(7, "div", 6)(8, "div", 7), ha(9, 8), b(), g(10, "div", 9), ha(11, 8), b(), g(12, "div", 10), ha(13, 8), b()()()), 2 & e) {
                                const r = qo(1);
                                w(4),
                                Ee("viewBox", i._viewBox()),
                                w(1),
                                oi("stroke-dasharray", i._strokeCircumference(), "px")("stroke-dashoffset", i._strokeDashOffset(), "px")("stroke-width", i._circleStrokeWidth(), "%"),
                                Ee("r", i._circleRadius()),
                                w(4),
                                y("ngTemplateOutlet", r),
                                w(2),
                                y("ngTemplateOutlet", r),
                                w(2),
                                y("ngTemplateOutlet", r)
                            }
                        },
                        dependencies: [sD],
                        styles: ["@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, transparent)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                EM = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [is, ct]
                    }),
                    n
                })();
                const pu = ["*"],
                y3 = ["content"];
                function w3(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 2),
                        O("click", function () {
                            return He(e),
                            Ue($()._onBackdropClicked())
                        }),
                        b()
                    }
                    2 & n && be("mat-drawer-shown", $()._isShowingBackdrop())
                }
                function C3(n, t) {
                    1 & n && (g(0, "mat-drawer-content"), ye(1, 2), b())
                }
                const D3 = [[["mat-drawer"]], [["mat-drawer-content"]], "*"],
                x3 = ["mat-drawer", "mat-drawer-content", "*"];
                function E3(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 2),
                        O("click", function () {
                            return He(e),
                            Ue($()._onBackdropClicked())
                        }),
                        b()
                    }
                    2 & n && be("mat-drawer-shown", $()._isShowingBackdrop())
                }
                function S3(n, t) {
                    1 & n && (g(0, "mat-sidenav-content"), ye(1, 2), b())
                }
                const M3 = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
                T3 = ["mat-sidenav", "mat-sidenav-content", "*"],
                SM = {
                    transformDrawer: Qa("transform", [hi("open, open-instant", Xt({
                                    transform: "none",
                                    visibility: "visible"
                                })), hi("void", Xt({
                                    "box-shadow": "none",
                                    visibility: "hidden"
                                })), lr("void => open-instant", cr("0ms")), lr("void <=> open, open-instant => void", cr("400ms cubic-bezier(0.25, 0.8, 0.25, 1)"))])
                },
                k3 = new T("MAT_DRAWER_DEFAULT_AUTOSIZE", {
                    providedIn: "root",
                    factory: function I3() {
                        return !1
                    }
                }),
                t_ = new T("MAT_DRAWER_CONTAINER");
                let mu = (() => {
                    class n extends Ya {
                        constructor(e, i, r, o, s) {
                            super(r, o, s),
                            this._changeDetectorRef = e,
                            this._container = i
                        }
                        ngAfterContentInit() {
                            this._container._contentMarginChanges.subscribe(() => {
                                this._changeDetectorRef.markForCheck()
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p($t), p(Ce(() => TM)), p(se), p(qa), p(X))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-drawer-content"]],
                        hostAttrs: [1, "mat-drawer-content"],
                        hostVars: 4,
                        hostBindings: function (e, i) {
                            2 & e && oi("margin-left", i._container._contentMargins.left, "px")("margin-right", i._container._contentMargins.right, "px")
                        },
                        features: [ge([{
                                        provide: Ya,
                                        useExisting: n
                                    }
                                ]), H],
                        ngContentSelectors: pu,
                        decls: 1,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && (vt(), ye(0))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                MM = (() => {
                    class n {
                        constructor(e, i, r, o, s, a, c, l) {
                            this._elementRef = e,
                            this._focusTrapFactory = i,
                            this._focusMonitor = r,
                            this._platform = o,
                            this._ngZone = s,
                            this._interactivityChecker = a,
                            this._doc = c,
                            this._container = l,
                            this._elementFocusedBeforeDrawerWasOpened = null,
                            this._enableAnimations = !1,
                            this._position = "start",
                            this._mode = "over",
                            this._disableClose = !1,
                            this._opened = !1,
                            this._animationStarted = new K,
                            this._animationEnd = new K,
                            this._animationState = "void",
                            this.openedChange = new re(!0),
                            this._openedStream = this.openedChange.pipe(ve(d => d), j(() => {})),
                            this.openedStart = this._animationStarted.pipe(ve(d => d.fromState !== d.toState && 0 === d.toState.indexOf("open")), Zd(void 0)),
                            this._closedStream = this.openedChange.pipe(ve(d => !d), j(() => {})),
                            this.closedStart = this._animationStarted.pipe(ve(d => d.fromState !== d.toState && "void" === d.toState), Zd(void 0)),
                            this._destroyed = new K,
                            this.onPositionChanged = new re,
                            this._modeChanged = new K,
                            this.openedChange.subscribe(d => {
                                d ? (this._doc && (this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement), this._takeFocus()) : this._isFocusWithinDrawer() && this._restoreFocus(this._openedVia || "program")
                            }),
                            this._ngZone.runOutsideAngular(() => {
                                Pi(this._elementRef.nativeElement, "keydown").pipe(ve(d => 27 === d.keyCode && !this.disableClose && !as(d)), et(this._destroyed)).subscribe(d => this._ngZone.run(() => {
                                        this.close(),
                                        d.stopPropagation(),
                                        d.preventDefault()
                                    }))
                            }),
                            this._animationEnd.pipe(Ha((d, u) => d.fromState === u.fromState && d.toState === u.toState)).subscribe(d => {
                                const {
                                    fromState: u,
                                    toState: h
                                } = d;
                                (0 === h.indexOf("open") && "void" === u || "void" === h && 0 === u.indexOf("open")) && this.openedChange.emit(this._opened)
                            })
                        }
                        get position() {
                            return this._position
                        }
                        set position(e) {
                            (e = "end" === e ? "end" : "start") !== this._position && (this._isAttached && this._updatePositionInParent(e), this._position = e, this.onPositionChanged.emit())
                        }
                        get mode() {
                            return this._mode
                        }
                        set mode(e) {
                            this._mode = e,
                            this._updateFocusTrapState(),
                            this._modeChanged.next()
                        }
                        get disableClose() {
                            return this._disableClose
                        }
                        set disableClose(e) {
                            this._disableClose = Ne(e)
                        }
                        get autoFocus() {
                            return this._autoFocus ?? ("side" === this.mode ? "dialog" : "first-tabbable")
                        }
                        set autoFocus(e) {
                            ("true" === e || "false" === e || null == e) && (e = Ne(e)),
                            this._autoFocus = e
                        }
                        get opened() {
                            return this._opened
                        }
                        set opened(e) {
                            this.toggle(Ne(e))
                        }
                        _forceFocus(e, i) {
                            this._interactivityChecker.isFocusable(e) || (e.tabIndex = -1, this._ngZone.runOutsideAngular(() => {
                                    const r = () => {
                                        e.removeEventListener("blur", r),
                                        e.removeEventListener("mousedown", r),
                                        e.removeAttribute("tabindex")
                                    };
                                    e.addEventListener("blur", r),
                                    e.addEventListener("mousedown", r)
                                })),
                            e.focus(i)
                        }
                        _focusByCssSelector(e, i) {
                            let r = this._elementRef.nativeElement.querySelector(e);
                            r && this._forceFocus(r, i)
                        }
                        _takeFocus() {
                            if (!this._focusTrap)
                                return;
                            const e = this._elementRef.nativeElement;
                            switch (this.autoFocus) {
                            case !1:
                            case "dialog":
                                return;
                            case !0:
                            case "first-tabbable":
                                this._focusTrap.focusInitialElementWhenReady().then(i => {
                                    !i && "function" == typeof this._elementRef.nativeElement.focus && e.focus()
                                });
                                break;
                            case "first-heading":
                                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');
                                break;
                            default:
                                this._focusByCssSelector(this.autoFocus)
                            }
                        }
                        _restoreFocus(e) {
                            "dialog" !== this.autoFocus && (this._elementFocusedBeforeDrawerWasOpened ? this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, e) : this._elementRef.nativeElement.blur(), this._elementFocusedBeforeDrawerWasOpened = null)
                        }
                        _isFocusWithinDrawer() {
                            const e = this._doc.activeElement;
                            return !!e && this._elementRef.nativeElement.contains(e)
                        }
                        ngAfterViewInit() {
                            this._isAttached = !0,
                            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement),
                            this._updateFocusTrapState(),
                            "end" === this._position && this._updatePositionInParent("end")
                        }
                        ngAfterContentChecked() {
                            this._platform.isBrowser && (this._enableAnimations = !0)
                        }
                        ngOnDestroy() {
                            this._focusTrap && this._focusTrap.destroy(),
                            this._anchor?.remove(),
                            this._anchor = null,
                            this._animationStarted.complete(),
                            this._animationEnd.complete(),
                            this._modeChanged.complete(),
                            this._destroyed.next(),
                            this._destroyed.complete()
                        }
                        open(e) {
                            return this.toggle(!0, e)
                        }
                        close() {
                            return this.toggle(!1)
                        }
                        _closeViaBackdropClick() {
                            return this._setOpen(!1, !0, "mouse")
                        }
                        toggle(e = !this.opened, i) {
                            e && i && (this._openedVia = i);
                            const r = this._setOpen(e, !e && this._isFocusWithinDrawer(), this._openedVia || "program");
                            return e || (this._openedVia = null),
                            r
                        }
                        _setOpen(e, i, r) {
                            return this._opened = e,
                            e ? this._animationState = this._enableAnimations ? "open" : "open-instant" : (this._animationState = "void", i && this._restoreFocus(r)),
                            this._updateFocusTrapState(),
                            new Promise(o => {
                                this.openedChange.pipe(Ge(1)).subscribe(s => o(s ? "open" : "close"))
                            })
                        }
                        _getWidth() {
                            return this._elementRef.nativeElement && this._elementRef.nativeElement.offsetWidth || 0
                        }
                        _updateFocusTrapState() {
                            this._focusTrap && (this._focusTrap.enabled = this.opened && "side" !== this.mode)
                        }
                        _updatePositionInParent(e) {
                            const i = this._elementRef.nativeElement,
                            r = i.parentNode;
                            "end" === e ? (this._anchor || (this._anchor = this._doc.createComment("mat-drawer-anchor"), r.insertBefore(this._anchor, i)), r.appendChild(i)) : this._anchor && this._anchor.parentNode.insertBefore(i, this._anchor)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(Md), p(rr), p(_t), p(X), p(Ua), p(Q, 8), p(t_, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-drawer"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(y3, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._content = r.first)
                            }
                        },
                        hostAttrs: ["tabIndex", "-1", 1, "mat-drawer"],
                        hostVars: 12,
                        hostBindings: function (e, i) {
                            1 & e && up("@transform.start", function (o) {
                                return i._animationStarted.next(o)
                            })("@transform.done", function (o) {
                                return i._animationEnd.next(o)
                            }),
                            2 & e && (Ee("align", null), mp("@transform", i._animationState), be("mat-drawer-end", "end" === i.position)("mat-drawer-over", "over" === i.mode)("mat-drawer-push", "push" === i.mode)("mat-drawer-side", "side" === i.mode)("mat-drawer-opened", i.opened))
                        },
                        inputs: {
                            position: "position",
                            mode: "mode",
                            disableClose: "disableClose",
                            autoFocus: "autoFocus",
                            opened: "opened"
                        },
                        outputs: {
                            openedChange: "openedChange",
                            _openedStream: "opened",
                            openedStart: "openedStart",
                            _closedStream: "closed",
                            closedStart: "closedStart",
                            onPositionChanged: "positionChanged"
                        },
                        exportAs: ["matDrawer"],
                        ngContentSelectors: pu,
                        decls: 3,
                        vars: 0,
                        consts: [["cdkScrollable", "", 1, "mat-drawer-inner-container"], ["content", ""]],
                        template: function (e, i) {
                            1 & e && (vt(), g(0, "div", 0, 1), ye(2), b())
                        },
                        dependencies: [Ya],
                        encapsulation: 2,
                        data: {
                            animation: [SM.transformDrawer]
                        },
                        changeDetection: 0
                    }),
                    n
                })(),
                TM = (() => {
                    class n {
                        constructor(e, i, r, o, s, a = !1, c) {
                            this._dir = e,
                            this._element = i,
                            this._ngZone = r,
                            this._changeDetectorRef = o,
                            this._animationMode = c,
                            this._drawers = new jr,
                            this.backdropClick = new re,
                            this._destroyed = new K,
                            this._doCheckSubject = new K,
                            this._contentMargins = {
                                left: null,
                                right: null
                            },
                            this._contentMarginChanges = new K,
                            e && e.change.pipe(et(this._destroyed)).subscribe(() => {
                                this._validateDrawers(),
                                this.updateContentMargins()
                            }),
                            s.change().pipe(et(this._destroyed)).subscribe(() => this.updateContentMargins()),
                            this._autosize = a
                        }
                        get start() {
                            return this._start
                        }
                        get end() {
                            return this._end
                        }
                        get autosize() {
                            return this._autosize
                        }
                        set autosize(e) {
                            this._autosize = Ne(e)
                        }
                        get hasBackdrop() {
                            return this._backdropOverride ?? (!this._start || "side" !== this._start.mode || !this._end || "side" !== this._end.mode)
                        }
                        set hasBackdrop(e) {
                            this._backdropOverride = null == e ? null : Ne(e)
                        }
                        get scrollable() {
                            return this._userContent || this._content
                        }
                        ngAfterContentInit() {
                            this._allDrawers.changes.pipe(ir(this._allDrawers), et(this._destroyed)).subscribe(e => {
                                this._drawers.reset(e.filter(i => !i._container || i._container === this)),
                                this._drawers.notifyOnChanges()
                            }),
                            this._drawers.changes.pipe(ir(null)).subscribe(() => {
                                this._validateDrawers(),
                                this._drawers.forEach(e => {
                                    this._watchDrawerToggle(e),
                                    this._watchDrawerPosition(e),
                                    this._watchDrawerMode(e)
                                }),
                                (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) && this.updateContentMargins(),
                                this._changeDetectorRef.markForCheck()
                            }),
                            this._ngZone.runOutsideAngular(() => {
                                this._doCheckSubject.pipe(ja(10), et(this._destroyed)).subscribe(() => this.updateContentMargins())
                            })
                        }
                        ngOnDestroy() {
                            this._contentMarginChanges.complete(),
                            this._doCheckSubject.complete(),
                            this._drawers.destroy(),
                            this._destroyed.next(),
                            this._destroyed.complete()
                        }
                        open() {
                            this._drawers.forEach(e => e.open())
                        }
                        close() {
                            this._drawers.forEach(e => e.close())
                        }
                        updateContentMargins() {
                            let e = 0,
                            i = 0;
                            if (this._left && this._left.opened)
                                if ("side" == this._left.mode)
                                    e += this._left._getWidth();
                                else if ("push" == this._left.mode) {
                                    const r = this._left._getWidth();
                                    e += r,
                                    i -= r
                                }
                            if (this._right && this._right.opened)
                                if ("side" == this._right.mode)
                                    i += this._right._getWidth();
                                else if ("push" == this._right.mode) {
                                    const r = this._right._getWidth();
                                    i += r,
                                    e -= r
                                }
                            e = e || null,
                            i = i || null,
                            (e !== this._contentMargins.left || i !== this._contentMargins.right) && (this._contentMargins = {
                                    left: e,
                                    right: i
                                }, this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins)))
                        }
                        ngDoCheck() {
                            this._autosize && this._isPushed() && this._ngZone.runOutsideAngular(() => this._doCheckSubject.next())
                        }
                        _watchDrawerToggle(e) {
                            e._animationStarted.pipe(ve(i => i.fromState !== i.toState), et(this._drawers.changes)).subscribe(i => {
                                "open-instant" !== i.toState && "NoopAnimations" !== this._animationMode && this._element.nativeElement.classList.add("mat-drawer-transition"),
                                this.updateContentMargins(),
                                this._changeDetectorRef.markForCheck()
                            }),
                            "side" !== e.mode && e.openedChange.pipe(et(this._drawers.changes)).subscribe(() => this._setContainerClass(e.opened))
                        }
                        _watchDrawerPosition(e) {
                            !e || e.onPositionChanged.pipe(et(this._drawers.changes)).subscribe(() => {
                                this._ngZone.onMicrotaskEmpty.pipe(Ge(1)).subscribe(() => {
                                    this._validateDrawers()
                                })
                            })
                        }
                        _watchDrawerMode(e) {
                            e && e._modeChanged.pipe(et(Cr(this._drawers.changes, this._destroyed))).subscribe(() => {
                                this.updateContentMargins(),
                                this._changeDetectorRef.markForCheck()
                            })
                        }
                        _setContainerClass(e) {
                            const i = this._element.nativeElement.classList,
                            r = "mat-drawer-container-has-open";
                            e ? i.add(r) : i.remove(r)
                        }
                        _validateDrawers() {
                            this._start = this._end = null,
                            this._drawers.forEach(e => {
                                "end" == e.position ? this._end = e : this._start = e
                            }),
                            this._right = this._left = null,
                            this._dir && "rtl" === this._dir.value ? (this._left = this._end, this._right = this._start) : (this._left = this._start, this._right = this._end)
                        }
                        _isPushed() {
                            return this._isDrawerOpen(this._start) && "over" != this._start.mode || this._isDrawerOpen(this._end) && "over" != this._end.mode
                        }
                        _onBackdropClicked() {
                            this.backdropClick.emit(),
                            this._closeModalDrawersViaBackdrop()
                        }
                        _closeModalDrawersViaBackdrop() {
                            [this._start, this._end].filter(e => e && !e.disableClose && this._canHaveBackdrop(e)).forEach(e => e._closeViaBackdropClick())
                        }
                        _isShowingBackdrop() {
                            return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)
                        }
                        _canHaveBackdrop(e) {
                            return "side" !== e.mode || !!this._backdropOverride
                        }
                        _isDrawerOpen(e) {
                            return null != e && e.opened
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(hs, 8), p(se), p(X), p($t), p(ug), p(k3), p(yt, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-drawer-container"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && (ci(r, mu, 5), ci(r, MM, 5)), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._content = o.first),
                                $e(o = ze()) && (i._allDrawers = o)
                            }
                        },
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(mu, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._userContent = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-drawer-container"],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-drawer-container-explicit-backdrop", i._backdropOverride)
                        },
                        inputs: {
                            autosize: "autosize",
                            hasBackdrop: "hasBackdrop"
                        },
                        outputs: {
                            backdropClick: "backdropClick"
                        },
                        exportAs: ["matDrawerContainer"],
                        features: [ge([{
                                        provide: t_,
                                        useExisting: n
                                    }
                                ])],
                        ngContentSelectors: x3,
                        decls: 4,
                        vars: 2,
                        consts: [["class", "mat-drawer-backdrop", 3, "mat-drawer-shown", "click", 4, "ngIf"], [4, "ngIf"], [1, "mat-drawer-backdrop", 3, "click"]],
                        template: function (e, i) {
                            1 & e && (vt(D3), I(0, w3, 1, 2, "div", 0), ye(1), ye(2, 1), I(3, C3, 2, 0, "mat-drawer-content", 1)),
                            2 & e && (y("ngIf", i.hasBackdrop), w(3), y("ngIf", !i._content))
                        },
                        dependencies: [Zt, mu],
                        styles: ['.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                n_ = (() => {
                    class n extends mu {
                        constructor(e, i, r, o, s) {
                            super(e, i, r, o, s)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p($t), p(Ce(() => kM)), p(se), p(qa), p(X))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-sidenav-content"]],
                        hostAttrs: [1, "mat-drawer-content", "mat-sidenav-content"],
                        hostVars: 4,
                        hostBindings: function (e, i) {
                            2 & e && oi("margin-left", i._container._contentMargins.left, "px")("margin-right", i._container._contentMargins.right, "px")
                        },
                        features: [ge([{
                                        provide: Ya,
                                        useExisting: n
                                    }
                                ]), H],
                        ngContentSelectors: pu,
                        decls: 1,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && (vt(), ye(0))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                AM = (() => {
                    class n extends MM {
                        constructor() {
                            super(...arguments),
                            this._fixedInViewport = !1,
                            this._fixedTopGap = 0,
                            this._fixedBottomGap = 0
                        }
                        get fixedInViewport() {
                            return this._fixedInViewport
                        }
                        set fixedInViewport(e) {
                            this._fixedInViewport = Ne(e)
                        }
                        get fixedTopGap() {
                            return this._fixedTopGap
                        }
                        set fixedTopGap(e) {
                            this._fixedTopGap = qn(e)
                        }
                        get fixedBottomGap() {
                            return this._fixedBottomGap
                        }
                        set fixedBottomGap(e) {
                            this._fixedBottomGap = qn(e)
                        }
                    }
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-sidenav"]],
                        hostAttrs: ["tabIndex", "-1", 1, "mat-drawer", "mat-sidenav"],
                        hostVars: 17,
                        hostBindings: function (e, i) {
                            2 & e && (Ee("align", null), oi("top", i.fixedInViewport ? i.fixedTopGap : null, "px")("bottom", i.fixedInViewport ? i.fixedBottomGap : null, "px"), be("mat-drawer-end", "end" === i.position)("mat-drawer-over", "over" === i.mode)("mat-drawer-push", "push" === i.mode)("mat-drawer-side", "side" === i.mode)("mat-drawer-opened", i.opened)("mat-sidenav-fixed", i.fixedInViewport))
                        },
                        inputs: {
                            fixedInViewport: "fixedInViewport",
                            fixedTopGap: "fixedTopGap",
                            fixedBottomGap: "fixedBottomGap"
                        },
                        exportAs: ["matSidenav"],
                        features: [H],
                        ngContentSelectors: pu,
                        decls: 3,
                        vars: 0,
                        consts: [["cdkScrollable", "", 1, "mat-drawer-inner-container"], ["content", ""]],
                        template: function (e, i) {
                            1 & e && (vt(), g(0, "div", 0, 1), ye(2), b())
                        },
                        dependencies: [Ya],
                        encapsulation: 2,
                        data: {
                            animation: [SM.transformDrawer]
                        },
                        changeDetection: 0
                    }),
                    n
                })(),
                kM = (() => {
                    class n extends TM {}
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-sidenav-container"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && (ci(r, n_, 5), ci(r, AM, 5)), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._content = o.first),
                                $e(o = ze()) && (i._allDrawers = o)
                            }
                        },
                        hostAttrs: [1, "mat-drawer-container", "mat-sidenav-container"],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-drawer-container-explicit-backdrop", i._backdropOverride)
                        },
                        exportAs: ["matSidenavContainer"],
                        features: [ge([{
                                        provide: t_,
                                        useExisting: n
                                    }
                                ]), H],
                        ngContentSelectors: T3,
                        decls: 4,
                        vars: 2,
                        consts: [["class", "mat-drawer-backdrop", 3, "mat-drawer-shown", "click", 4, "ngIf"], [4, "ngIf"], [1, "mat-drawer-backdrop", 3, "click"]],
                        template: function (e, i) {
                            1 & e && (vt(M3), I(0, E3, 1, 2, "div", 0), ye(1), ye(2, 1), I(3, S3, 2, 0, "mat-sidenav-content", 1)),
                            2 & e && (y("ngIf", i.hasBackdrop), w(3), y("ngIf", !i._content))
                        },
                        dependencies: [Zt, n_],
                        styles: ['.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                O3 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [is, ct, Ka, Ka, ct]
                    }),
                    n
                })();
                const R3 = ["*", [["mat-toolbar-row"]]],
                P3 = ["*", "mat-toolbar-row"],
                F3 = za(class {
                    constructor(n) {
                        this._elementRef = n
                    }
                });
                let IM = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["mat-toolbar-row"]],
                        hostAttrs: [1, "mat-toolbar-row"],
                        exportAs: ["matToolbarRow"]
                    }),
                    n
                })(),
                N3 = (() => {
                    class n extends F3 {
                        constructor(e, i, r) {
                            super(e),
                            this._platform = i,
                            this._document = r
                        }
                        ngAfterViewInit() {
                            this._platform.isBrowser && (this._checkToolbarMixedModes(), this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes()))
                        }
                        _checkToolbarMixedModes() {}
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(se), p(_t), p(Q))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-toolbar"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && ci(r, IM, 5), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._toolbarRows = o)
                            }
                        },
                        hostAttrs: [1, "mat-toolbar"],
                        hostVars: 4,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-toolbar-multiple-rows", i._toolbarRows.length > 0)("mat-toolbar-single-row", 0 === i._toolbarRows.length)
                        },
                        inputs: {
                            color: "color"
                        },
                        exportAs: ["matToolbar"],
                        features: [H],
                        ngContentSelectors: P3,
                        decls: 2,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && (vt(R3), ye(0), ye(1, 1))
                        },
                        styles: [".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}"],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                L3 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, ct]
                    }),
                    n
                })();
                class pr {
                    constructor(t = !1, e, i = !0, r) {
                        this._multiple = t,
                        this._emitChanges = i,
                        this.compareWith = r,
                        this._selection = new Set,
                        this._deselectedToEmit = [],
                        this._selectedToEmit = [],
                        this.changed = new K,
                        e && e.length && (t ? e.forEach(o => this._markSelected(o)) : this._markSelected(e[0]), this._selectedToEmit.length = 0)
                    }
                    get selected() {
                        return this._selected || (this._selected = Array.from(this._selection.values())),
                        this._selected
                    }
                    select(...t) {
                        this._verifyValueAssignment(t),
                        t.forEach(i => this._markSelected(i));
                        const e = this._hasQueuedChanges();
                        return this._emitChangeEvent(),
                        e
                    }
                    deselect(...t) {
                        this._verifyValueAssignment(t),
                        t.forEach(i => this._unmarkSelected(i));
                        const e = this._hasQueuedChanges();
                        return this._emitChangeEvent(),
                        e
                    }
                    setSelection(...t) {
                        this._verifyValueAssignment(t);
                        const e = this.selected,
                        i = new Set(t);
                        t.forEach(o => this._markSelected(o)),
                        e.filter(o => !i.has(o)).forEach(o => this._unmarkSelected(o));
                        const r = this._hasQueuedChanges();
                        return this._emitChangeEvent(),
                        r
                    }
                    toggle(t) {
                        return this.isSelected(t) ? this.deselect(t) : this.select(t)
                    }
                    clear(t = !0) {
                        this._unmarkAll();
                        const e = this._hasQueuedChanges();
                        return t && this._emitChangeEvent(),
                        e
                    }
                    isSelected(t) {
                        if (this.compareWith) {
                            for (const e of this._selection)
                                if (this.compareWith(e, t))
                                    return !0;
                            return !1
                        }
                        return this._selection.has(t)
                    }
                    isEmpty() {
                        return 0 === this._selection.size
                    }
                    hasValue() {
                        return !this.isEmpty()
                    }
                    sort(t) {
                        this._multiple && this.selected && this._selected.sort(t)
                    }
                    isMultipleSelection() {
                        return this._multiple
                    }
                    _emitChangeEvent() {
                        this._selected = null,
                        (this._selectedToEmit.length || this._deselectedToEmit.length) && (this.changed.next({
                                source: this,
                                added: this._selectedToEmit,
                                removed: this._deselectedToEmit
                            }), this._deselectedToEmit = [], this._selectedToEmit = [])
                    }
                    _markSelected(t) {
                        this.isSelected(t) || (this._multiple || this._unmarkAll(), this.isSelected(t) || this._selection.add(t), this._emitChanges && this._selectedToEmit.push(t))
                    }
                    _unmarkSelected(t) {
                        this.isSelected(t) && (this._selection.delete(t), this._emitChanges && this._deselectedToEmit.push(t))
                    }
                    _unmarkAll() {
                        this.isEmpty() || this._selection.forEach(t => this._unmarkSelected(t))
                    }
                    _verifyValueAssignment(t) {}
                    _hasQueuedChanges() {
                        return !(!this._deselectedToEmit.length && !this._selectedToEmit.length)
                    }
                }
                let i_ = (() => {
                    class n {
                        constructor() {
                            this._listeners = []
                        }
                        notify(e, i) {
                            for (let r of this._listeners)
                                r(e, i)
                        }
                        listen(e) {
                            return this._listeners.push(e),
                            () => {
                                this._listeners = this._listeners.filter(i => e !== i)
                            }
                        }
                        ngOnDestroy() {
                            this._listeners = []
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac,
                        providedIn: "root"
                    }),
                    n
                })();
                class r_ {
                    static generateFilter(t) {
                        let e = " " + t.name.toLowerCase();
                        return t.element && (e += " " + t.element.toLowerCase()),
                        Array.isArray(t.categories) && t.categories.length > 0 && (e += " " + t.categories.join(" ").toLowerCase()),
                        Array.isArray(t.types) && t.types.length > 0 && t.types.forEach(i => {
                            e += " " + i.name.toLowerCase()
                        }),
                        e
                    }
                    static fromJSON(t) {
                        const e = [];
                        return Object.keys(t.lists).forEach(i => {
                            t.lists[i].forEach(o => {
                                o.game = t.game,
                                o.year = t.year,
                                o.logo = t.logo,
                                o.filterText = r_.generateFilter(o),
                                o.files.images.forEach(s => {
                                    s.subfolder = t.globalFolder + "/" + o.folder + "/" + s.subfolder
                                }),
                                o.files.nfcTags.forEach(s => {
                                    s.subfolder = t.globalFolder + "/" + o.folder + "/"
                                }),
                                e.push(o)
                            })
                        }),
                        e
                    }
                }
                class _c {
                    _httpClient;
                    _downloadService;
                    constructor(t, e) {
                        this._httpClient = t,
                        this._downloadService = e
                    }
                    get(t, e) {
                        const i = this._httpClient.get(e, {
                            responseType: "text",
                            headers: this.appendBasicAuthHeader()
                        }).pipe(lh());
                        return this._downloadService.addDownload({
                            type: t,
                            observable: i
                        }),
                        i
                    }
                    post(t, e, i) {
                        const r = this.appendBasicAuthHeader(),
                        o = this._httpClient.post(e, i, {
                            responseType: "text",
                            headers: r
                        });
                        return this._downloadService.addDownload({
                            type: t,
                            observable: o
                        }),
                        o
                    }
                    appendBasicAuthHeader(t = new fi) {
                        return t
                    }
                    static \u0275fac = function (e) {
                        return new(e || _c)(v($d), v(Jr))
                    };
                    static \u0275prov = k({
                        token: _c,
                        factory: _c. \u0275fac,
                        providedIn: "root"
                    })
                }
                class bc {
                    _requestService;
                    _downloadService;
                    _dataBehaviorSubject = new Oe([]);
                    _dataRaw = [];
                    _urlList = ["./assets/data-lists/giants.json", "./assets/data-lists/imaginators.json", "./assets/data-lists/spyrosAdventures.json", "./assets/data-lists/superChargers.json", "./assets/data-lists/swapForce.json", "./assets/data-lists/trapTeam.json"];
                    constructor(t, e) {
                        this._requestService = t,
                        this._downloadService = e,
                        this.downloadFiles(),
                        this._downloadService.listen([ms.MAIN]).subscribe(i => {
                            0 === i && this._dataBehaviorSubject.next(this._dataRaw)
                        })
                    }
                    downloadFiles() {
                        this._urlList.forEach(t => {
                            this._requestService.get(ms.MAIN, t).subscribe(i => {
                                try {
                                    const r = JSON.parse(i);
                                    this._dataRaw = [...this._dataRaw, ...r_.fromJSON(r)]
                                } catch {
                                    console.log('Error file content: "' + t + '"')
                                }
                            })
                        })
                    }
                    get dataObservable() {
                        return this._dataBehaviorSubject.asObservable()
                    }
                    get data() {
                        return this._dataBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || bc)(v(_c), v(Jr))
                    };
                    static \u0275prov = k({
                        token: bc,
                        factory: bc. \u0275fac,
                        providedIn: "root"
                    })
                }
                class Yn {
                    _dataService;
                    _selectedFilterBehaviorSubject = new Oe("");
                    _listBehaviorSubject = new Oe([]);
                    filterListGame = [];
                    filterListElement = [];
                    filterListCategory = [];
                    filterListName = [];
                    filterListType = [];
                    filterListNfcTags = [];
                    filterListImage = [];
                    selectionFilterGame = new pr(!0, []);
                    selectionFilterElement = new pr(!0, []);
                    selectionFilterCategory = new pr(!0, []);
                    selectionFilterName = new pr(!0, []);
                    selectionFilterType = new pr(!0, []);
                    selectionFilterNfcTags = new pr(!0, []);
                    selectionFilterImage = new pr(!0, []);
                    constructor(t) {
                        this._dataService = t,
                        this._dataService.dataObservable.subscribe(() => {
                            this.createFilterLists(),
                            this.filtering()
                        })
                    }
                    isElementInList(t, e) {
                        for (let i = 0; i < e.length; i++)
                            if (e[i].name === t)
                                return !0;
                        return !1
                    }
                    addToList(t, e) {
                        this.isElementInList(t.name, e) || e.push(t)
                    }
                    createTPlacedItemType(t, e) {
                        return {
                            name: t,
                            imgSrc: e
                        }
                    }
                    createFilterLists() {
                        this._dataService.data.forEach(t => {
                            let e;
                            this.addToList(this.createTPlacedItemType(t.game, {
                                    url: "./assets/images/logos/" + t.game.toLowerCase().replace(/[^a-z0-9]*/g, "") + ".png"
                                }), this.filterListGame),
                            t.element && (e = {
                                    url: "./assets/images/elements/" + t.element.toLowerCase() + ".webp",
                                    style: {
                                        "border-radius": "50%"
                                    }
                                }),
                            this.addToList(this.createTPlacedItemType(t.element, e), this.filterListElement),
                            t.categories?.forEach(i => {
                                this.addToList(this.createTPlacedItemType(i), this.filterListCategory)
                            }),
                            this.addToList(this.createTPlacedItemType(t.name), this.filterListName),
                            t.types?.forEach(i => {
                                this.addToList(this.createTPlacedItemType(i.name), this.filterListType)
                            }),
                            Array.isArray(t.files.images) && t.files.images.forEach(i => {
                                i.types.forEach(r => {
                                    this.addToList(this.createTPlacedItemType(r), this.filterListImage)
                                })
                            }),
                            Array.isArray(t.files.nfcTags) && t.files.nfcTags.forEach(i => {
                                void 0 === i.types && console.log(i),
                                i.types.forEach(r => {
                                    this.addToList(this.createTPlacedItemType(r), this.filterListNfcTags)
                                })
                            })
                        }),
                        this.filterListGame = [...new Set(this.filterListGame)].sort(this.compareFn),
                        this.filterListElement = [...new Set(this.filterListElement)].sort(this.compareFn),
                        this.filterListCategory = [...new Set(this.filterListCategory)].sort(this.compareFn),
                        this.filterListName = [...new Set(this.filterListName)].sort(this.compareFn),
                        this.filterListType = [...new Set(this.filterListType)].sort(this.compareFn),
                        this.filterListNfcTags = [...new Set(this.filterListNfcTags)].sort(this.compareFn),
                        this.filterListImage = [...new Set(this.filterListImage)].sort(this.compareFn)
                    }
                    compareFn(t, e) {
                        return void 0 === t.name && void 0 === e.name ? 0 : void 0 === t.name ? 1 : void 0 === e.name || t.name < e.name ? -1 : t.name > e.name ? 1 : 0
                    }
                    hasIntersection(t, e) {
                        return t.filter(i => e.includes(i.name)).length > 0
                    }
                    filterByTableHead(t) {
                        const e = [];
                        return t.forEach(i => {
                            let r = !0;
                            if (r && 0 !== this.selectionFilterGame.selected.length && (r = this.hasIntersection(this.selectionFilterGame.selected, [i.game])), r && 0 !== this.selectionFilterElement.selected.length && (r = this.hasIntersection(this.selectionFilterElement.selected, [i.element])), r && 0 !== this.selectionFilterCategory.selected.length && (r = this.hasIntersection(this.selectionFilterCategory.selected, i.categories)), r && 0 !== this.selectionFilterName.selected.length && (r = this.hasIntersection(this.selectionFilterName.selected, [i.name])), r && 0 !== this.selectionFilterType.selected.length)
                                if (i.types) {
                                    const o = [];
                                    i.types.forEach(s => {
                                        o.push(s.name)
                                    }),
                                    r = this.hasIntersection(this.selectionFilterType.selected, o)
                                } else
                                    r = !1;
                            if (r && 0 !== this.selectionFilterImage.selected.length) {
                                let o = [];
                                i.files.images.forEach(s => {
                                    o = [...o, ...s.types].filter((a, c, l) => l.indexOf(a) === c)
                                }),
                                r = this.hasIntersection(this.selectionFilterImage.selected, o)
                            }
                            if (r && 0 !== this.selectionFilterNfcTags.selected.length) {
                                let o = [];
                                i.files.nfcTags.forEach(s => {
                                    o = [...o, ...s.types].filter((a, c, l) => l.indexOf(a) === c)
                                }),
                                r = this.hasIntersection(this.selectionFilterNfcTags.selected, o)
                            }
                            r && e.push(i)
                        }),
                        e
                    }
                    filterByGlobalInput(t) {
                        let e = [];
                        const i = this._selectedFilterBehaviorSubject.value?.toLowerCase().trim().replace(/\s+/g, " ");
                        if (null == i || "" === i)
                            e = t;
                        else {
                            const o = i.split(/[^a-zA-Z0-9]/).filter(s => "" != s);
                            e = [...t];
                            for (let s = 0; s < o.length; s++) {
                                var r = [...e];
                                e = [];
                                const a = o[s];
                                r.forEach(c => {
                                    c.filterText.includes(a) && e.push(c)
                                })
                            }
                        }
                        return e
                    }
                    filtering() {
                        let t = this.filterByTableHead(this._dataService.data);
                        this._listBehaviorSubject.next(this.filterByGlobalInput(t))
                    }
                    get selectedFilterObservable() {
                        return this._selectedFilterBehaviorSubject.asObservable()
                    }
                    get selectedFilter() {
                        return this._selectedFilterBehaviorSubject.value
                    }
                    set selectedFilter(t) {
                        this._selectedFilterBehaviorSubject.next(t),
                        this.filtering()
                    }
                    get listObservable() {
                        return this._listBehaviorSubject.asObservable()
                    }
                    get list() {
                        return this._listBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || Yn)(v(bc))
                    };
                    static \u0275prov = k({
                        token: Yn,
                        factory: Yn. \u0275fac,
                        providedIn: "root"
                    })
                }
                var Le = (() => {
                    return (n = Le || (Le = {}))[n.NONE = 0] = "NONE",
                    n[n.ASC = 1] = "ASC",
                    n[n.DESC = 2] = "DESC",
                    Le;
                    var n
                })(),
                Kn = (() => {
                    return (n = Kn || (Kn = {}))[n.GAME = 0] = "GAME",
                    n[n.ELEMENT = 1] = "ELEMENT",
                    n[n.CATEGORY = 2] = "CATEGORY",
                    n[n.NAME = 3] = "NAME",
                    n[n.TYPE = 4] = "TYPE",
                    Kn;
                    var n
                })();
                class V3 {
                    _name;
                    _files = [];
                    constructor(t) {
                        this._name = t
                    }
                    add(t) {
                        this._files.push(t)
                    }
                    clear() {
                        this._files.length = 0
                    }
                    set files(t) {
                        this._files = [...t]
                    }
                    get files() {
                        return this._files
                    }
                    get name() {
                        return this._name
                    }
                }
                var Jt = (() => {
                    return (n = Jt || (Jt = {}))[n.NONE = 0] = "NONE",
                    n[n.GAME = 1] = "GAME",
                    n[n.YEAR = 2] = "YEAR",
                    n[n.ELEMENT = 3] = "ELEMENT",
                    n[n.CATEGORY = 4] = "CATEGORY",
                    n[n.NAME = 5] = "NAME",
                    n[n.TYPE = 6] = "TYPE",
                    Jt;
                    var n
                })();
                class Es {
                    _filterService;
                    _selectedGroupType = new Oe(Jt.NONE);
                    _selectedGroupOrientation = new Oe(Le.NONE);
                    _listBehaviorSubject = new Oe([]);
                    constructor(t) {
                        this._filterService = t,
                        this._filterService.listObservable.subscribe(e => {
                            this.group()
                        })
                    }
                    group() {
                        const t = this.grouping(this._filterService.list);
                        t.sort((e, i) => this.compareStringNumber(e.name, i.name)),
                        this._listBehaviorSubject.next(t)
                    }
                    placedElementListByName(t, e) {
                        return t.find(i => i.name === e)
                    }
                    selectGroupNames(t) {
                        if (this._selectedGroupType) {
                            if (this._selectedGroupType.value === Jt.GAME)
                                return ["" + t.game];
                            if (this._selectedGroupType.value === Jt.YEAR)
                                return [Number(t.year)];
                            if (this._selectedGroupType.value === Jt.ELEMENT)
                                return t.element ? [t.element] : ["None"];
                            if (this._selectedGroupType.value === Jt.CATEGORY)
                                return t.categories;
                            if (this._selectedGroupType.value === Jt.NAME)
                                return [t.name[0]];
                            if (this._selectedGroupType.value === Jt.TYPE)
                                return t.types ? t.types.map(e => e.name) : ["None"]
                        }
                        return [0]
                    }
                    grouping(t) {
                        const e = [];
                        return t.forEach(i => {
                            this.selectGroupNames(i).forEach(r => {
                                var o = this.placedElementListByName(e, r);
                                void 0 === o && (o = new V3(r), e.push(o)),
                                o.add(i)
                            })
                        }),
                        e
                    }
                    compareStringNumber(t, e) {
                        const i = this._selectedGroupOrientation.value === Le.ASC ? 1 : -1;
                        return null !== t && null === e || t < e ? -1 * i : null === t && null !== e || t > e ? 1 * i : 0
                    }
                    get selectedGroupTypeObservable() {
                        return this._selectedGroupType.asObservable()
                    }
                    set selectedGroupType(t) {
                        this._selectedGroupType.next(t),
                        this.group()
                    }
                    get selectedGroupType() {
                        return this._selectedGroupType.value
                    }
                    get selectedGroupOrientationObservable() {
                        return this._selectedGroupOrientation.asObservable()
                    }
                    set selectedGroupOrientation(t) {
                        this._selectedGroupOrientation.next(t),
                        this.group()
                    }
                    get selectedGroupOrientation() {
                        return this._selectedGroupOrientation.value
                    }
                    get listObservable() {
                        return this._listBehaviorSubject.asObservable()
                    }
                    get list() {
                        return this._listBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || Es)(v(Yn))
                    };
                    static \u0275prov = k({
                        token: Es,
                        factory: Es. \u0275fac,
                        providedIn: "root"
                    })
                }
                class oo {
                    _groupService;
                    _selectedSortType = new Oe(Kn.NAME);
                    _selectedSortOrientation = new Oe(Le.ASC);
                    _listBehaviorSubject = new Oe([]);
                    constructor(t) {
                        this._groupService = t,
                        this._groupService.listObservable.subscribe(() => {
                            this.sorting()
                        })
                    }
                    sorting() {
                        void 0 === this._selectedSortType.value && this._listBehaviorSubject.next(this._groupService.list);
                        const t = [...this._groupService.list];
                        t.forEach(e => {
                            e.files.sort((i, r) => this.mainSort(i, r))
                        }),
                        this._listBehaviorSubject.next(t)
                    }
                    getValueBySortChoose(t) {
                        if (void 0 !== this._selectedSortType) {
                            if (this._selectedSortType.value === Kn.CATEGORY)
                                return t.categories && t.categories.length > 0 ? t.categories[0] : 0;
                            if (this._selectedSortType.value === Kn.ELEMENT)
                                return t.element;
                            if (this._selectedSortType.value === Kn.GAME)
                                return t.game;
                            if (this._selectedSortType.value === Kn.NAME)
                                return t.name;
                            if (this._selectedSortType.value === Kn.TYPE)
                                return t.types && t.types.length > 0 ? t.types[0].name : void 0
                        }
                        return 0
                    }
                    mainSort(t, e) {
                        var i = this.compareStringNumber(this.getValueBySortChoose(t), this.getValueBySortChoose(e));
                        if (0 === i && (i = this.compareStringNumber(t.name.toUpperCase(), e.name.toUpperCase())), 0 === i) {
                            const r = t.types?.length > 0 && t.types[0].name ? t.types[0].name.toUpperCase() : void 0,
                            o = e.types?.length > 0 && e.types[0].name ? e.types[0].name.toUpperCase() : void 0;
                            i = this.compareStringNumber(r, o)
                        }
                        return i
                    }
                    compareStringNumber(t, e) {
                        return void 0 === t && void 0 === e ? 0 : void 0 === t ? -1 * (this._selectedSortOrientation.value === Le.DESC ? -1 : 1) : void 0 === e ? 1 * (this._selectedSortOrientation.value === Le.DESC ? -1 : 1) : t < e ? -1 * (this._selectedSortOrientation.value === Le.DESC ? -1 : 1) : t > e ? 1 * (this._selectedSortOrientation.value === Le.DESC ? -1 : 1) : 0
                    }
                    get selectedSortTypeObservable() {
                        return this._selectedSortType.asObservable()
                    }
                    set selectedSortType(t) {
                        this._selectedSortType.next(t),
                        this.sorting()
                    }
                    get selectedSortType() {
                        return this._selectedSortType.value
                    }
                    get selectedSortOrientationObservable() {
                        return this._selectedSortOrientation.asObservable()
                    }
                    set selectedSortOrientation(t) {
                        this._selectedSortOrientation.next(t),
                        this.sorting()
                    }
                    get selectedSortOrientation() {
                        return this._selectedSortOrientation.value
                    }
                    get listObservable() {
                        return this._listBehaviorSubject.asObservable()
                    }
                    get list() {
                        return this._listBehaviorSubject.value
                    }
                    static \u0275fac = function (e) {
                        return new(e || oo)(v(Es))
                    };
                    static \u0275prov = k({
                        token: oo,
                        factory: oo. \u0275fac,
                        providedIn: "root"
                    })
                }
                class Ss {
                    _sortService;
                    _view = [];
                    constructor(t) {
                        this._sortService = t,
                        this._sortService.listObservable.subscribe(e => {
                            this._view = e
                        })
                    }
                    get view() {
                        return this._view
                    }
                    static \u0275fac = function (e) {
                        return new(e || Ss)(v(oo))
                    };
                    static \u0275prov = k({
                        token: Ss,
                        factory: Ss. \u0275fac,
                        providedIn: "root"
                    })
                }
                const B3 = ["tooltip"],
                OM = new T("mat-tooltip-scroll-strategy"),
                U3 = {
                    provide: OM,
                    deps: [ar],
                    useFactory: function H3(n) {
                        return () => n.scrollStrategies.reposition({
                            scrollThrottle: 20
                        })
                    }
                },
                z3 = new T("mat-tooltip-default-options", {
                    providedIn: "root",
                    factory: function $3() {
                        return {
                            showDelay: 0,
                            hideDelay: 0,
                            touchendHideDelay: 1500
                        }
                    }
                }),
                RM = "tooltip-panel",
                PM = vd({
                    passive: !0
                });
                let Z3 = (() => {
                    class n {
                        constructor(e, i, r, o, s, a, c, l, d, u, h, f) {
                            this._overlay = e,
                            this._elementRef = i,
                            this._scrollDispatcher = r,
                            this._viewContainerRef = o,
                            this._ngZone = s,
                            this._platform = a,
                            this._ariaDescriber = c,
                            this._focusMonitor = l,
                            this._dir = u,
                            this._defaultOptions = h,
                            this._position = "below",
                            this._positionAtOrigin = !1,
                            this._disabled = !1,
                            this._viewInitialized = !1,
                            this._pointerExitEventsInitialized = !1,
                            this._viewportMargin = 8,
                            this._cssClassPrefix = "mat",
                            this._showDelay = this._defaultOptions.showDelay,
                            this._hideDelay = this._defaultOptions.hideDelay,
                            this.touchGestures = "auto",
                            this._message = "",
                            this._passiveListeners = [],
                            this._destroyed = new K,
                            this._scrollStrategy = d,
                            this._document = f,
                            h && (h.position && (this.position = h.position), h.positionAtOrigin && (this.positionAtOrigin = h.positionAtOrigin), h.touchGestures && (this.touchGestures = h.touchGestures)),
                            u.change.pipe(et(this._destroyed)).subscribe(() => {
                                this._overlayRef && this._updatePosition(this._overlayRef)
                            })
                        }
                        get position() {
                            return this._position
                        }
                        set position(e) {
                            e !== this._position && (this._position = e, this._overlayRef && (this._updatePosition(this._overlayRef), this._tooltipInstance?.show(0), this._overlayRef.updatePosition()))
                        }
                        get positionAtOrigin() {
                            return this._positionAtOrigin
                        }
                        set positionAtOrigin(e) {
                            this._positionAtOrigin = Ne(e),
                            this._detach(),
                            this._overlayRef = null
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = Ne(e),
                            this._disabled ? this.hide(0) : this._setupPointerEnterEventsIfNeeded()
                        }
                        get showDelay() {
                            return this._showDelay
                        }
                        set showDelay(e) {
                            this._showDelay = qn(e)
                        }
                        get hideDelay() {
                            return this._hideDelay
                        }
                        set hideDelay(e) {
                            this._hideDelay = qn(e),
                            this._tooltipInstance && (this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay)
                        }
                        get message() {
                            return this._message
                        }
                        set message(e) {
                            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, "tooltip"),
                            this._message = null != e ? String(e).trim() : "",
                            !this._message && this._isTooltipVisible() ? this.hide(0) : (this._setupPointerEnterEventsIfNeeded(), this._updateTooltipMessage(), this._ngZone.runOutsideAngular(() => {
                                    Promise.resolve().then(() => {
                                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, "tooltip")
                                    })
                                }))
                        }
                        get tooltipClass() {
                            return this._tooltipClass
                        }
                        set tooltipClass(e) {
                            this._tooltipClass = e,
                            this._tooltipInstance && this._setTooltipClass(this._tooltipClass)
                        }
                        ngAfterViewInit() {
                            this._viewInitialized = !0,
                            this._setupPointerEnterEventsIfNeeded(),
                            this._focusMonitor.monitor(this._elementRef).pipe(et(this._destroyed)).subscribe(e => {
                                e ? "keyboard" === e && this._ngZone.run(() => this.show()) : this._ngZone.run(() => this.hide(0))
                            })
                        }
                        ngOnDestroy() {
                            const e = this._elementRef.nativeElement;
                            clearTimeout(this._touchstartTimeout),
                            this._overlayRef && (this._overlayRef.dispose(), this._tooltipInstance = null),
                            this._passiveListeners.forEach(([i, r]) => {
                                e.removeEventListener(i, r, PM)
                            }),
                            this._passiveListeners.length = 0,
                            this._destroyed.next(),
                            this._destroyed.complete(),
                            this._ariaDescriber.removeDescription(e, this.message, "tooltip"),
                            this._focusMonitor.stopMonitoring(e)
                        }
                        show(e = this.showDelay, i) {
                            if (this.disabled || !this.message || this._isTooltipVisible())
                                return void this._tooltipInstance?._cancelPendingAnimations();
                            const r = this._createOverlay(i);
                            this._detach(),
                            this._portal = this._portal || new Rd(this._tooltipComponent, this._viewContainerRef);
                            const o = this._tooltipInstance = r.attach(this._portal).instance;
                            o._triggerElement = this._elementRef.nativeElement,
                            o._mouseLeaveHideDelay = this._hideDelay,
                            o.afterHidden().pipe(et(this._destroyed)).subscribe(() => this._detach()),
                            this._setTooltipClass(this._tooltipClass),
                            this._updateTooltipMessage(),
                            o.show(e)
                        }
                        hide(e = this.hideDelay) {
                            const i = this._tooltipInstance;
                            i && (i.isVisible() ? i.hide(e) : (i._cancelPendingAnimations(), this._detach()))
                        }
                        toggle(e) {
                            this._isTooltipVisible() ? this.hide() : this.show(void 0, e)
                        }
                        _isTooltipVisible() {
                            return !!this._tooltipInstance && this._tooltipInstance.isVisible()
                        }
                        _createOverlay(e) {
                            if (this._overlayRef) {
                                const o = this._overlayRef.getConfig().positionStrategy;
                                if ((!this.positionAtOrigin || !e) && o._origin instanceof se)
                                    return this._overlayRef;
                                this._detach()
                            }
                            const i = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),
                            r = this._overlay.position().flexibleConnectedTo(this.positionAtOrigin && e || this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(!1).withViewportMargin(this._viewportMargin).withScrollableContainers(i);
                            return r.positionChanges.pipe(et(this._destroyed)).subscribe(o => {
                                this._updateCurrentPositionClass(o.connectionPair),
                                this._tooltipInstance && o.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible() && this._ngZone.run(() => this.hide(0))
                            }),
                            this._overlayRef = this._overlay.create({
                                direction: this._dir,
                                positionStrategy: r,
                                panelClass: `${this._cssClassPrefix}-${RM}`,
                                scrollStrategy: this._scrollStrategy()
                            }),
                            this._updatePosition(this._overlayRef),
                            this._overlayRef.detachments().pipe(et(this._destroyed)).subscribe(() => this._detach()),
                            this._overlayRef.outsidePointerEvents().pipe(et(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction()),
                            this._overlayRef.keydownEvents().pipe(et(this._destroyed)).subscribe(o => {
                                this._isTooltipVisible() && 27 === o.keyCode && !as(o) && (o.preventDefault(), o.stopPropagation(), this._ngZone.run(() => this.hide(0)))
                            }),
                            this._defaultOptions?.disableTooltipInteractivity && this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`),
                            this._overlayRef
                        }
                        _detach() {
                            this._overlayRef && this._overlayRef.hasAttached() && this._overlayRef.detach(),
                            this._tooltipInstance = null
                        }
                        _updatePosition(e) {
                            const i = e.getConfig().positionStrategy,
                            r = this._getOrigin(),
                            o = this._getOverlayPosition();
                            i.withPositions([this._addOffset({
                                        ...r.main,
                                        ...o.main
                                    }), this._addOffset({
                                        ...r.fallback,
                                        ...o.fallback
                                    })])
                        }
                        _addOffset(e) {
                            return e
                        }
                        _getOrigin() {
                            const e = !this._dir || "ltr" == this._dir.value,
                            i = this.position;
                            let r;
                            "above" == i || "below" == i ? r = {
                                originX: "center",
                                originY: "above" == i ? "top" : "bottom"
                            }
                             : "before" == i || "left" == i && e || "right" == i && !e ? r = {
                                originX: "start",
                                originY: "center"
                            }
                             : ("after" == i || "right" == i && e || "left" == i && !e) && (r = {
                                    originX: "end",
                                    originY: "center"
                                });
                            const {
                                x: o,
                                y: s
                            } = this._invertPosition(r.originX, r.originY);
                            return {
                                main: r,
                                fallback: {
                                    originX: o,
                                    originY: s
                                }
                            }
                        }
                        _getOverlayPosition() {
                            const e = !this._dir || "ltr" == this._dir.value,
                            i = this.position;
                            let r;
                            "above" == i ? r = {
                                overlayX: "center",
                                overlayY: "bottom"
                            }
                             : "below" == i ? r = {
                                overlayX: "center",
                                overlayY: "top"
                            }
                             : "before" == i || "left" == i && e || "right" == i && !e ? r = {
                                overlayX: "end",
                                overlayY: "center"
                            }
                             : ("after" == i || "right" == i && e || "left" == i && !e) && (r = {
                                    overlayX: "start",
                                    overlayY: "center"
                                });
                            const {
                                x: o,
                                y: s
                            } = this._invertPosition(r.overlayX, r.overlayY);
                            return {
                                main: r,
                                fallback: {
                                    overlayX: o,
                                    overlayY: s
                                }
                            }
                        }
                        _updateTooltipMessage() {
                            this._tooltipInstance && (this._tooltipInstance.message = this.message, this._tooltipInstance._markForCheck(), this._ngZone.onMicrotaskEmpty.pipe(Ge(1), et(this._destroyed)).subscribe(() => {
                                    this._tooltipInstance && this._overlayRef.updatePosition()
                                }))
                        }
                        _setTooltipClass(e) {
                            this._tooltipInstance && (this._tooltipInstance.tooltipClass = e, this._tooltipInstance._markForCheck())
                        }
                        _invertPosition(e, i) {
                            return "above" === this.position || "below" === this.position ? "top" === i ? i = "bottom" : "bottom" === i && (i = "top") : "end" === e ? e = "start" : "start" === e && (e = "end"), {
                                x: e,
                                y: i
                            }
                        }
                        _updateCurrentPositionClass(e) {
                            const {
                                overlayY: i,
                                originX: r,
                                originY: o
                            } = e;
                            let s;
                            if (s = "center" === i ? this._dir && "rtl" === this._dir.value ? "end" === r ? "left" : "right" : "start" === r ? "left" : "right" : "bottom" === i && "top" === o ? "above" : "below", s !== this._currentPosition) {
                                const a = this._overlayRef;
                                if (a) {
                                    const c = `${this._cssClassPrefix}-${RM}-`;
                                    a.removePanelClass(c + this._currentPosition),
                                    a.addPanelClass(c + s)
                                }
                                this._currentPosition = s
                            }
                        }
                        _setupPointerEnterEventsIfNeeded() {
                            this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length || (this._platformSupportsMouseEvents() ? this._passiveListeners.push(["mouseenter", e => {
                                            let i;
                                            this._setupPointerExitEventsIfNeeded(),
                                            void 0 !== e.x && void 0 !== e.y && (i = e),
                                            this.show(void 0, i)
                                        }
                                    ]) : "off" !== this.touchGestures && (this._disableNativeGesturesIfNecessary(), this._passiveListeners.push(["touchstart", e => {
                                                const i = e.targetTouches?.[0],
                                                r = i ? {
                                                    x: i.clientX,
                                                    y: i.clientY
                                                }
                                                 : void 0;
                                                this._setupPointerExitEventsIfNeeded(),
                                                clearTimeout(this._touchstartTimeout),
                                                this._touchstartTimeout = setTimeout(() => this.show(void 0, r), 500)
                                            }
                                        ])), this._addListeners(this._passiveListeners))
                        }
                        _setupPointerExitEventsIfNeeded() {
                            if (this._pointerExitEventsInitialized)
                                return;
                            this._pointerExitEventsInitialized = !0;
                            const e = [];
                            if (this._platformSupportsMouseEvents())
                                e.push(["mouseleave", i => {
                                            const r = i.relatedTarget;
                                            (!r || !this._overlayRef?.overlayElement.contains(r)) && this.hide()
                                        }
                                    ], ["wheel", i => this._wheelListener(i)]);
                            else if ("off" !== this.touchGestures) {
                                this._disableNativeGesturesIfNecessary();
                                const i = () => {
                                    clearTimeout(this._touchstartTimeout),
                                    this.hide(this._defaultOptions.touchendHideDelay)
                                };
                                e.push(["touchend", i], ["touchcancel", i])
                            }
                            this._addListeners(e),
                            this._passiveListeners.push(...e)
                        }
                        _addListeners(e) {
                            e.forEach(([i, r]) => {
                                this._elementRef.nativeElement.addEventListener(i, r, PM)
                            })
                        }
                        _platformSupportsMouseEvents() {
                            return !this._platform.IOS && !this._platform.ANDROID
                        }
                        _wheelListener(e) {
                            if (this._isTooltipVisible()) {
                                const i = this._document.elementFromPoint(e.clientX, e.clientY),
                                r = this._elementRef.nativeElement;
                                i !== r && !r.contains(i) && this.hide()
                            }
                        }
                        _disableNativeGesturesIfNecessary() {
                            const e = this.touchGestures;
                            if ("off" !== e) {
                                const i = this._elementRef.nativeElement,
                                r = i.style;
                                ("on" === e || "INPUT" !== i.nodeName && "TEXTAREA" !== i.nodeName) && (r.userSelect = r.msUserSelect = r.webkitUserSelect = r.MozUserSelect = "none"),
                                ("on" === e || !i.draggable) && (r.webkitUserDrag = "none"),
                                r.touchAction = "none",
                                r.webkitTapHighlightColor = "transparent"
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275dir = N({
                        type: n,
                        inputs: {
                            position: ["matTooltipPosition", "position"],
                            positionAtOrigin: ["matTooltipPositionAtOrigin", "positionAtOrigin"],
                            disabled: ["matTooltipDisabled", "disabled"],
                            showDelay: ["matTooltipShowDelay", "showDelay"],
                            hideDelay: ["matTooltipHideDelay", "hideDelay"],
                            touchGestures: ["matTooltipTouchGestures", "touchGestures"],
                            message: ["matTooltip", "message"],
                            tooltipClass: ["matTooltipClass", "tooltipClass"]
                        }
                    }),
                    n
                })(),
                o_ = (() => {
                    class n extends Z3 {
                        constructor(e, i, r, o, s, a, c, l, d, u, h, f) {
                            super(e, i, r, o, s, a, c, l, d, u, h, f),
                            this._tooltipComponent = Q3,
                            this._cssClassPrefix = "mat-mdc",
                            this._viewportMargin = 8
                        }
                        _addOffset(e) {
                            const r = !this._dir || "ltr" == this._dir.value;
                            return "top" === e.originY ? e.offsetY = -8 : "bottom" === e.originY ? e.offsetY = 8 : "start" === e.originX ? e.offsetX = r ? -8 : 8 : "end" === e.originX && (e.offsetX = r ? 8 : -8),
                            e
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(ar), p(se), p(qa), p(Yt), p(X), p(_t), p(hj), p(rr), p(OM), p(hs, 8), p(z3, 8), p(Q))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["", "matTooltip", ""]],
                        hostAttrs: [1, "mat-mdc-tooltip-trigger"],
                        exportAs: ["matTooltip"],
                        features: [H]
                    }),
                    n
                })(),
                X3 = (() => {
                    class n {
                        constructor(e, i) {
                            this._changeDetectorRef = e,
                            this._closeOnInteraction = !1,
                            this._isVisible = !1,
                            this._onHide = new K,
                            this._animationsDisabled = "NoopAnimations" === i
                        }
                        show(e) {
                            clearTimeout(this._hideTimeoutId),
                            this._showTimeoutId = setTimeout(() => {
                                this._toggleVisibility(!0),
                                this._showTimeoutId = void 0
                            }, e)
                        }
                        hide(e) {
                            clearTimeout(this._showTimeoutId),
                            this._hideTimeoutId = setTimeout(() => {
                                this._toggleVisibility(!1),
                                this._hideTimeoutId = void 0
                            }, e)
                        }
                        afterHidden() {
                            return this._onHide
                        }
                        isVisible() {
                            return this._isVisible
                        }
                        ngOnDestroy() {
                            this._cancelPendingAnimations(),
                            this._onHide.complete(),
                            this._triggerElement = null
                        }
                        _handleBodyInteraction() {
                            this._closeOnInteraction && this.hide(0)
                        }
                        _markForCheck() {
                            this._changeDetectorRef.markForCheck()
                        }
                        _handleMouseLeave({
                            relatedTarget: e
                        }) {
                            (!e || !this._triggerElement.contains(e)) && (this.isVisible() ? this.hide(this._mouseLeaveHideDelay) : this._finalizeAnimation(!1))
                        }
                        _onShow() {}
                        _handleAnimationEnd({
                            animationName: e
                        }) {
                            (e === this._showAnimation || e === this._hideAnimation) && this._finalizeAnimation(e === this._showAnimation)
                        }
                        _cancelPendingAnimations() {
                            clearTimeout(this._showTimeoutId),
                            clearTimeout(this._hideTimeoutId),
                            this._showTimeoutId = this._hideTimeoutId = void 0
                        }
                        _finalizeAnimation(e) {
                            e ? this._closeOnInteraction = !0 : this.isVisible() || this._onHide.next()
                        }
                        _toggleVisibility(e) {
                            const i = this._tooltip.nativeElement,
                            r = this._showAnimation,
                            o = this._hideAnimation;
                            if (i.classList.remove(e ? o : r), i.classList.add(e ? r : o), this._isVisible = e, e && !this._animationsDisabled && "function" == typeof getComputedStyle) {
                                const s = getComputedStyle(i);
                                ("0s" === s.getPropertyValue("animation-duration") || "none" === s.getPropertyValue("animation-name")) && (this._animationsDisabled = !0)
                            }
                            e && this._onShow(),
                            this._animationsDisabled && (i.classList.add("_mat-animation-noopable"), this._finalizeAnimation(e))
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p($t), p(yt, 8))
                    },
                    n. \u0275dir = N({
                        type: n
                    }),
                    n
                })(),
                Q3 = (() => {
                    class n extends X3 {
                        constructor(e, i, r) {
                            super(e, r),
                            this._elementRef = i,
                            this._isMultiline = !1,
                            this._showAnimation = "mat-mdc-tooltip-show",
                            this._hideAnimation = "mat-mdc-tooltip-hide"
                        }
                        _onShow() {
                            this._isMultiline = this._isTooltipMultiline(),
                            this._markForCheck()
                        }
                        _isTooltipMultiline() {
                            const e = this._elementRef.nativeElement.getBoundingClientRect();
                            return e.height > 24 && e.width >= 200
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p($t), p(se), p(yt, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-tooltip-component"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(B3, 7), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._tooltip = r.first)
                            }
                        },
                        hostAttrs: ["aria-hidden", "true"],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            1 & e && O("mouseleave", function (o) {
                                return i._handleMouseLeave(o)
                            }),
                            2 & e && oi("zoom", i.isVisible() ? 1 : null)
                        },
                        features: [H],
                        decls: 4,
                        vars: 4,
                        consts: [[1, "mdc-tooltip", "mdc-tooltip--shown", "mat-mdc-tooltip", 3, "ngClass", "animationend"], ["tooltip", ""], [1, "mdc-tooltip__surface", "mdc-tooltip__surface-animation"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0, 1), O("animationend", function (o) {
                                    return i._handleAnimationEnd(o)
                                }), g(2, "div", 2), S(3), b()()),
                            2 & e && (be("mdc-tooltip--multiline", i._isMultiline), y("ngClass", i.tooltipClass), w(3), jn(i.message))
                        },
                        dependencies: [Gn],
                        styles: ['.mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:"";top:-8px;right:-8px;bottom:-8px;left:-8px;z-index:-1;position:absolute}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                J3 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [U3],
                        imports: [sE, is, _g, ct, ct, Ka]
                    }),
                    n
                })();
                class vc {
                    _printInternalService;
                    _filterService;
                    _viewService;
                    constructor(t, e, i) {
                        this._printInternalService = t,
                        this._filterService = e,
                        this._viewService = i
                    }
                    ngOnInit() {}
                    isImageFiltered(t) {
                        return 0 === this._filterService.selectionFilterImage.selected.length || this._filterService.selectionFilterImage.selected.filter(e => t.includes(e.name)).length > 0
                    }
                    add() {
                        for (const t of this._viewService.view)
                            for (const e of t.files)
                                for (const i of e.files.images)
                                    this.isImageFiltered(i.types) && this._printInternalService.add(i)
                    }
                    static \u0275fac = function (e) {
                        return new(e || vc)(p(ui), p(Yn), p(Ss))
                    };
                    static \u0275cmp = Z({
                        type: vc,
                        selectors: [["app-add-all"]],
                        decls: 3,
                        vars: 0,
                        consts: [["mat-icon-button", "", "matTooltip", "Add all filtered images to print.", 3, "click"]],
                        template: function (e, i) {
                            1 & e && (g(0, "button", 0), O("click", function () {
                                    return i.add()
                                }), g(1, "mat-icon"), S(2, "library_add"), b()())
                        },
                        dependencies: [mE, xt, o_],
                        styles: [".mat-mini-fab[_ngcontent-%COMP%]{background-color:transparent!important;border-radius:50%;margin-left:8px}"]
                    })
                }
                const e$ = ["filterInput"];
                class yc {
                    _filterService;
                    input = null;
                    constructor(t) {
                        this._filterService = t
                    }
                    ngAfterViewInit() {
                        null !== this.input && (this.input.nativeElement.value = this._filterService.selectedFilter, Pi(this.input.nativeElement, "keyup").pipe(ve(Boolean), ja(300), Ha()).subscribe(() => {
                                this._filterService.selectedFilter = this.input?.nativeElement?.value
                            }))
                    }
                    clearFilterInput() {
                        this.input?.nativeElement?.value && (this.input.nativeElement.value = ""),
                        this._filterService.selectedFilter = ""
                    }
                    static \u0275fac = function (e) {
                        return new(e || yc)(p(Yn))
                    };
                    static \u0275cmp = Z({
                        type: yc,
                        selectors: [["app-global-filter-input"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(e$, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i.input = r.first)
                            }
                        },
                        decls: 6,
                        vars: 0,
                        consts: [[1, "input-filter-outer"], ["placeholder", "Filter", 1, "input-filter"], ["filterInput", ""], ["mat-mini-fab", "", 3, "click"], [1, "icon"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0), V(1, "input", 1, 2), g(3, "button", 3), O("click", function () {
                                    return i.clearFilterInput()
                                }), g(4, "mat-icon", 4), S(5, "clear"), b()()())
                        },
                        dependencies: [sr, xt],
                        styles: [".input-filter-outer[_ngcontent-%COMP%]{display:flex;border:1px solid rgb(255,255,255);border-radius:16px;width:278px;background-color:#000}.input-filter[_ngcontent-%COMP%]{border:none;background-color:transparent;resize:none;outline:none;color:#fff;font-size:18px;margin:0 12px 0 8px;border-top-left-radius:16px;border-bottom-left-radius:16px}.mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%]{background-color:#00000080;width:28px;height:28px;margin:2px}.icon[_ngcontent-%COMP%]{color:red;background-color:transparent}"]
                    })
                }
                let t$ = 0;
                const s_ = new T("CdkAccordion");
                let n$ = (() => {
                    class n {
                        constructor() {
                            this._stateChanges = new K,
                            this._openCloseAllActions = new K,
                            this.id = "cdk-accordion-" + t$++,
                            this._multi = !1
                        }
                        get multi() {
                            return this._multi
                        }
                        set multi(e) {
                            this._multi = Ne(e)
                        }
                        openAll() {
                            this._multi && this._openCloseAllActions.next(!0)
                        }
                        closeAll() {
                            this._openCloseAllActions.next(!1)
                        }
                        ngOnChanges(e) {
                            this._stateChanges.next(e)
                        }
                        ngOnDestroy() {
                            this._stateChanges.complete(),
                            this._openCloseAllActions.complete()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["cdk-accordion"], ["", "cdkAccordion", ""]],
                        inputs: {
                            multi: "multi"
                        },
                        exportAs: ["cdkAccordion"],
                        features: [ge([{
                                        provide: s_,
                                        useExisting: n
                                    }
                                ]), Ft]
                    }),
                    n
                })(),
                i$ = 0,
                r$ = (() => {
                    class n {
                        constructor(e, i, r) {
                            this.accordion = e,
                            this._changeDetectorRef = i,
                            this._expansionDispatcher = r,
                            this._openCloseAllSubscription = nt.EMPTY,
                            this.closed = new re,
                            this.opened = new re,
                            this.destroyed = new re,
                            this.expandedChange = new re,
                            this.id = "cdk-accordion-child-" + i$++,
                            this._expanded = !1,
                            this._disabled = !1,
                            this._removeUniqueSelectionListener = () => {},
                            this._removeUniqueSelectionListener = r.listen((o, s) => {
                                this.accordion && !this.accordion.multi && this.accordion.id === s && this.id !== o && (this.expanded = !1)
                            }),
                            this.accordion && (this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions())
                        }
                        get expanded() {
                            return this._expanded
                        }
                        set expanded(e) {
                            e = Ne(e),
                            this._expanded !== e && (this._expanded = e, this.expandedChange.emit(e), e ? (this.opened.emit(), this._expansionDispatcher.notify(this.id, this.accordion ? this.accordion.id : this.id)) : this.closed.emit(), this._changeDetectorRef.markForCheck())
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = Ne(e)
                        }
                        ngOnDestroy() {
                            this.opened.complete(),
                            this.closed.complete(),
                            this.destroyed.emit(),
                            this.destroyed.complete(),
                            this._removeUniqueSelectionListener(),
                            this._openCloseAllSubscription.unsubscribe()
                        }
                        toggle() {
                            this.disabled || (this.expanded = !this.expanded)
                        }
                        close() {
                            this.disabled || (this.expanded = !1)
                        }
                        open() {
                            this.disabled || (this.expanded = !0)
                        }
                        _subscribeToOpenCloseAllActions() {
                            return this.accordion._openCloseAllActions.subscribe(e => {
                                this.disabled || (this.expanded = e)
                            })
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(s_, 12), p($t), p(i_))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["cdk-accordion-item"], ["", "cdkAccordionItem", ""]],
                        inputs: {
                            expanded: "expanded",
                            disabled: "disabled"
                        },
                        outputs: {
                            closed: "closed",
                            opened: "opened",
                            destroyed: "destroyed",
                            expandedChange: "expandedChange"
                        },
                        exportAs: ["cdkAccordionItem"],
                        features: [ge([{
                                        provide: s_,
                                        useValue: void 0
                                    }
                                ])]
                    }),
                    n
                })(),
                o$ = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })();
                const s$ = ["body"];
                function a$(n, t) {}
                const c$ = [[["mat-expansion-panel-header"]], "*", [["mat-action-row"]]],
                l$ = ["mat-expansion-panel-header", "*", "mat-action-row"];
                function d$(n, t) {
                    1 & n && V(0, "span", 2),
                    2 & n && y("@indicatorRotate", $()._getExpandedState())
                }
                const u$ = [[["mat-panel-title"]], [["mat-panel-description"]], "*"],
                h$ = ["mat-panel-title", "mat-panel-description", "*"],
                a_ = new T("MAT_ACCORDION"),
                FM = "225ms cubic-bezier(0.4,0.0,0.2,1)",
                NM = {
                    indicatorRotate: Qa("indicatorRotate", [hi("collapsed, void", Xt({
                                    transform: "rotate(0deg)"
                                })), hi("expanded", Xt({
                                    transform: "rotate(180deg)"
                                })), lr("expanded <=> collapsed, void => collapsed", cr(FM))]),
                    bodyExpansion: Qa("bodyExpansion", [hi("collapsed, void", Xt({
                                    height: "0px",
                                    visibility: "hidden"
                                })), hi("expanded", Xt({
                                    height: "*",
                                    visibility: "visible"
                                })), lr("expanded <=> collapsed, void => collapsed", cr(FM))])
                },
                LM = new T("MAT_EXPANSION_PANEL");
                let f$ = (() => {
                    class n {
                        constructor(e, i) {
                            this._template = e,
                            this._expansionPanel = i
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(Un), p(LM, 8))
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["ng-template", "matExpansionPanelContent", ""]]
                    }),
                    n
                })(),
                p$ = 0;
                const VM = new T("MAT_EXPANSION_PANEL_DEFAULT_OPTIONS");
                let wc = (() => {
                    class n extends r$ {
                        constructor(e, i, r, o, s, a, c) {
                            super(e, i, r),
                            this._viewContainerRef = o,
                            this._animationMode = a,
                            this._hideToggle = !1,
                            this.afterExpand = new re,
                            this.afterCollapse = new re,
                            this._inputChanges = new K,
                            this._headerId = "mat-expansion-panel-header-" + p$++,
                            this._bodyAnimationDone = new K,
                            this.accordion = e,
                            this._document = s,
                            this._bodyAnimationDone.pipe(Ha((l, d) => l.fromState === d.fromState && l.toState === d.toState)).subscribe(l => {
                                "void" !== l.fromState && ("expanded" === l.toState ? this.afterExpand.emit() : "collapsed" === l.toState && this.afterCollapse.emit())
                            }),
                            c && (this.hideToggle = c.hideToggle)
                        }
                        get hideToggle() {
                            return this._hideToggle || this.accordion && this.accordion.hideToggle
                        }
                        set hideToggle(e) {
                            this._hideToggle = Ne(e)
                        }
                        get togglePosition() {
                            return this._togglePosition || this.accordion && this.accordion.togglePosition
                        }
                        set togglePosition(e) {
                            this._togglePosition = e
                        }
                        _hasSpacing() {
                            return !!this.accordion && this.expanded && "default" === this.accordion.displayMode
                        }
                        _getExpandedState() {
                            return this.expanded ? "expanded" : "collapsed"
                        }
                        toggle() {
                            this.expanded = !this.expanded
                        }
                        close() {
                            this.expanded = !1
                        }
                        open() {
                            this.expanded = !0
                        }
                        ngAfterContentInit() {
                            this._lazyContent && this._lazyContent._expansionPanel === this && this.opened.pipe(ir(null), ve(() => this.expanded && !this._portal), Ge(1)).subscribe(() => {
                                this._portal = new pg(this._lazyContent._template, this._viewContainerRef)
                            })
                        }
                        ngOnChanges(e) {
                            this._inputChanges.next(e)
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(),
                            this._bodyAnimationDone.complete(),
                            this._inputChanges.complete()
                        }
                        _containsFocus() {
                            if (this._body) {
                                const e = this._document.activeElement,
                                i = this._body.nativeElement;
                                return e === i || i.contains(e)
                            }
                            return !1
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(a_, 12), p($t), p(i_), p(Yt), p(Q), p(yt, 8), p(VM, 8))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-expansion-panel"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && ci(r, f$, 5), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._lazyContent = o.first)
                            }
                        },
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(s$, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._body = r.first)
                            }
                        },
                        hostAttrs: [1, "mat-expansion-panel"],
                        hostVars: 6,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-expanded", i.expanded)("_mat-animation-noopable", "NoopAnimations" === i._animationMode)("mat-expansion-panel-spacing", i._hasSpacing())
                        },
                        inputs: {
                            disabled: "disabled",
                            expanded: "expanded",
                            hideToggle: "hideToggle",
                            togglePosition: "togglePosition"
                        },
                        outputs: {
                            opened: "opened",
                            closed: "closed",
                            expandedChange: "expandedChange",
                            afterExpand: "afterExpand",
                            afterCollapse: "afterCollapse"
                        },
                        exportAs: ["matExpansionPanel"],
                        features: [ge([{
                                        provide: a_,
                                        useValue: void 0
                                    }, {
                                        provide: LM,
                                        useExisting: n
                                    }
                                ]), H, Ft],
                        ngContentSelectors: l$,
                        decls: 7,
                        vars: 4,
                        consts: [["role", "region", 1, "mat-expansion-panel-content", 3, "id"], ["body", ""], [1, "mat-expansion-panel-body"], [3, "cdkPortalOutlet"]],
                        template: function (e, i) {
                            1 & e && (vt(c$), ye(0), g(1, "div", 0, 1), O("@bodyExpansion.done", function (o) {
                                    return i._bodyAnimationDone.next(o)
                                }), g(3, "div", 2), ye(4, 1), I(5, a$, 0, 0, "ng-template", 3), b(), ye(6, 2), b()),
                            2 & e && (w(1), y("@bodyExpansion", i._getExpandedState())("id", i.id), Ee("aria-labelledby", i._headerId), w(4), y("cdkPortalOutlet", i._portal))
                        },
                        dependencies: [Pd],
                        styles: ['.mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-content[style*="visibility: hidden"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}'],
                        encapsulation: 2,
                        data: {
                            animation: [NM.bodyExpansion]
                        },
                        changeDetection: 0
                    }),
                    n
                })();
                class m$ {}
                const g$ = rg(m$);
                let Cc = (() => {
                    class n extends g$ {
                        constructor(e, i, r, o, s, a, c) {
                            super(),
                            this.panel = e,
                            this._element = i,
                            this._focusMonitor = r,
                            this._changeDetectorRef = o,
                            this._animationMode = a,
                            this._parentChangeSubscription = nt.EMPTY;
                            const l = e.accordion ? e.accordion._stateChanges.pipe(ve(d => !(!d.hideToggle && !d.togglePosition))) : Xn;
                            this.tabIndex = parseInt(c || "") || 0,
                            this._parentChangeSubscription = Cr(e.opened, e.closed, l, e._inputChanges.pipe(ve(d => !!(d.hideToggle || d.disabled || d.togglePosition)))).subscribe(() => this._changeDetectorRef.markForCheck()),
                            e.closed.pipe(ve(() => e._containsFocus())).subscribe(() => r.focusVia(i, "program")),
                            s && (this.expandedHeight = s.expandedHeight, this.collapsedHeight = s.collapsedHeight)
                        }
                        get disabled() {
                            return this.panel.disabled
                        }
                        _toggle() {
                            this.disabled || this.panel.toggle()
                        }
                        _isExpanded() {
                            return this.panel.expanded
                        }
                        _getExpandedState() {
                            return this.panel._getExpandedState()
                        }
                        _getPanelId() {
                            return this.panel.id
                        }
                        _getTogglePosition() {
                            return this.panel.togglePosition
                        }
                        _showToggle() {
                            return !this.panel.hideToggle && !this.panel.disabled
                        }
                        _getHeaderHeight() {
                            const e = this._isExpanded();
                            return e && this.expandedHeight ? this.expandedHeight : !e && this.collapsedHeight ? this.collapsedHeight : null
                        }
                        _keydown(e) {
                            switch (e.keyCode) {
                            case 32:
                            case 13:
                                as(e) || (e.preventDefault(), this._toggle());
                                break;
                            default:
                                return void(this.panel.accordion && this.panel.accordion._handleHeaderKeydown(e))
                            }
                        }
                        focus(e, i) {
                            e ? this._focusMonitor.focusVia(this._element, e, i) : this._element.nativeElement.focus(i)
                        }
                        ngAfterViewInit() {
                            this._focusMonitor.monitor(this._element).subscribe(e => {
                                e && this.panel.accordion && this.panel.accordion._handleHeaderFocus(this)
                            })
                        }
                        ngOnDestroy() {
                            this._parentChangeSubscription.unsubscribe(),
                            this._focusMonitor.stopMonitoring(this._element)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(wc, 1), p(se), p(rr), p($t), p(VM, 8), p(yt, 8), Gi("tabindex"))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-expansion-panel-header"]],
                        hostAttrs: ["role", "button", 1, "mat-expansion-panel-header", "mat-focus-indicator"],
                        hostVars: 15,
                        hostBindings: function (e, i) {
                            1 & e && O("click", function () {
                                return i._toggle()
                            })("keydown", function (o) {
                                return i._keydown(o)
                            }),
                            2 & e && (Ee("id", i.panel._headerId)("tabindex", i.tabIndex)("aria-controls", i._getPanelId())("aria-expanded", i._isExpanded())("aria-disabled", i.panel.disabled), oi("height", i._getHeaderHeight()), be("mat-expanded", i._isExpanded())("mat-expansion-toggle-indicator-after", "after" === i._getTogglePosition())("mat-expansion-toggle-indicator-before", "before" === i._getTogglePosition())("_mat-animation-noopable", "NoopAnimations" === i._animationMode))
                        },
                        inputs: {
                            tabIndex: "tabIndex",
                            expandedHeight: "expandedHeight",
                            collapsedHeight: "collapsedHeight"
                        },
                        features: [H],
                        ngContentSelectors: h$,
                        decls: 5,
                        vars: 3,
                        consts: [[1, "mat-content"], ["class", "mat-expansion-indicator", 4, "ngIf"], [1, "mat-expansion-indicator"]],
                        template: function (e, i) {
                            1 & e && (vt(u$), g(0, "span", 0), ye(1), ye(2, 1), ye(3, 2), b(), I(4, d$, 1, 1, "span", 1)),
                            2 & e && (be("mat-content-hide-toggle", !i._showToggle()), w(4), y("ngIf", i._showToggle()))
                        },
                        dependencies: [Zt],
                        styles: ['.mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:"";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}'],
                        encapsulation: 2,
                        data: {
                            animation: [NM.indicatorRotate]
                        },
                        changeDetection: 0
                    }),
                    n
                })(),
                gu = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["mat-panel-title"]],
                        hostAttrs: [1, "mat-expansion-panel-header-title"]
                    }),
                    n
                })(),
                c_ = (() => {
                    class n extends n$ {
                        constructor() {
                            super(...arguments),
                            this._ownHeaders = new jr,
                            this._hideToggle = !1,
                            this.displayMode = "default",
                            this.togglePosition = "after"
                        }
                        get hideToggle() {
                            return this._hideToggle
                        }
                        set hideToggle(e) {
                            this._hideToggle = Ne(e)
                        }
                        ngAfterContentInit() {
                            this._headers.changes.pipe(ir(this._headers)).subscribe(e => {
                                this._ownHeaders.reset(e.filter(i => i.panel.accordion === this)),
                                this._ownHeaders.notifyOnChanges()
                            }),
                            this._keyManager = new pj(this._ownHeaders).withWrap().withHomeAndEnd()
                        }
                        _handleHeaderKeydown(e) {
                            this._keyManager.onKeydown(e)
                        }
                        _handleHeaderFocus(e) {
                            this._keyManager.updateActiveItem(e)
                        }
                        ngOnDestroy() {
                            super.ngOnDestroy(),
                            this._keyManager?.destroy(),
                            this._ownHeaders.destroy()
                        }
                    }
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["mat-accordion"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && ci(r, Cc, 5), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._headers = o)
                            }
                        },
                        hostAttrs: [1, "mat-accordion"],
                        hostVars: 2,
                        hostBindings: function (e, i) {
                            2 & e && be("mat-accordion-multi", i.multi)
                        },
                        inputs: {
                            multi: "multi",
                            hideToggle: "hideToggle",
                            displayMode: "displayMode",
                            togglePosition: "togglePosition"
                        },
                        exportAs: ["matAccordion"],
                        features: [ge([{
                                        provide: a_,
                                        useExisting: n
                                    }
                                ]), H]
                    }),
                    n
                })(),
                _$ = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [is, ct, o$, Za]
                    }),
                    n
                })();
                function b$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function v$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function y$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function w$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function C$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function D$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function x$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function E$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function S$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function M$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function T$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function A$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                const Ms = function (n) {
                    return {
                        selected: n
                    }
                };
                class _u {
                    _groupService;
                    _enumOrientationAll = Le;
                    _enumGroupAll = Jt;
                    _enumGroupTypeSelected = Jt.NONE;
                    _enumGroupOrientationSelected = Le.NONE;
                    constructor(t) {
                        this._groupService = t
                    }
                    ngOnInit() {
                        this._groupService.selectedGroupTypeObservable.subscribe(t => {
                            this._enumGroupTypeSelected = t
                        }),
                        this._groupService.selectedGroupOrientationObservable.subscribe(t => {
                            this._enumGroupOrientationSelected = t
                        })
                    }
                    selectGrouping(t) {
                        this._groupService.selectedGroupType === Jt.NONE || this._groupService.selectedGroupType !== t ? (this._groupService.selectedGroupType = t, this._groupService.selectedGroupOrientation = Le.ASC) : this._groupService.selectedGroupOrientation === Le.ASC ? this._groupService.selectedGroupOrientation = Le.DESC : (this._groupService.selectedGroupType = Jt.NONE, this._groupService.selectedGroupOrientation = Le.NONE)
                    }
                    get groupTypeSelected() {
                        return this._enumGroupTypeSelected
                    }
                    get groupOrientationSelected() {
                        return this._enumGroupOrientationSelected
                    }
                    get enumGroupAll() {
                        return this._enumGroupAll
                    }
                    get enumOrientationAll() {
                        return this._enumOrientationAll
                    }
                    static \u0275fac = function (e) {
                        return new(e || _u)(p(Es))
                    };
                    static \u0275cmp = Z({
                        type: _u,
                        selectors: [["app-group-select"]],
                        decls: 28,
                        vars: 30,
                        consts: [["hideToggle", "", "expanded", "true"], [1, "clickable", 3, "ngClass", "click"], [4, "ngIf"]],
                        template: function (e, i) {
                            1 & e && (g(0, "mat-expansion-panel", 0)(1, "mat-expansion-panel-header")(2, "mat-panel-title"), S(3, "Group"), b()(), g(4, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.GAME)
                                }), S(5, " Games "), I(6, b$, 2, 0, "mat-icon", 2), I(7, v$, 2, 0, "mat-icon", 2), b(), g(8, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.YEAR)
                                }), S(9, " Years "), I(10, y$, 2, 0, "mat-icon", 2), I(11, w$, 2, 0, "mat-icon", 2), b(), g(12, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.ELEMENT)
                                }), S(13, " Elements "), I(14, C$, 2, 0, "mat-icon", 2), I(15, D$, 2, 0, "mat-icon", 2), b(), g(16, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.CATEGORY)
                                }), S(17, " Categories "), I(18, x$, 2, 0, "mat-icon", 2), I(19, E$, 2, 0, "mat-icon", 2), b(), g(20, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.NAME)
                                }), S(21, " Names A-Z "), I(22, S$, 2, 0, "mat-icon", 2), I(23, M$, 2, 0, "mat-icon", 2), b(), g(24, "div", 1), O("click", function () {
                                    return i.selectGrouping(i.enumGroupAll.TYPE)
                                }), S(25, " Types "), I(26, T$, 2, 0, "mat-icon", 2), I(27, A$, 2, 0, "mat-icon", 2), b()()),
                            2 & e && (w(4), y("ngClass", jt(18, Ms, i.groupTypeSelected === i.enumGroupAll.GAME)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.GAME && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.GAME && i.groupOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(20, Ms, i.groupTypeSelected === i.enumGroupAll.YEAR)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.YEAR && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.YEAR && i.groupOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(22, Ms, i.groupTypeSelected === i.enumGroupAll.ELEMENT)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.ELEMENT && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.ELEMENT && i.groupOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(24, Ms, i.groupTypeSelected === i.enumGroupAll.CATEGORY)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.CATEGORY && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.CATEGORY && i.groupOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(26, Ms, i.groupTypeSelected === i.enumGroupAll.NAME)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.NAME && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.NAME && i.groupOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(28, Ms, i.groupTypeSelected === i.enumGroupAll.TYPE)), w(2), y("ngIf", i.groupTypeSelected === i.enumGroupAll.TYPE && i.groupOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.groupTypeSelected === i.enumGroupAll.TYPE && i.groupOrientationSelected === i.enumOrientationAll.DESC))
                        },
                        dependencies: [Gn, Zt, wc, Cc, gu, xt],
                        styles: ["div[_ngcontent-%COMP%]{padding:0 8px;display:flex;align-items:center;justify-content:space-between;height:36px}div.clickable[_ngcontent-%COMP%]{cursor:pointer}div.clickable.selected[_ngcontent-%COMP%]{background-color:#0000001a}div.clickable[_ngcontent-%COMP%]:hover{color:#ffa500b3;background-color:#000}"]
                    })
                }
                function k$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function I$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function O$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function R$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function P$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function F$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function N$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function L$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function V$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function B$(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                const Dc = function (n) {
                    return {
                        selected: n
                    }
                };
                class bu {
                    _parameterService;
                    _sortService;
                    _enumOrientationAll = Le;
                    _enumSortAll = Kn;
                    _hasParameterShowNfcTags = !1;
                    constructor(t, e) {
                        this._parameterService = t,
                        this._sortService = e
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    selectSorting(t) {
                        this._sortService.selectedSortType !== t ? (this._sortService.selectedSortType = t, this._sortService.selectedSortOrientation = Le.ASC) : this._sortService.selectedSortOrientation = this._sortService.selectedSortOrientation === Le.ASC ? Le.DESC : Le.ASC
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get enumSortAll() {
                        return this._enumSortAll
                    }
                    get enumOrientationAll() {
                        return this._enumOrientationAll
                    }
                    get sortTypeSelected() {
                        return this._sortService.selectedSortType
                    }
                    get sortOrientationSelected() {
                        return this._sortService.selectedSortOrientation
                    }
                    static \u0275fac = function (e) {
                        return new(e || bu)(p(Sn), p(oo))
                    };
                    static \u0275cmp = Z({
                        type: bu,
                        selectors: [["app-sort-area"]],
                        decls: 24,
                        vars: 25,
                        consts: [["hideToggle", "", "expanded", "true"], [1, "clickable", 3, "ngClass", "click"], [4, "ngIf"]],
                        template: function (e, i) {
                            1 & e && (g(0, "mat-expansion-panel", 0)(1, "mat-expansion-panel-header")(2, "mat-panel-title"), S(3, "Sort"), b()(), g(4, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.GAME)
                                }), S(5, " Games "), I(6, k$, 2, 0, "mat-icon", 2), I(7, I$, 2, 0, "mat-icon", 2), b(), g(8, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.ELEMENT)
                                }), S(9, " Elements "), I(10, O$, 2, 0, "mat-icon", 2), I(11, R$, 2, 0, "mat-icon", 2), b(), g(12, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.CATEGORY)
                                }), S(13, " Categories "), I(14, P$, 2, 0, "mat-icon", 2), I(15, F$, 2, 0, "mat-icon", 2), b(), g(16, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.NAME)
                                }), S(17, " Names "), I(18, N$, 2, 0, "mat-icon", 2), I(19, L$, 2, 0, "mat-icon", 2), b(), g(20, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.TYPE)
                                }), S(21, " Types "), I(22, V$, 2, 0, "mat-icon", 2), I(23, B$, 2, 0, "mat-icon", 2), b()()),
                            2 & e && (w(4), y("ngClass", jt(15, Dc, i.sortTypeSelected === i.enumSortAll.GAME)), w(2), y("ngIf", i.sortTypeSelected === i.enumSortAll.GAME && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.GAME && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(17, Dc, i.sortTypeSelected === i.enumSortAll.ELEMENT)), w(2), y("ngIf", i.sortTypeSelected === i.enumSortAll.ELEMENT && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.ELEMENT && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(19, Dc, i.sortTypeSelected === i.enumSortAll.CATEGORY)), w(2), y("ngIf", i.sortTypeSelected === i.enumSortAll.CATEGORY && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.CATEGORY && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(21, Dc, i.sortTypeSelected === i.enumSortAll.NAME)), w(2), y("ngIf", i.sortTypeSelected === i.enumSortAll.NAME && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.NAME && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngClass", jt(23, Dc, i.sortTypeSelected === i.enumSortAll.TYPE)), w(2), y("ngIf", i.sortTypeSelected === i.enumSortAll.TYPE && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.TYPE && i.sortOrientationSelected === i.enumOrientationAll.DESC))
                        },
                        dependencies: [Gn, Zt, wc, Cc, gu, xt],
                        styles: ["div[_ngcontent-%COMP%]{padding:0 8px;display:flex;align-items:center;justify-content:space-between;height:36px}div.clickable[_ngcontent-%COMP%]{cursor:pointer}div.clickable.selected[_ngcontent-%COMP%]{background-color:#0000001a}div.clickable[_ngcontent-%COMP%]:hover{color:#ffa500b3;background-color:#000}"]
                    })
                }
                class vu {
                    _isVisibleState = !1;
                    set isVisible(t) {
                        this._isVisibleState = t
                    }
                    isVisibleChange = new re;
                    constructor() {}
                    ngOnInit() {}
                    close() {
                        this.isVisibleState = !1,
                        this.isVisibleChange.emit(this._isVisibleState)
                    }
                    set isVisibleState(t) {
                        this._isVisibleState = t
                    }
                    get isVisibleState() {
                        return this._isVisibleState
                    }
                    static \u0275fac = function (e) {
                        return new(e || vu)
                    };
                    static \u0275cmp = Z({
                        type: vu,
                        selectors: [["app-sidenav-left"]],
                        inputs: {
                            isVisible: "isVisible"
                        },
                        outputs: {
                            isVisibleChange: "isVisibleChange"
                        },
                        decls: 8,
                        vars: 0,
                        consts: [[1, "sidenav"], [1, "title", "mat-elevation-z20"], ["mat-button", "", 1, "close", 3, "click"], ["multi", ""]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "div", 1)(2, "button", 2), O("click", function () {
                                    return i.close()
                                }), g(3, "mat-icon"), S(4, "clear"), b()()(), g(5, "mat-accordion", 3), V(6, "app-sort-area")(7, "app-group-select"), b()())
                        },
                        dependencies: [lg, c_, xt, _u, bu],
                        styles: [".sidenav[_ngcontent-%COMP%]{min-width:250px;width:100%}.title[_ngcontent-%COMP%]{position:sticky;top:0;z-index:1;padding:0 8px 0 16px;display:flex;justify-content:flex-end;align-items:center;background-color:#000;height:60px}.title[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{cursor:pointer;width:36px;min-width:36px;line-height:36px;border-radius:50%;padding:0}.title[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:red}@media screen and (width > 969px){app-sort-area[_ngcontent-%COMP%]{display:none}}"]
                    })
                }
                const j$ = ["filterInput"];
                class yu {
                    input = null;
                    filterTextChangeEvent = new re;
                    constructor() {}
                    ngAfterViewInit() {
                        null !== this.input && (this.input.nativeElement.value = "", Pi(this.input.nativeElement, "keyup").pipe(ve(Boolean), ja(300), Ha()).subscribe(() => {
                                this.filterTextChangeEvent.emit(this.input?.nativeElement.value)
                            }))
                    }
                    clearFilterInput() {
                        this.input?.nativeElement?.value && (this.input.nativeElement.value = ""),
                        this.filterTextChangeEvent.emit("")
                    }
                    static \u0275fac = function (e) {
                        return new(e || yu)
                    };
                    static \u0275cmp = Z({
                        type: yu,
                        selectors: [["app-header-filter-input"]],
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(j$, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i.input = r.first)
                            }
                        },
                        outputs: {
                            filterTextChangeEvent: "filterTextChangeEvent"
                        },
                        decls: 6,
                        vars: 0,
                        consts: [[1, "input-filter-outer"], ["placeholder", "Filter", 1, "input-filter"], ["filterInput", ""], ["mat-mini-fab", "", 3, "click"], [1, "icon"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0), V(1, "input", 1, 2), g(3, "button", 3), O("click", function () {
                                    return i.clearFilterInput()
                                }), g(4, "mat-icon", 4), S(5, "clear"), b()()())
                        },
                        dependencies: [sr, xt],
                        styles: [".input-filter-outer[_ngcontent-%COMP%]{display:flex;border:1px solid rgb(255,255,255);border-radius:16px;background-color:#000000f5}.input-filter[_ngcontent-%COMP%]{border:none;background-color:transparent;resize:none;outline:none;color:#fff;font-size:18px;margin:0 12px 0 8px;border-top-left-radius:16px;border-bottom-left-radius:16px}.mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%]{background-color:#00000080;width:28px;height:28px;margin:2px}.icon[_ngcontent-%COMP%]{color:red;background-color:transparent}"]
                    })
                }
                function H$(n, t) {
                    if (1 & n && (g(0, "span"), S(1), b()), 2 & n) {
                        const e = $().$implicit;
                        w(1),
                        jn(e.name ? e.name : "None")
                    }
                }
                function U$(n, t) {
                    if (1 & n && V(0, "img", 7), 2 & n) {
                        const e = $().$implicit;
                        Zi("src", null != e && null != e.imgSrc && e.imgSrc.url ? e.imgSrc.url : "", wn),
                        Zi("alt", e.name ? e.name : "None"),
                        y("ngStyle", null == e || null == e.imgSrc ? null : e.imgSrc.style)
                    }
                }
                const $$ = function (n) {
                    return {
                        selected: n
                    }
                };
                function z$(n, t) {
                    if (1 & n) {
                        const e = un();
                        ii(0),
                        g(1, "div", 4),
                        O("click", function () {
                            const o = He(e).$implicit;
                            return Ue($().onClick(o))
                        }),
                        I(2, H$, 2, 1, "span", 5),
                        I(3, U$, 1, 3, "img", 6),
                        b(),
                        ri()
                    }
                    if (2 & n) {
                        const e = t.$implicit,
                        i = $();
                        w(1),
                        Zi("matTooltip", null != e && null != e.imgSrc && e.imgSrc.url ? e.name ? e.name : "None" : ""),
                        y("ngClass", jt(4, $$, i.selection.isSelected(e))),
                        w(1),
                        y("ngIf", e && void 0 === e.imgSrc),
                        w(1),
                        y("ngIf", null == e || null == e.imgSrc ? null : e.imgSrc.url)
                    }
                }
                class xc {
                    _filterService;
                    _rawList = [];
                    _viewList = [];
                    _selection = new pr(!0, []);
                    set list(t) {
                        this._viewList = t,
                        this._rawList = t
                    }
                    set selection(t) {
                        this._selection = t
                    }
                    constructor(t) {
                        this._filterService = t
                    }
                    ngOnInit() {}
                    onClick(t) {
                        this._selection.toggle(t),
                        this._filterService.filtering()
                    }
                    filterTextChangeEvent(t) {
                        let i = t.toLowerCase().replaceAll(/[^a-zA-Z0-9]+/g, " ").trim();
                        for (; i != i.replace("  ", " ").trim(); )
                            i = i.replace("  ", " ").trim();
                        "" === i ? this._viewList = this._rawList : (this._viewList = [], this._rawList.forEach(r => {
                                    let o = !0;
                                    i.split(" ").forEach(s => {
                                        o = o && r.name.toLowerCase().includes(s)
                                    }),
                                    o && this._viewList.push(r)
                                }))
                    }
                    get viewList() {
                        return this._viewList
                    }
                    get selection() {
                        return this._selection
                    }
                    static \u0275fac = function (e) {
                        return new(e || xc)(p(Yn))
                    };
                    static \u0275cmp = Z({
                        type: xc,
                        selectors: [["app-filter-area"]],
                        inputs: {
                            list: "list",
                            selection: "selection"
                        },
                        decls: 4,
                        vars: 1,
                        consts: [[1, "filter-area"], [3, "filterTextChangeEvent"], [1, "outer"], [4, "ngFor", "ngForOf"], ["matTooltipClass", "mat-tooltip-style", 1, "element", 3, "ngClass", "matTooltip", "click"], [4, "ngIf"], ["style", "height: 32px", 3, "src", "alt", "ngStyle", 4, "ngIf"], [2, "height", "32px", 3, "src", "alt", "ngStyle"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "app-header-filter-input", 1), O("filterTextChangeEvent", function (o) {
                                    return i.filterTextChangeEvent(o)
                                }), b()(), g(2, "div", 2), I(3, z$, 4, 6, "ng-container", 3), b()),
                            2 & e && (w(3), y("ngForOf", i.viewList))
                        },
                        dependencies: [Gn, Qi, Zt, cm, o_, yu],
                        styles: [".filter-area[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;padding:40px 0 12px;pointer-events:none;position:sticky;top:0}.filter-area[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{pointer-events:stroke}.outer[_ngcontent-%COMP%]{margin:12px;display:flex;flex-wrap:wrap;gap:12px;justify-content:center}.element[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none;background-color:#000000f2;border:2px solid black;text-align:center;cursor:pointer;border-radius:8px;padding:8px 12px;display:flex;flex:auto;max-width:215px;justify-content:center;align-items:center}.element.selected[_ngcontent-%COMP%]{color:orange;border:2px solid orange}.element[_ngcontent-%COMP%]:hover{background-color:#c86e001a}"]
                    })
                }
                function G$(n, t) {
                    if (1 & n && (g(0, "mat-expansion-panel", 5)(1, "mat-expansion-panel-header")(2, "mat-panel-title"), S(3, "NFC-Tags"), b()(), V(4, "app-filter-area", 6), b()), 2 & n) {
                        const e = $();
                        w(4),
                        y("list", e.listNfcTags)("selection", e.selectionNfcTags)
                    }
                }
                class wu {
                    _filterService;
                    _parameterService;
                    _isVisibleState = !1;
                    _hasParameterShowNfcTags = !1;
                    set isVisible(t) {
                        this._isVisibleState = t
                    }
                    isVisibleChange = new re;
                    constructor(t, e) {
                        this._filterService = t,
                        this._parameterService = e
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    close() {
                        this.isVisibleState = !1,
                        this.isVisibleChange.emit(this._isVisibleState)
                    }
                    set isVisibleState(t) {
                        this._isVisibleState = t
                    }
                    get isVisibleState() {
                        return this._isVisibleState
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get listGame() {
                        return this._filterService.filterListGame
                    }
                    get selectionGame() {
                        return this._filterService.selectionFilterGame
                    }
                    get listElement() {
                        return this._filterService.filterListElement
                    }
                    get selectionElement() {
                        return this._filterService.selectionFilterElement
                    }
                    get listCategory() {
                        return this._filterService.filterListCategory
                    }
                    get selectionCategory() {
                        return this._filterService.selectionFilterCategory
                    }
                    get listName() {
                        return this._filterService.filterListName
                    }
                    get selectionName() {
                        return this._filterService.selectionFilterName
                    }
                    get listType() {
                        return this._filterService.filterListType
                    }
                    get selectionType() {
                        return this._filterService.selectionFilterType
                    }
                    get listImage() {
                        return this._filterService.filterListImage
                    }
                    get selectionImage() {
                        return this._filterService.selectionFilterImage
                    }
                    get listNfcTags() {
                        return this._filterService.filterListNfcTags
                    }
                    get selectionNfcTags() {
                        return this._filterService.selectionFilterNfcTags
                    }
                    static \u0275fac = function (e) {
                        return new(e || wu)(p(Yn), p(Sn))
                    };
                    static \u0275cmp = Z({
                        type: wu,
                        selectors: [["app-sidenav-right"]],
                        inputs: {
                            isVisible: "isVisible"
                        },
                        outputs: {
                            isVisibleChange: "isVisibleChange"
                        },
                        decls: 43,
                        vars: 13,
                        consts: [[1, "sidenav"], [1, "title", "mat-elevation-z20"], ["mat-button", "", 1, "close", 3, "click"], ["hideToggle", "", "expanded", "true"], [1, "global-filter"], ["hideToggle", ""], [3, "list", "selection"], ["hideToggle", "", 4, "ngIf"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "div", 1)(2, "button", 2), O("click", function () {
                                    return i.close()
                                }), g(3, "mat-icon"), S(4, "clear"), b()()(), g(5, "mat-accordion")(6, "mat-expansion-panel", 3)(7, "mat-expansion-panel-header")(8, "mat-panel-title"), S(9, "Main"), b()(), g(10, "div", 4), V(11, "app-global-filter-input"), b()(), g(12, "mat-expansion-panel", 5)(13, "mat-expansion-panel-header")(14, "mat-panel-title"), S(15, "Game"), b()(), V(16, "app-filter-area", 6), b(), g(17, "mat-expansion-panel", 5)(18, "mat-expansion-panel-header")(19, "mat-panel-title"), S(20, "Element"), b()(), V(21, "app-filter-area", 6), b(), g(22, "mat-expansion-panel", 5)(23, "mat-expansion-panel-header")(24, "mat-panel-title"), S(25, "Category"), b()(), V(26, "app-filter-area", 6), b(), g(27, "mat-expansion-panel", 5)(28, "mat-expansion-panel-header")(29, "mat-panel-title"), S(30, "Name"), b()(), V(31, "app-filter-area", 6), b(), g(32, "mat-expansion-panel", 5)(33, "mat-expansion-panel-header")(34, "mat-panel-title"), S(35, "Type"), b()(), V(36, "app-filter-area", 6), b(), I(37, G$, 5, 2, "mat-expansion-panel", 7), g(38, "mat-expansion-panel", 5)(39, "mat-expansion-panel-header")(40, "mat-panel-title"), S(41, "Images"), b()(), V(42, "app-filter-area", 6), b()()()),
                            2 & e && (w(16), y("list", i.listGame)("selection", i.selectionGame), w(5), y("list", i.listElement)("selection", i.selectionElement), w(5), y("list", i.listCategory)("selection", i.selectionCategory), w(5), y("list", i.listName)("selection", i.selectionName), w(5), y("list", i.listType)("selection", i.selectionType), w(1), y("ngIf", i.hasParameterShowNfcTags), w(5), y("list", i.listImage)("selection", i.selectionImage))
                        },
                        dependencies: [Zt, lg, c_, wc, Cc, gu, xt, xc, yc],
                        styles: [".sidenav[_ngcontent-%COMP%]{min-width:250px;width:100%}.title[_ngcontent-%COMP%]{position:sticky;top:0;z-index:1;padding:0 8px 0 16px;display:flex;justify-content:flex-end;align-items:center;background-color:#000;height:60px}.title[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{cursor:pointer;width:36px;min-width:36px;line-height:36px;border-radius:50%;padding:0}.title[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:red}.global-filter[_ngcontent-%COMP%]{padding:12px;display:flex;justify-content:center}"]
                    })
                }
                function W$(n, t) {
                    if (1 & n && (g(0, "div", 6), S(1), b()), 2 & n) {
                        const e = $();
                        w(1),
                        jn(e.number)
                    }
                }
                class Cu {
                    _printInternalService;
                    _fileData = {};
                    _number = 0;
                    set fileData(t) {
                        this._fileData = t
                    }
                    constructor(t) {
                        this._printInternalService = t
                    }
                    ngOnInit() {
                        this._printInternalService.printListObservable.subscribe(t => {
                            this._number = 0,
                            t.forEach(e => {
                                e === this._fileData && this._number++
                            })
                        })
                    }
                    open(t) {
                        window.open(t, "_blank")
                    }
                    increaseInternalNumber() {
                        this._fileData && this._printInternalService.add(this._fileData)
                    }
                    decreaseInternalNumber() {
                        this._fileData && this._printInternalService.delete(this._fileData)
                    }
                    get fileData() {
                        return this._fileData
                    }
                    get number() {
                        return this._number
                    }
                    static \u0275fac = function (e) {
                        return new(e || Cu)(p(ui))
                    };
                    static \u0275cmp = Z({
                        type: Cu,
                        selectors: [["app-print-number-control"]],
                        inputs: {
                            fileData: "fileData"
                        },
                        decls: 11,
                        vars: 4,
                        consts: [[1, "print-number-control"], [1, "img-area"], ["loading", "lazy", 2, "max-width", "100%", "max-height", "100%", 3, "src", "title", "click"], ["class", "show", 4, "ngIf"], [2, "display", "flex", "flex-direction", "column"], [1, "stepper", 3, "click"], [1, "show"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "div", 1)(2, "img", 2), O("click", function () {
                                    return i.open("./assets/big/" + i.fileData.subfolder + "/" + i.fileData.filename + "." + i.fileData.fileType)
                                }), b(), I(3, W$, 2, 1, "div", 3), b(), g(4, "div", 4)(5, "div", 5), O("click", function () {
                                    return i.increaseInternalNumber()
                                }), g(6, "mat-icon"), S(7, "keyboard_arrow_up"), b()(), g(8, "div", 5), O("click", function () {
                                    return i.decreaseInternalNumber()
                                }), g(9, "mat-icon"), S(10, "keyboard_arrow_down"), b()()()()),
                            2 & e && (w(2), hp("src", "./assets/thumbs/", i.fileData.subfolder, "/", i.fileData.filename, ".png", wn), Zi("title", i.fileData.filename), w(1), y("ngIf", i.number > 0))
                        },
                        dependencies: [Zt, xt],
                        styles: [".print-number-control[_ngcontent-%COMP%]{height:50px;border:1px solid rgba(0,0,0,.5);display:flex;align-items:stretch;background-color:#00000080;cursor:pointer}.print-number-control[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.print-number-control[_ngcontent-%COMP%]   .stepper[_ngcontent-%COMP%]{height:50%;width:20px;aspect-ratio:1/1;-webkit-user-select:none;user-select:none;color:orange;font-weight:700;font-size:18px;display:flex;justify-content:center;align-items:center}.print-number-control[_ngcontent-%COMP%]   .stepper[_ngcontent-%COMP%]:hover{background-color:#00000080}.print-number-control[_ngcontent-%COMP%]   .show[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:absolute;top:0;left:0;width:100%;height:100%;color:orange;font-size:22px;font-weight:700;text-shadow:1px 1px 0 black,-1px 1px 0 black,1px -1px 0 black,-1px -1px 0 black;pointer-events:none}.print-number-control[_ngcontent-%COMP%]   .img-area[_ngcontent-%COMP%]{position:relative;width:50px;background-color:#00000080}"]
                    })
                }
                const q$ = function (n, t, e, i) {
                    return {
                        sticky: n,
                        rows7: t,
                        rows6: e,
                        distance: i
                    }
                },
                Y$ = function (n, t) {
                    return {
                        top: n,
                        "background-color": t
                    }
                },
                K$ = ["*"];
                class Ts {
                    _parameterService;
                    _stickyTop = -1;
                    _hasParameterShowNfcTags = !1;
                    _backgroundColor = "transparent";
                    _hasDistance = !1;
                    set stickyTop(t) {
                        this._stickyTop = t
                    }
                    set backgroundColor(t) {
                        this._backgroundColor = t
                    }
                    set hasDistance(t) {
                        this._hasDistance = t
                    }
                    constructor(t) {
                        this._parameterService = t
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    get stickyTopString() {
                        return -1 !== this._stickyTop && this._stickyTop + "px"
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get backgroundColor() {
                        return this._backgroundColor
                    }
                    get hasDistance() {
                        return this._hasDistance
                    }
                    static \u0275fac = function (e) {
                        return new(e || Ts)(p(Sn))
                    };
                    static \u0275cmp = Z({
                        type: Ts,
                        selectors: [["app-table-row"]],
                        inputs: {
                            stickyTop: "stickyTop",
                            backgroundColor: "backgroundColor",
                            hasDistance: "hasDistance"
                        },
                        ngContentSelectors: K$,
                        decls: 2,
                        vars: 10,
                        consts: [[1, "row", 3, "ngClass", "ngStyle"]],
                        template: function (e, i) {
                            1 & e && (vt(), g(0, "div", 0), ye(1), b()),
                            2 & e && y("ngClass", Iw(2, q$, !!i.stickyTopString, i.hasParameterShowNfcTags, !i.hasParameterShowNfcTags, i.hasDistance))("ngStyle", Hn(7, Y$, i.stickyTopString, i.backgroundColor))
                        },
                        dependencies: [Gn, cm],
                        styles: ['.sticky{position:sticky;z-index:1}.row{display:grid}.row.distance{border:0 solid black;border-bottom-width:1px}.rows7{grid-template-columns:110px 110px 150px 200px 190px 210px minmax(150px,auto)}.rows6>*:nth-child(1){grid-area:one}.rows6>*:nth-child(2){grid-area:two}.rows6>*:nth-child(3){grid-area:three}.rows6>*:nth-child(4){grid-area:four}.rows6>*:nth-child(5){grid-area:five}.rows6>*:nth-child(6){grid-area:six}@media screen and (width > 969px){.rows6{grid-template-columns:110px 110px 150px 200px 190px minmax(150px,auto);grid-template-areas:"one two three four five six"}}@media screen and (width < 970px){.rows6{grid-template-columns:150px 110px 110px minmax(200px,auto);grid-template-areas:"four two three five" "one six six six"}}@media screen and (width < 530px){.rows6{grid-template-columns:150px 110px minmax(200px,auto);grid-template-areas:"four three five" "one six six" "two six six"}}@media screen and (width < 400px){.rows6{grid-template-columns:150px minmax(200px,auto);grid-template-areas:"four three" "one six" "two six" "five six"}}@media screen and (width < 311px){.rows6{grid-template-columns:100%;grid-template-areas:"four" "one" "two" "five" "three" "six"}.rows6>*:nth-child(6){justify-content:center!important}}\n'],
                        encapsulation: 2
                    })
                }
                function Z$(n, t) {
                    if (1 & n && (g(0, "mat-expansion-panel-header")(1, "mat-panel-title"), S(2), b()()), 2 & n) {
                        const e = $().$implicit;
                        w(2),
                        pp("", e.name ? e.name : "Unknown", " (", e.files.length, ")")
                    }
                }
                function X$(n, t) {
                    1 & n && (V(0, "img", 11), function Lw(n, t) {
                        const e = _e();
                        let i;
                        const r = n + 22;
                        e.firstCreatePass ? (i = function CF(n, t) {
                            if (t)
                                for (let e = t.length - 1; e >= 0; e--) {
                                    const i = t[e];
                                    if (n === i.name)
                                        return i
                                }
                        }
                            (t, e.pipeRegistry), e.data[r] = i, i.onDestroy && (e.destroyHooks || (e.destroyHooks = [])).push(r, i.onDestroy)) : i = e.data[r];
                        const o = i.factory || (i.factory = Mr(i.type)),
                        s = bn(p);
                        try {
                            const a = tl(!1),
                            c = o();
                            return tl(a),
                            function _R(n, t, e, i) {
                                e >= n.data.length && (n.data[e] = null, n.blueprint[e] = null),
                                t[e] = i
                            }
                            (e, M(), r, c),
                            c
                        } finally {
                            bn(s)
                        }
                    }
                        (1, "lowercase")),
                    2 & n && Yo("src", "./assets/images/elements/", function Vw(n, t, e) {
                        const i = n + 22,
                        r = M(),
                        o = vo(r, i);
                        return function Ca(n, t) {
                            return n[1].data[t].pure
                        }
                        (r, i) ? Ow(r, Nt(), t, o.transform, e, o) : o.transform(e)
                    }
                        (1, 1, $().$implicit.element), ".webp", wn)
                }
                function Q$(n, t) {
                    1 & n && (g(0, "span"), S(1, "None"), b())
                }
                function J$(n, t) {
                    if (1 & n && (g(0, "div"), S(1), b()), 2 & n) {
                        const e = t.$implicit;
                        w(1),
                        jn(e)
                    }
                }
                function ez(n, t) {
                    if (1 & n && (g(0, "span"), S(1), b()), 2 & n) {
                        const e = $().$implicit;
                        w(1),
                        jn(e.name)
                    }
                }
                function tz(n, t) {
                    if (1 & n && V(0, "img", 13), 2 & n) {
                        const e = $().$implicit;
                        Yo("src", "./assets/", e.imgSrc, "", wn),
                        Zi("title", e.name)
                    }
                }
                function nz(n, t) {
                    if (1 & n && (g(0, "div"), I(1, ez, 2, 1, "span", 3), I(2, tz, 1, 2, "img", 12), b()), 2 & n) {
                        const e = t.$implicit;
                        w(1),
                        y("ngIf", !e.imgSrc),
                        w(1),
                        y("ngIf", e.imgSrc)
                    }
                }
                function iz(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 15),
                        O("click", function () {
                            const o = He(e).$implicit;
                            return Ue($(4).open("./assets/dumps/" + o.subfolder + "/" + o.filename + "." + o.fileType))
                        }),
                        g(1, "span"),
                        S(2),
                        b()()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(2),
                        jn(e.displayName)
                    }
                }
                function rz(n, t) {
                    if (1 & n && (g(0, "div", 8), I(1, iz, 3, 1, "div", 14), b()), 2 & n) {
                        const e = $().$implicit;
                        w(1),
                        y("ngForOf", e.files.nfcTags)
                    }
                }
                function oz(n, t) {
                    1 & n && V(0, "app-print-number-control", 17),
                    2 & n && y("fileData", $().$implicit)
                }
                function sz(n, t) {
                    if (1 & n && (ii(0), I(1, oz, 1, 1, "app-print-number-control", 16), ri()), 2 & n) {
                        const e = t.$implicit,
                        i = $(3);
                        w(1),
                        y("ngIf", i.isImageFiltered(e.types))
                    }
                }
                function az(n, t) {
                    if (1 & n && (ii(0), g(1, "app-table-row", 4)(2, "div", 5), V(3, "img", 6), b(), g(4, "div", 5), I(5, X$, 2, 3, "img", 7), I(6, Q$, 2, 0, "span", 3), b(), g(7, "div", 8), I(8, J$, 2, 1, "div", 1), b(), g(9, "div", 5), S(10), b(), g(11, "div", 8), I(12, nz, 3, 2, "div", 1), b(), I(13, rz, 2, 1, "div", 9), g(14, "div", 10), I(15, sz, 2, 1, "ng-container", 1), b()(), ri()), 2 & n) {
                        const e = t.$implicit,
                        i = $(2);
                        w(1),
                        y("hasDistance", !0),
                        w(2),
                        Yo("src", "./assets/", e.logo, "", wn),
                        w(2),
                        y("ngIf", e.element),
                        w(1),
                        y("ngIf", !e.element),
                        w(2),
                        y("ngForOf", e.categories),
                        w(2),
                        Rl(" ", e.name, " "),
                        w(2),
                        y("ngForOf", e.types),
                        w(1),
                        y("ngIf", i.hasParameterShowNfcTags),
                        w(2),
                        y("ngForOf", e.files.images)
                    }
                }
                const cz = function (n) {
                    return {
                        "not-grouping": n
                    }
                };
                function lz(n, t) {
                    if (1 & n && (ii(0), g(1, "mat-expansion-panel", 2), I(2, Z$, 3, 2, "mat-expansion-panel-header", 3), I(3, az, 16, 9, "ng-container", 1), b(), ri()), 2 & n) {
                        const e = t.$implicit,
                        i = $();
                        w(1),
                        y("ngClass", jt(3, cz, i.view.length <= 1)),
                        w(1),
                        y("ngIf", i.view.length > 1),
                        w(1),
                        y("ngForOf", e.files)
                    }
                }
                class Du {
                    _viewService;
                    _filterService;
                    _parameterService;
                    _hasParameterShowNfcTags = !1;
                    constructor(t, e, i) {
                        this._viewService = t,
                        this._filterService = e,
                        this._parameterService = i
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    open(t) {
                        window.open(t, "_blank")
                    }
                    hasIntersection(t, e) {
                        return t.filter(i => e.includes(i)).length > 0
                    }
                    isImageFiltered(t) {
                        return 0 === this._filterService.selectionFilterImage.selected.length || this._filterService.selectionFilterImage.selected.filter(e => t.includes(e.name)).length > 0
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get view() {
                        return this._viewService.view
                    }
                    static \u0275fac = function (e) {
                        return new(e || Du)(p(Ss), p(Yn), p(Sn))
                    };
                    static \u0275cmp = Z({
                        type: Du,
                        selectors: [["app-table-content"]],
                        decls: 2,
                        vars: 1,
                        consts: [[1, "example-headers-align"], [4, "ngFor", "ngForOf"], ["hideToggle", "", "expanded", "(i === 0 ? true : false)", 3, "ngClass"], [4, "ngIf"], [3, "hasDistance"], [1, "area"], ["loading", "lazy", 1, "img-scale", 3, "src"], ["loading", "lazy", "class", "img-scale circle border element-picture", 3, "src", 4, "ngIf"], [1, "area", "top-to-down"], ["class", "area top-to-down", 4, "ngIf"], [1, "area", "wrap", "left"], ["loading", "lazy", 1, "img-scale", "circle", "border", "element-picture", 3, "src"], ["loading", "lazy", 3, "src", "title", 4, "ngIf"], ["loading", "lazy", 3, "src", "title"], ["class", "link", 3, "click", 4, "ngFor", "ngForOf"], [1, "link", 3, "click"], ["class", "space", 3, "fileData", 4, "ngIf"], [1, "space", 3, "fileData"]],
                        template: function (e, i) {
                            1 & e && (g(0, "mat-accordion", 0), I(1, lz, 4, 5, "ng-container", 1), b()),
                            2 & e && (w(1), y("ngForOf", i.view))
                        },
                        dependencies: [Gn, Qi, Zt, c_, wc, Cc, gu, Cu, Ts, aD],
                        styles: [".not-grouping[_ngcontent-%COMP%]{margin:0!important}.area[_ngcontent-%COMP%]{padding:8px;display:flex;justify-content:center;align-items:center}.area.top-to-down[_ngcontent-%COMP%]{flex-direction:column}.area.wrap[_ngcontent-%COMP%]{flex-wrap:wrap}.area.left[_ngcontent-%COMP%]{justify-content:flex-start}.area[_ngcontent-%COMP%]   img.element-picture[_ngcontent-%COMP%]{width:50px}.position-absolute[_ngcontent-%COMP%]{position:absolute;top:2px;left:4px}.pointer[_ngcontent-%COMP%]{cursor:pointer}.img-scale[_ngcontent-%COMP%]{height:50px;min-width:30px;object-fit:contain}.img-scale.border[_ngcontent-%COMP%]{border:1px solid black}.img-scale.circle[_ngcontent-%COMP%]{border-radius:50%}.space[_ngcontent-%COMP%]{margin:4px 12px 4px 0}.position-relative[_ngcontent-%COMP%]{position:relative}.group-headline[_ngcontent-%COMP%]{text-align:center;padding:12px;width:calc(100% - 24px);font-size:20px;background-color:#0000004d}"]
                    })
                }
                function dz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function uz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function hz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function fz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function pz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function mz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function gz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function _z(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function bz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_upward"), b())
                }
                function vz(n, t) {
                    1 & n && (g(0, "mat-icon"), S(1, " arrow_downward"), b())
                }
                function yz(n, t) {
                    1 & n && (g(0, "div"), S(1, "Files"), b())
                }
                class xu {
                    _parameterService;
                    _sortService;
                    _enumOrientationAll = Le;
                    _enumSortAll = Kn;
                    _hasParameterShowNfcTags = !1;
                    constructor(t, e) {
                        this._parameterService = t,
                        this._sortService = e
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    selectSorting(t) {
                        this._sortService.selectedSortType !== t ? (this._sortService.selectedSortType = t, this._sortService.selectedSortOrientation = Le.ASC) : this._sortService.selectedSortOrientation = this._sortService.selectedSortOrientation === Le.ASC ? Le.DESC : Le.ASC
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get enumSortAll() {
                        return this._enumSortAll
                    }
                    get enumOrientationAll() {
                        return this._enumOrientationAll
                    }
                    get sortTypeSelected() {
                        return this._sortService.selectedSortType
                    }
                    get sortOrientationSelected() {
                        return this._sortService.selectedSortOrientation
                    }
                    static \u0275fac = function (e) {
                        return new(e || xu)(p(Sn), p(oo))
                    };
                    static \u0275cmp = Z({
                        type: xu,
                        selectors: [["app-table-header"]],
                        decls: 25,
                        vars: 13,
                        consts: [[3, "stickyTop", "backgroundColor"], [1, "clickable", 3, "click"], [4, "ngIf"], [1, "tab-images"], [1, "add-all"]],
                        template: function (e, i) {
                            1 & e && (g(0, "app-table-row", 0)(1, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.GAME)
                                }), S(2, " Games "), I(3, dz, 2, 0, "mat-icon", 2), I(4, uz, 2, 0, "mat-icon", 2), b(), g(5, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.ELEMENT)
                                }), S(6, " Elements "), I(7, hz, 2, 0, "mat-icon", 2), I(8, fz, 2, 0, "mat-icon", 2), b(), g(9, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.CATEGORY)
                                }), S(10, " Categories "), I(11, pz, 2, 0, "mat-icon", 2), I(12, mz, 2, 0, "mat-icon", 2), b(), g(13, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.NAME)
                                }), S(14, " Names "), I(15, gz, 2, 0, "mat-icon", 2), I(16, _z, 2, 0, "mat-icon", 2), b(), g(17, "div", 1), O("click", function () {
                                    return i.selectSorting(i.enumSortAll.TYPE)
                                }), S(18, " Types "), I(19, bz, 2, 0, "mat-icon", 2), I(20, vz, 2, 0, "mat-icon", 2), b(), I(21, yz, 2, 0, "div", 2), g(22, "div", 3), S(23, "Images "), V(24, "app-add-all", 4), b()()),
                            2 & e && (y("stickyTop", 60)("backgroundColor", "rgba(0, 0, 0, 0.2)"), w(3), y("ngIf", i.sortTypeSelected === i.enumSortAll.GAME && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.GAME && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(3), y("ngIf", i.sortTypeSelected === i.enumSortAll.ELEMENT && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.ELEMENT && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(3), y("ngIf", i.sortTypeSelected === i.enumSortAll.CATEGORY && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.CATEGORY && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(3), y("ngIf", i.sortTypeSelected === i.enumSortAll.NAME && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.NAME && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(3), y("ngIf", i.sortTypeSelected === i.enumSortAll.TYPE && i.sortOrientationSelected === i.enumOrientationAll.ASC), w(1), y("ngIf", i.sortTypeSelected === i.enumSortAll.TYPE && i.sortOrientationSelected === i.enumOrientationAll.DESC), w(1), y("ngIf", i.hasParameterShowNfcTags))
                        },
                        dependencies: [Zt, xt, vc, Ts],
                        styles: ["div[_ngcontent-%COMP%]{padding:20px 8px;position:sticky;top:0;background-color:#000000e6;border:0 solid #333;border-right-width:1px;display:flex;align-items:center;justify-content:center;height:60px;-webkit-backdrop-filter:blur(6px);backdrop-filter:blur(6px)}div[_ngcontent-%COMP%]:last-child{border-right-width:0}div.clickable[_ngcontent-%COMP%]{cursor:pointer}div.clickable[_ngcontent-%COMP%]:hover{color:#ffa500b3;background-color:#000}.tab-images[_ngcontent-%COMP%]{position:relative}.tab-images[_ngcontent-%COMP%]   .add-all[_ngcontent-%COMP%]{position:absolute;right:8px}"]
                    })
                }
                var As = (() => {
                    return (n = As || (As = {}))[n.NONE = 0] = "NONE",
                    n[n.GAME = 1] = "GAME",
                    n[n.ELEMENT = 2] = "ELEMENT",
                    n[n.NAME = 3] = "NAME",
                    n[n.CATEGORY = 4] = "CATEGORY",
                    n[n.TYPE = 5] = "TYPE",
                    n[n.NFC_TAGS = 6] = "NFC_TAGS",
                    n[n.IMAGE = 7] = "IMAGE",
                    As;
                    var n
                })();
                const so = function (n, t) {
                    return {
                        active: n,
                        "someone-is-active": t
                    }
                };
                function wz(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 1),
                        O("click", function () {
                            He(e);
                            const r = $();
                            return Ue(r.activateArea(r.filterArea.NFC_TAGS))
                        }),
                        g(1, "mat-icon"),
                        S(2, "filter_list"),
                        b()()
                    }
                    if (2 & n) {
                        const e = $();
                        y("ngClass", Hn(1, so, e.activeFilterArea === e.filterArea.NFC_TAGS, e.selectionNfcTags.selected.length > 0))
                    }
                }
                function Cz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listGame)("selection", e.selectionGame)
                    }
                }
                function Dz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listElement)("selection", e.selectionElement)
                    }
                }
                function xz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listCategory)("selection", e.selectionCategory)
                    }
                }
                function Ez(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listName)("selection", e.selectionName)
                    }
                }
                function Sz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listType)("selection", e.selectionType)
                    }
                }
                function Mz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listNfcTags)("selection", e.selectionNfcTags)
                    }
                }
                function Tz(n, t) {
                    if (1 & n && V(0, "app-filter-area", 6), 2 & n) {
                        const e = $(2);
                        y("list", e.listImage)("selection", e.selectionImage)
                    }
                }
                function Az(n, t) {
                    if (1 & n && (g(0, "div", 4), I(1, Cz, 1, 2, "app-filter-area", 5), I(2, Dz, 1, 2, "app-filter-area", 5), I(3, xz, 1, 2, "app-filter-area", 5), I(4, Ez, 1, 2, "app-filter-area", 5), I(5, Sz, 1, 2, "app-filter-area", 5), I(6, Mz, 1, 2, "app-filter-area", 5), I(7, Tz, 1, 2, "app-filter-area", 5), b()), 2 & n) {
                        const e = $();
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.GAME),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.ELEMENT),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.CATEGORY),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.NAME),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.TYPE),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.NFC_TAGS),
                        w(1),
                        y("ngIf", e.activeFilterArea === e.filterArea.IMAGE)
                    }
                }
                class Eu {
                    _filterService;
                    _parameterService;
                    _activeFilterArea = As.NONE;
                    _filterArea = As;
                    _hasParameterShowNfcTags = !1;
                    constructor(t, e) {
                        this._filterService = t,
                        this._parameterService = e
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    activateArea(t) {
                        this._activeFilterArea = this._activeFilterArea === t ? As.NONE : t
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    get activeFilterArea() {
                        return this._activeFilterArea
                    }
                    get filterArea() {
                        return this._filterArea
                    }
                    get list() {
                        return this._filterService.filterListCategory
                    }
                    get listGame() {
                        return this._filterService.filterListGame
                    }
                    get selectionGame() {
                        return this._filterService.selectionFilterGame
                    }
                    get listElement() {
                        return this._filterService.filterListElement
                    }
                    get selectionElement() {
                        return this._filterService.selectionFilterElement
                    }
                    get listCategory() {
                        return this._filterService.filterListCategory
                    }
                    get selectionCategory() {
                        return this._filterService.selectionFilterCategory
                    }
                    get listName() {
                        return this._filterService.filterListName
                    }
                    get selectionName() {
                        return this._filterService.selectionFilterName
                    }
                    get listType() {
                        return this._filterService.filterListType
                    }
                    get selectionType() {
                        return this._filterService.selectionFilterType
                    }
                    get listImage() {
                        return this._filterService.filterListImage
                    }
                    get selectionImage() {
                        return this._filterService.selectionFilterImage
                    }
                    get listNfcTags() {
                        return this._filterService.filterListNfcTags
                    }
                    get selectionNfcTags() {
                        return this._filterService.selectionFilterNfcTags
                    }
                    static \u0275fac = function (e) {
                        return new(e || Eu)(p(Yn), p(Sn))
                    };
                    static \u0275cmp = Z({
                        type: Eu,
                        selectors: [["app-table-header-filter"]],
                        decls: 21,
                        vars: 28,
                        consts: [[3, "stickyTop", "backgroundColor"], [1, "tab", "icon", "blur-bg", 3, "ngClass", "click"], ["class", "tab icon blur-bg", 3, "ngClass", "click", 4, "ngIf"], ["class", "filter-area blur-bg", 4, "ngIf"], [1, "filter-area", "blur-bg"], [3, "list", "selection", 4, "ngIf"], [3, "list", "selection"]],
                        template: function (e, i) {
                            1 & e && (g(0, "app-table-row", 0)(1, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.GAME)
                                }), g(2, "mat-icon"), S(3, "filter_list"), b()(), g(4, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.ELEMENT)
                                }), g(5, "mat-icon"), S(6, "filter_list"), b()(), g(7, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.CATEGORY)
                                }), g(8, "mat-icon"), S(9, "filter_list"), b()(), g(10, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.NAME)
                                }), g(11, "mat-icon"), S(12, "filter_list"), b()(), g(13, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.TYPE)
                                }), g(14, "mat-icon"), S(15, "filter_list"), b()(), I(16, wz, 3, 4, "div", 2), g(17, "div", 1), O("click", function () {
                                    return i.activateArea(i.filterArea.IMAGE)
                                }), g(18, "mat-icon"), S(19, "filter_list"), b()()(), I(20, Az, 8, 7, "div", 3)),
                            2 & e && (y("stickyTop", 120)("backgroundColor", i.activeFilterArea !== i.filterArea.NONE ? "rgba(0, 0, 0, 0.8)" : "rgba(0, 0, 0, 0.2)"), w(1), y("ngClass", Hn(10, so, i.activeFilterArea === i.filterArea.GAME, i.selectionGame.selected.length > 0)), w(3), y("ngClass", Hn(13, so, i.activeFilterArea === i.filterArea.ELEMENT, i.selectionElement.selected.length > 0)), w(3), y("ngClass", Hn(16, so, i.activeFilterArea === i.filterArea.CATEGORY, i.selectionCategory.selected.length > 0)), w(3), y("ngClass", Hn(19, so, i.activeFilterArea === i.filterArea.NAME, i.selectionName.selected.length > 0)), w(3), y("ngClass", Hn(22, so, i.activeFilterArea === i.filterArea.TYPE, i.selectionType.selected.length > 0)), w(3), y("ngIf", i.hasParameterShowNfcTags), w(1), y("ngClass", Hn(25, so, i.activeFilterArea === i.filterArea.IMAGE, i.selectionImage.selected.length > 0)), w(3), y("ngIf", i.activeFilterArea !== i.filterArea.NONE))
                        },
                        dependencies: [Gn, Zt, xt, xc, Ts],
                        styles: [".tab[_ngcontent-%COMP%]{height:30px}.icon[_ngcontent-%COMP%]{background-color:#000000e6;text-align:center;border-radius:0 0 20px 20px;margin:0 1px 0 0;border:0 solid black;border-bottom-width:1px;cursor:pointer}.icon[_ngcontent-%COMP%]:hover{color:#000000b3;background-color:#c86e00}.icon.active[_ngcontent-%COMP%]{color:#000000b3;background-color:#c86e0080}.icon.active[_ngcontent-%COMP%]:hover{color:#000000b3;background-color:#c86e00}.icon.someone-is-active[_ngcontent-%COMP%]{border-color:orange}.blur-bg[_ngcontent-%COMP%]{-webkit-backdrop-filter:blur(6px);backdrop-filter:blur(6px)}.filter-area[_ngcontent-%COMP%]{background-color:#000c;position:sticky;top:150px;z-index:1;max-height:calc(100% - 150px);overflow:auto}"]
                    })
                }
                class Su {
                    _parameterService;
                    _hasParameterShowNfcTags = !1;
                    constructor(t) {
                        this._parameterService = t
                    }
                    ngOnInit() {
                        this._parameterService.parameterObservable.subscribe(t => {
                            this._hasParameterShowNfcTags = "nfctags" === t.get("show")
                        })
                    }
                    get hasParameterShowNfcTags() {
                        return this._hasParameterShowNfcTags
                    }
                    static \u0275fac = function (e) {
                        return new(e || Su)(p(Sn))
                    };
                    static \u0275cmp = Z({
                        type: Su,
                        selectors: [["app-table"]],
                        decls: 3,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && V(0, "app-table-header")(1, "app-table-header-filter")(2, "app-table-content")
                        },
                        dependencies: [Du, xu, Eu],
                        styles: ["@media screen and (width < 970px){app-table-header[_ngcontent-%COMP%], app-table-header-filter[_ngcontent-%COMP%]{display:none}}"]
                    })
                }
                class Mu {
                    constructor() {}
                    ngOnInit() {}
                    static \u0275fac = function (e) {
                        return new(e || Mu)
                    };
                    static \u0275cmp = Z({
                        type: Mu,
                        selectors: [["app-title"]],
                        decls: 1,
                        vars: 0,
                        template: function (e, i) {
                            1 & e && S(0, "Skylanders List\n")
                        }
                    })
                }
                var Ec = (() => {
                    return (n = Ec || (Ec = {}))[n.CARD = 0] = "CARD",
                    n[n.COIN = 1] = "COIN",
                    Ec;
                    var n
                })();
                const kz = ["input"],
                Iz = ["*"];
                let BM = 0;
                class jM {
                    constructor(t, e) {
                        this.source = t,
                        this.value = e
                    }
                }
                const Oz = {
                    provide: En,
                    useExisting: Ce(() => UM),
                    multi: !0
                },
                HM = new T("MatRadioGroup"),
                Rz = new T("mat-radio-default-options", {
                    providedIn: "root",
                    factory: function Pz() {
                        return {
                            color: "accent"
                        }
                    }
                });
                let Fz = (() => {
                    class n {
                        constructor(e) {
                            this._changeDetector = e,
                            this._value = null,
                            this._name = "mat-radio-group-" + BM++,
                            this._selected = null,
                            this._isInitialized = !1,
                            this._labelPosition = "after",
                            this._disabled = !1,
                            this._required = !1,
                            this._controlValueAccessorChangeFn = () => {},
                            this.onTouched = () => {},
                            this.change = new re
                        }
                        get name() {
                            return this._name
                        }
                        set name(e) {
                            this._name = e,
                            this._updateRadioButtonNames()
                        }
                        get labelPosition() {
                            return this._labelPosition
                        }
                        set labelPosition(e) {
                            this._labelPosition = "before" === e ? "before" : "after",
                            this._markRadiosForCheck()
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._value !== e && (this._value = e, this._updateSelectedRadioFromValue(), this._checkSelectedRadioButton())
                        }
                        _checkSelectedRadioButton() {
                            this._selected && !this._selected.checked && (this._selected.checked = !0)
                        }
                        get selected() {
                            return this._selected
                        }
                        set selected(e) {
                            this._selected = e,
                            this.value = e ? e.value : null,
                            this._checkSelectedRadioButton()
                        }
                        get disabled() {
                            return this._disabled
                        }
                        set disabled(e) {
                            this._disabled = Ne(e),
                            this._markRadiosForCheck()
                        }
                        get required() {
                            return this._required
                        }
                        set required(e) {
                            this._required = Ne(e),
                            this._markRadiosForCheck()
                        }
                        ngAfterContentInit() {
                            this._isInitialized = !0
                        }
                        _touch() {
                            this.onTouched && this.onTouched()
                        }
                        _updateRadioButtonNames() {
                            this._radios && this._radios.forEach(e => {
                                e.name = this.name,
                                e._markForCheck()
                            })
                        }
                        _updateSelectedRadioFromValue() {
                            this._radios && (null === this._selected || this._selected.value !== this._value) && (this._selected = null, this._radios.forEach(i => {
                                    i.checked = this.value === i.value,
                                    i.checked && (this._selected = i)
                                }))
                        }
                        _emitChangeEvent() {
                            this._isInitialized && this.change.emit(new jM(this._selected, this._value))
                        }
                        _markRadiosForCheck() {
                            this._radios && this._radios.forEach(e => e._markForCheck())
                        }
                        writeValue(e) {
                            this.value = e,
                            this._changeDetector.markForCheck()
                        }
                        registerOnChange(e) {
                            this._controlValueAccessorChangeFn = e
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        setDisabledState(e) {
                            this.disabled = e,
                            this._changeDetector.markForCheck()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p($t))
                    },
                    n. \u0275dir = N({
                        type: n,
                        inputs: {
                            color: "color",
                            name: "name",
                            labelPosition: "labelPosition",
                            value: "value",
                            selected: "selected",
                            disabled: "disabled",
                            required: "required"
                        },
                        outputs: {
                            change: "change"
                        }
                    }),
                    n
                })();
                class Nz {
                    constructor(t) {
                        this._elementRef = t
                    }
                }
                const Lz = ig(rg(Nz));
                let Vz = (() => {
                    class n extends Lz {
                        constructor(e, i, r, o, s, a, c, l) {
                            super(i),
                            this._changeDetector = r,
                            this._focusMonitor = o,
                            this._radioDispatcher = s,
                            this._providerOverride = c,
                            this._uniqueId = "mat-radio-" + ++BM,
                            this.id = this._uniqueId,
                            this.change = new re,
                            this._checked = !1,
                            this._value = null,
                            this._removeUniqueSelectionListener = () => {},
                            this.radioGroup = e,
                            this._noopAnimations = "NoopAnimations" === a,
                            l && (this.tabIndex = qn(l, 0))
                        }
                        get checked() {
                            return this._checked
                        }
                        set checked(e) {
                            const i = Ne(e);
                            this._checked !== i && (this._checked = i, i && this.radioGroup && this.radioGroup.value !== this.value ? this.radioGroup.selected = this : !i && this.radioGroup && this.radioGroup.value === this.value && (this.radioGroup.selected = null), i && this._radioDispatcher.notify(this.id, this.name), this._changeDetector.markForCheck())
                        }
                        get value() {
                            return this._value
                        }
                        set value(e) {
                            this._value !== e && (this._value = e, null !== this.radioGroup && (this.checked || (this.checked = this.radioGroup.value === e), this.checked && (this.radioGroup.selected = this)))
                        }
                        get labelPosition() {
                            return this._labelPosition || this.radioGroup && this.radioGroup.labelPosition || "after"
                        }
                        set labelPosition(e) {
                            this._labelPosition = e
                        }
                        get disabled() {
                            return this._disabled || null !== this.radioGroup && this.radioGroup.disabled
                        }
                        set disabled(e) {
                            this._setDisabled(Ne(e))
                        }
                        get required() {
                            return this._required || this.radioGroup && this.radioGroup.required
                        }
                        set required(e) {
                            this._required = Ne(e)
                        }
                        get color() {
                            return this._color || this.radioGroup && this.radioGroup.color || this._providerOverride && this._providerOverride.color || "accent"
                        }
                        set color(e) {
                            this._color = e
                        }
                        get inputId() {
                            return `${this.id || this._uniqueId}-input`
                        }
                        focus(e, i) {
                            i ? this._focusMonitor.focusVia(this._inputElement, i, e) : this._inputElement.nativeElement.focus(e)
                        }
                        _markForCheck() {
                            this._changeDetector.markForCheck()
                        }
                        ngOnInit() {
                            this.radioGroup && (this.checked = this.radioGroup.value === this._value, this.checked && (this.radioGroup.selected = this), this.name = this.radioGroup.name),
                            this._removeUniqueSelectionListener = this._radioDispatcher.listen((e, i) => {
                                e !== this.id && i === this.name && (this.checked = !1)
                            })
                        }
                        ngDoCheck() {
                            this._updateTabIndex()
                        }
                        ngAfterViewInit() {
                            this._updateTabIndex(),
                            this._focusMonitor.monitor(this._elementRef, !0).subscribe(e => {
                                !e && this.radioGroup && this.radioGroup._touch()
                            })
                        }
                        ngOnDestroy() {
                            this._focusMonitor.stopMonitoring(this._elementRef),
                            this._removeUniqueSelectionListener()
                        }
                        _emitChangeEvent() {
                            this.change.emit(new jM(this, this._value))
                        }
                        _isRippleDisabled() {
                            return this.disableRipple || this.disabled
                        }
                        _onInputClick(e) {
                            e.stopPropagation()
                        }
                        _onInputInteraction(e) {
                            if (e.stopPropagation(), !this.checked && !this.disabled) {
                                const i = this.radioGroup && this.value !== this.radioGroup.value;
                                this.checked = !0,
                                this._emitChangeEvent(),
                                this.radioGroup && (this.radioGroup._controlValueAccessorChangeFn(this.value), i && this.radioGroup._emitChangeEvent())
                            }
                        }
                        _setDisabled(e) {
                            this._disabled !== e && (this._disabled = e, this._changeDetector.markForCheck())
                        }
                        _updateTabIndex() {
                            const e = this.radioGroup;
                            let i;
                            if (i = e && e.selected && !this.disabled ? e.selected === this ? this.tabIndex : -1 : this.tabIndex, i !== this._previousTabIndex) {
                                const r = this._inputElement?.nativeElement;
                                r && (r.setAttribute("tabindex", i + ""), this._previousTabIndex = i)
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        qi()
                    },
                    n. \u0275dir = N({
                        type: n,
                        viewQuery: function (e, i) {
                            if (1 & e && Ht(kz, 5), 2 & e) {
                                let r;
                                $e(r = ze()) && (i._inputElement = r.first)
                            }
                        },
                        inputs: {
                            id: "id",
                            name: "name",
                            ariaLabel: ["aria-label", "ariaLabel"],
                            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
                            checked: "checked",
                            value: "value",
                            labelPosition: "labelPosition",
                            disabled: "disabled",
                            required: "required",
                            color: "color"
                        },
                        outputs: {
                            change: "change"
                        },
                        features: [H]
                    }),
                    n
                })(),
                UM = (() => {
                    class n extends Fz {}
                    return n. \u0275fac = function () {
                        let t;
                        return function (i) {
                            return (t || (t = Ze(n)))(i || n)
                        }
                    }
                    (),
                    n. \u0275dir = N({
                        type: n,
                        selectors: [["mat-radio-group"]],
                        contentQueries: function (e, i, r) {
                            if (1 & e && ci(r, $M, 5), 2 & e) {
                                let o;
                                $e(o = ze()) && (i._radios = o)
                            }
                        },
                        hostAttrs: ["role", "radiogroup", 1, "mat-mdc-radio-group"],
                        exportAs: ["matRadioGroup"],
                        features: [ge([Oz, {
                                        provide: HM,
                                        useExisting: n
                                    }
                                ]), H]
                    }),
                    n
                })(),
                $M = (() => {
                    class n extends Vz {
                        constructor(e, i, r, o, s, a, c, l) {
                            super(e, i, r, o, s, a, c, l)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(p(HM, 8), p(se), p($t), p(rr), p(i_), p(yt, 8), p(Rz, 8), Gi("tabindex"))
                    },
                    n. \u0275cmp = Z({
                        type: n,
                        selectors: [["mat-radio-button"]],
                        hostAttrs: [1, "mat-mdc-radio-button"],
                        hostVars: 15,
                        hostBindings: function (e, i) {
                            1 & e && O("focus", function () {
                                return i._inputElement.nativeElement.focus()
                            }),
                            2 & e && (Ee("id", i.id)("tabindex", null)("aria-label", null)("aria-labelledby", null)("aria-describedby", null), be("mat-primary", "primary" === i.color)("mat-accent", "accent" === i.color)("mat-warn", "warn" === i.color)("mat-mdc-radio-checked", i.checked)("_mat-animation-noopable", i._noopAnimations))
                        },
                        inputs: {
                            disableRipple: "disableRipple",
                            tabIndex: "tabIndex"
                        },
                        exportAs: ["matRadioButton"],
                        features: [H],
                        ngContentSelectors: Iz,
                        decls: 13,
                        vars: 17,
                        consts: [[1, "mdc-form-field"], ["formField", ""], [1, "mdc-radio"], [1, "mat-mdc-radio-touch-target", 3, "click"], ["type", "radio", 1, "mdc-radio__native-control", 3, "id", "checked", "disabled", "required", "change"], ["input", ""], [1, "mdc-radio__background"], [1, "mdc-radio__outer-circle"], [1, "mdc-radio__inner-circle"], ["mat-ripple", "", 1, "mat-radio-ripple", "mat-mdc-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleCentered"], [1, "mat-ripple-element", "mat-radio-persistent-ripple"], [3, "for"]],
                        template: function (e, i) {
                            if (1 & e && (vt(), g(0, "div", 0, 1)(2, "div", 2)(3, "div", 3), O("click", function (o) {
                                        return i._onInputInteraction(o)
                                    }), b(), g(4, "input", 4, 5), O("change", function (o) {
                                        return i._onInputInteraction(o)
                                    }), b(), g(6, "div", 6), V(7, "div", 7)(8, "div", 8), b(), g(9, "div", 9), V(10, "div", 10), b()(), g(11, "label", 11), ye(12), b()()), 2 & e) {
                                const r = qo(1);
                                be("mdc-form-field--align-end", "before" == i.labelPosition),
                                w(2),
                                be("mdc-radio--disabled", i.disabled),
                                w(2),
                                y("id", i.inputId)("checked", i.checked)("disabled", i.disabled)("required", i.required),
                                Ee("name", i.name)("value", i.value)("aria-label", i.ariaLabel)("aria-labelledby", i.ariaLabelledby)("aria-describedby", i.ariaDescribedby),
                                w(5),
                                y("matRippleTrigger", r)("matRippleDisabled", i._isRippleDisabled())("matRippleCentered", !0),
                                w(2),
                                y("for", i.inputId)
                            }
                        },
                        dependencies: [or],
                        styles: ['.mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:"";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size, 40px) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, #6200ee)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color, #000)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, #000)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color, #000)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size, 40px) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size, 40px) - 20px) / 2);width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);right:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);left:calc((var(--mdc-radio-state-layer-size, 40px) - var(--mdc-radio-state-layer-size, 40px)) / 2);width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-mdc-radio-ripple-color, transparent)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-mdc-radio-checked-ripple-color, transparent)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-mdc-radio-checked-ripple-color, transparent)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:""}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}'],
                        encapsulation: 2,
                        changeDetection: 0
                    }),
                    n
                })(),
                Bz = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, is, sg, ct]
                    }),
                    n
                })();
                class Tu {
                    _text = "";
                    set text(t) {
                        this._text = t
                    }
                    constructor() {}
                    ngOnInit() {}
                    get text() {
                        return this._text
                    }
                    static \u0275fac = function (e) {
                        return new(e || Tu)
                    };
                    static \u0275cmp = Z({
                        type: Tu,
                        selectors: [["app-info-text"]],
                        inputs: {
                            text: "text"
                        },
                        decls: 3,
                        vars: 1,
                        consts: [[1, "area"], [1, "text"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div", 0)(1, "div", 1), S(2), b()()),
                            2 & e && (w(2), jn(i.text))
                        },
                        styles: [".area[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;justify-content:center;align-items:center;position:absolute}.area[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{color:#fff;font-size:20px;text-shadow:-1px -1px 4px #444,1px -1px 4px #444,-1px 1px 4px #444,1px 1px 4px #444}"]
                    })
                }
                class Sc {
                    constructor() {}
                    ngOnInit() {}
                    static \u0275fac = function (e) {
                        return new(e || Sc)
                    };
                    static \u0275cmp = Z({
                        type: Sc,
                        selectors: [["app-print-custom-text"]],
                        decls: 2,
                        vars: 0,
                        consts: [["placeholder", "own text"]],
                        template: function (e, i) {
                            1 & e && (g(0, "div"), V(1, "textarea", 0), b())
                        },
                        styles: ["div[_ngcontent-%COMP%]{height:100%;width:100%;display:flex;justify-content:center;align-items:flex-end}textarea[_ngcontent-%COMP%]{font-size:20px;width:250px;height:22px;border:0;text-align:center;background-color:transparent;color:#fff!important;text-shadow:1px 1px 0px rgb(0,0,0),-1px 1px 0px rgb(0,0,0),1px -1px 0px rgb(0,0,0),-1px -1px 0px rgb(0,0,0);overflow:hidden;max-height:calc(100% - 4px);min-height:22px;min-width:calc(100% - 4px);max-width:calc(100% - 4px);width:calc(100% - 4px)}textarea[_ngcontent-%COMP%]:focus{background-color:#7d7d7d80}textarea[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}textarea[_ngcontent-%COMP%]:-moz-placeholder{color:#fff}textarea[_ngcontent-%COMP%]::-moz-placeholder{color:#fff}textarea[_ngcontent-%COMP%]:-ms-input-placeholder{color:#fff}@media print{textarea[_ngcontent-%COMP%]{resize:none;background-color:transparent}textarea[_ngcontent-%COMP%]:placeholder-shown{display:none}}"]
                    })
                }
                const jz = function (n, t) {
                    return {
                        "print-normal": n,
                        "print-rotate": t
                    }
                };
                function Hz(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 1)(1, "button", 2),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().unselectImage(o))
                        }),
                        g(2, "mat-icon"),
                        S(3, "remove_circle_outline"),
                        b()(),
                        g(4, "div", 3),
                        V(5, "img", 4),
                        b(),
                        V(6, "app-print-custom-text", 5),
                        b()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(4),
                        y("ngClass", Hn(2, jz, !e.printRotate, e.printRotate)),
                        w(1),
                        y("src", e.url, wn)
                    }
                }
                class Au {
                    _printExternalService;
                    constructor(t) {
                        this._printExternalService = t
                    }
                    ngOnInit() {}
                    unselectImage(t) {
                        this._printExternalService.deleteByIndex(t)
                    }
                    get printList() {
                        return this._printExternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || Au)(p(Ri))
                    };
                    static \u0275cmp = Z({
                        type: Au,
                        selectors: [["app-view-print-card-external"]],
                        decls: 1,
                        vars: 1,
                        consts: [["class", "print-out", 4, "ngFor", "ngForOf"], [1, "print-out"], ["mat-mini-fab", "", 1, "remove-image", 3, "click"], [3, "ngClass"], [3, "src"], [1, "print-custom-text"]],
                        template: function (e, i) {
                            1 & e && I(0, Hz, 7, 5, "div", 0),
                            2 & e && y("ngForOf", i.printList)
                        },
                        dependencies: [Gn, Qi, sr, xt, Sc],
                        styles: [".remove-image[_ngcontent-%COMP%]{position:absolute;top:4px;right:4px;z-index:50}.close-view[_ngcontent-%COMP%]{position:fixed;right:12px;top:12px;z-index:500}.print-out[_ngcontent-%COMP%]{width:54mm;height:85mm;border:1px solid #AAA;page-break-inside:avoid;background-color:#fff;float:left;position:relative;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:calc(100% - 4px);height:calc(100% - 4px);object-fit:contain;-webkit-user-select:none;user-select:none;max-width:calc(100% - 4px);max-height:calc(100% - 4px)}.print-out[_ngcontent-%COMP%]   .print-normal[_ngcontent-%COMP%]{width:54mm;height:85mm;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-rotate[_ngcontent-%COMP%]{width:85mm;height:54mm;transform:rotate(90deg);position:absolute;top:59px;left:-59px;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-custom-text[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;height:100%}@media print{.close-view[_ngcontent-%COMP%], .remove-image[_ngcontent-%COMP%], .informartion-text[_ngcontent-%COMP%]{display:none!important}}"]
                    })
                }
                const Uz = function (n, t) {
                    return {
                        "print-normal": n,
                        "print-rotate": t
                    }
                };
                function $z(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 1)(1, "button", 2),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().unselectImage(o))
                        }),
                        g(2, "mat-icon"),
                        S(3, "remove_circle_outline"),
                        b()(),
                        g(4, "div", 3),
                        V(5, "img", 4),
                        b(),
                        V(6, "app-print-custom-text", 5),
                        b()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(4),
                        y("ngClass", Hn(4, Uz, !e.printRotate, e.printRotate)),
                        w(1),
                        Il("src", "./assets/big/", e.subfolder, "/", e.filename, ".", e.fileType, "", wn)
                    }
                }
                class ku {
                    _printInternalService;
                    constructor(t) {
                        this._printInternalService = t
                    }
                    ngOnInit() {}
                    unselectImage(t) {
                        this._printInternalService.deleteByIndex(t)
                    }
                    get list() {
                        return this._printInternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || ku)(p(ui))
                    };
                    static \u0275cmp = Z({
                        type: ku,
                        selectors: [["app-view-print-card-internal"]],
                        decls: 1,
                        vars: 1,
                        consts: [["class", "print-out", 4, "ngFor", "ngForOf"], [1, "print-out"], ["mat-mini-fab", "", 1, "remove-image", 3, "click"], [3, "ngClass"], [3, "src"], [1, "print-custom-text"]],
                        template: function (e, i) {
                            1 & e && I(0, $z, 7, 7, "div", 0),
                            2 & e && y("ngForOf", i.list)
                        },
                        dependencies: [Gn, Qi, sr, xt, Sc],
                        styles: [".remove-image[_ngcontent-%COMP%]{position:absolute;top:4px;right:4px;z-index:50}.close-view[_ngcontent-%COMP%]{position:fixed;right:12px;top:12px;z-index:500}.print-out[_ngcontent-%COMP%]{width:54mm;height:85mm;border:1px solid #AAA;page-break-inside:avoid;background-color:#fff;float:left;position:relative;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:calc(100% - 4px);height:calc(100% - 4px);object-fit:contain;-webkit-user-select:none;user-select:none;max-width:calc(100% - 4px);max-height:calc(100% - 4px)}.print-out[_ngcontent-%COMP%]   .print-normal[_ngcontent-%COMP%]{width:54mm;height:85mm;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-rotate[_ngcontent-%COMP%]{width:85mm;height:54mm;transform:rotate(90deg);position:absolute;top:59px;left:-59px;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-custom-text[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;height:100%}@media print{.close-view[_ngcontent-%COMP%], .remove-image[_ngcontent-%COMP%], .informartion-text[_ngcontent-%COMP%]{display:none!important}}"]
                    })
                }
                function zz(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 1)(1, "button", 2),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().unselectImage(o))
                        }),
                        g(2, "mat-icon"),
                        S(3, "remove_circle_outline"),
                        b()(),
                        g(4, "div", 3),
                        V(5, "img", 4),
                        b()()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(5),
                        y("src", e.url, wn)
                    }
                }
                class Iu {
                    _printExternalService;
                    set printSizeValue(t) {
                        this.printSize = t
                    }
                    printSize = 0;
                    constructor(t) {
                        this._printExternalService = t
                    }
                    ngOnInit() {}
                    unselectImage(t) {
                        this._printExternalService.deleteByIndex(t)
                    }
                    get list() {
                        return this._printExternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || Iu)(p(Ri))
                    };
                    static \u0275cmp = Z({
                        type: Iu,
                        selectors: [["app-view-print-coin-external"]],
                        inputs: {
                            printSizeValue: "printSizeValue"
                        },
                        decls: 1,
                        vars: 1,
                        consts: [["class", "print-out", 4, "ngFor", "ngForOf"], [1, "print-out"], ["mat-mini-fab", "", 1, "remove-image", 3, "click"], [1, "img-area"], [3, "src"]],
                        template: function (e, i) {
                            1 & e && I(0, zz, 6, 1, "div", 0),
                            2 & e && y("ngForOf", i.list)
                        },
                        dependencies: [Qi, sr, xt],
                        styles: [".print-out[_ngcontent-%COMP%]{float:left;position:relative}.print-out[_ngcontent-%COMP%]   .remove-image[_ngcontent-%COMP%]{position:absolute;right:0;top:0}.img-area[_ngcontent-%COMP%]{width:160px;height:160px;border:1px solid black;border-radius:50%}.img-area[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;width:100%;height:100%;object-fit:cover}@media print{.img-area[_ngcontent-%COMP%]{width:25mm;height:25mm}.remove-image[_ngcontent-%COMP%]{display:none}}"]
                    })
                }
                function Gz(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "div", 1)(1, "button", 2),
                        O("click", function () {
                            const o = He(e).index;
                            return Ue($().unselectImage(o))
                        }),
                        g(2, "mat-icon"),
                        S(3, "remove_circle_outline"),
                        b()(),
                        g(4, "div", 3),
                        V(5, "img", 4),
                        b()()
                    }
                    if (2 & n) {
                        const e = t.$implicit;
                        w(5),
                        Il("src", "./assets/big/", e.subfolder, "/", e.filename, ".", e.fileType, "", wn)
                    }
                }
                class Ou {
                    _printInternalService;
                    set printSizeValue(t) {
                        this.printSize = t
                    }
                    printSize = 0;
                    constructor(t) {
                        this._printInternalService = t
                    }
                    ngOnInit() {}
                    unselectImage(t) {
                        this._printInternalService.deleteByIndex(t)
                    }
                    get list() {
                        return this._printInternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || Ou)(p(ui))
                    };
                    static \u0275cmp = Z({
                        type: Ou,
                        selectors: [["app-view-print-coin-internal"]],
                        inputs: {
                            printSizeValue: "printSizeValue"
                        },
                        decls: 1,
                        vars: 1,
                        consts: [["class", "print-out", 4, "ngFor", "ngForOf"], [1, "print-out"], ["mat-mini-fab", "", 1, "remove-image", 3, "click"], [1, "img-area"], [3, "src"]],
                        template: function (e, i) {
                            1 & e && I(0, Gz, 6, 3, "div", 0),
                            2 & e && y("ngForOf", i.list)
                        },
                        dependencies: [Qi, sr, xt],
                        styles: [".print-out[_ngcontent-%COMP%]{float:left;position:relative}.print-out[_ngcontent-%COMP%]   .remove-image[_ngcontent-%COMP%]{position:absolute;right:0;top:0}.img-area[_ngcontent-%COMP%]{width:160px;height:160px;border:1px solid black;border-radius:50%}.img-area[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;width:100%;height:100%;object-fit:cover}@media print{.img-area[_ngcontent-%COMP%]{width:25mm;height:25mm}.remove-image[_ngcontent-%COMP%]{display:none}}"]
                    })
                }
                function Wz(n, t) {
                    1 & n && V(0, "app-info-text", 2),
                    2 & n && y("text", "Please wait.")
                }
                function qz(n, t) {
                    1 & n && V(0, "app-info-text", 2),
                    2 & n && y("text", "No file selected.")
                }
                function Yz(n, t) {
                    if (1 & n && (ii(0), V(1, "app-view-print-coin-internal", 11)(2, "app-view-print-coin-external", 11), ri()), 2 & n) {
                        const e = $(2);
                        w(1),
                        y("printSizeValue", e.coinPrintSize),
                        w(1),
                        y("printSizeValue", e.coinPrintSize)
                    }
                }
                function Kz(n, t) {
                    1 & n && (ii(0), V(1, "app-view-print-card-internal")(2, "app-view-print-card-external"), ri())
                }
                function Zz(n, t) {
                    if (1 & n) {
                        const e = un();
                        ii(0),
                        I(1, qz, 1, 1, "app-info-text", 0),
                        g(2, "button", 3),
                        O("click", function () {
                            return He(e),
                            Ue($().toggleToListView())
                        }),
                        g(3, "mat-icon"),
                        S(4, "close"),
                        b()(),
                        g(5, "div", 4)(6, "div"),
                        S(7, "To print out this preview, use the browser's print function (ctrl+p or "),
                        g(8, "span", 5),
                        O("click", function () {
                            return He(e),
                            Ue($().openPrintDialog())
                        }),
                        S(9, "click"),
                        b(),
                        S(10, ")"),
                        b(),
                        g(11, "div", 6)(12, "mat-radio-group", 7),
                        O("ngModelChange", function (r) {
                            return He(e),
                            Ue($().favoritePrintType = r)
                        }),
                        g(13, "mat-radio-button", 8)(14, "div", 9),
                        S(15, "Card (54mm x 85mm)"),
                        b()(),
                        g(16, "mat-radio-button", 8)(17, "div", 9),
                        S(18, " Coin ( "),
                        S(19, "25mm) "),
                        b()()()(),
                        g(20, "button", 10),
                        O("click", function () {
                            return He(e),
                            Ue($().clear())
                        }),
                        g(21, "mat-icon"),
                        S(22, "layers_clear"),
                        b()()(),
                        I(23, Yz, 3, 2, "ng-container", 1),
                        I(24, Kz, 3, 0, "ng-container", 1),
                        ri()
                    }
                    if (2 & n) {
                        const e = $();
                        w(1),
                        y("ngIf", e.listInternal.length + e.printListExternal.length === 0),
                        w(11),
                        y("ngModel", e.favoritePrintType),
                        w(1),
                        y("value", e.enumPrintType.CARD),
                        w(3),
                        y("value", e.enumPrintType.COIN),
                        w(7),
                        y("ngIf", e.favoritePrintType === e.enumPrintType.COIN),
                        w(1),
                        y("ngIf", e.favoritePrintType === e.enumPrintType.CARD)
                    }
                }
                class Ru {
                    _mainViewButtonService;
                    _printInternalService;
                    _printExternalService;
                    _wait = !1;
                    favoritePrintType = Ec.CARD;
                    enumPrintType = Ec;
                    coinPrintSize = 25;
                    constructor(t, e, i) {
                        this._mainViewButtonService = t,
                        this._printInternalService = e,
                        this._printExternalService = i
                    }
                    ngOnInit() {}
                    clear() {
                        this._printInternalService.clear(),
                        this._printExternalService.clear()
                    }
                    openPrintDialog() {
                        window.print()
                    }
                    toggleToListView() {
                        this._wait = !0,
                        setTimeout(() => {
                            this._mainViewButtonService.mainView = Wr.LIST
                        }, 100)
                    }
                    get listInternal() {
                        return this._printInternalService.printListValue
                    }
                    get wait() {
                        return this._wait
                    }
                    get printListExternal() {
                        return this._printExternalService.printListValue
                    }
                    static \u0275fac = function (e) {
                        return new(e || Ru)(p(os), p(ui), p(Ri))
                    };
                    static \u0275cmp = Z({
                        type: Ru,
                        selectors: [["app-view-print"]],
                        decls: 2,
                        vars: 2,
                        consts: [[3, "text", 4, "ngIf"], [4, "ngIf"], [3, "text"], ["mat-fab", "", "matTooltip", "Clase view", 1, "close-view", 3, "click"], [1, "informartion-text", "mat-elevation-z4"], [1, "open-print-dialog", 3, "click"], [1, "print-type-select-area"], ["aria-label", "Select an option", 3, "ngModel", "ngModelChange"], [3, "value"], [1, "select-type-text"], ["mat-mini-fab", "", "matTooltip", "Clear list.", 3, "click"], [3, "printSizeValue"]],
                        template: function (e, i) {
                            1 & e && (I(0, Wz, 1, 1, "app-info-text", 0), I(1, Zz, 25, 6, "ng-container", 1)),
                            2 & e && (y("ngIf", i.wait), w(1), y("ngIf", !i.wait))
                        },
                        dependencies: [Zt, ux, Bm, sr, Jj, xt, UM, $M, o_, Tu, Au, ku, Iu, Ou],
                        styles: [".informartion-text[_ngcontent-%COMP%]{padding:14px;background-color:orange;margin:0 100px 20px;border-bottom-left-radius:20px;border-bottom-right-radius:20px;text-align:center;position:sticky;top:0;z-index:500}.informartion-text[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;right:8px;top:8px}.open-print-dialog[_ngcontent-%COMP%]{cursor:pointer;text-decoration:underline;color:#66f}.remove-image[_ngcontent-%COMP%]{position:absolute;top:4px;right:4px;z-index:50}.close-view[_ngcontent-%COMP%]{position:fixed;right:12px;top:12px;z-index:500}.print-out[_ngcontent-%COMP%]{width:54mm;height:85mm;border:1px solid #aaa;page-break-inside:avoid;background-color:#fff;float:left;position:relative;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:calc(100% - 4px);height:calc(100% - 4px);object-fit:contain;-webkit-user-select:none;user-select:none;max-width:calc(100% - 4px);max-height:calc(100% - 4px)}.print-out[_ngcontent-%COMP%]   .print-normal[_ngcontent-%COMP%]{width:54mm;height:85mm;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-rotate[_ngcontent-%COMP%]{width:85mm;height:54mm;transform:rotate(90deg);position:absolute;top:59px;left:-59px;-webkit-user-select:none;user-select:none}.print-out[_ngcontent-%COMP%]   .print-custom-text[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;height:100%}.mat-radio-button[_ngcontent-%COMP%]{margin:0 12px}.print-type-select-area[_ngcontent-%COMP%]{margin-top:8px}.print-type-select-area[_ngcontent-%COMP%]   .select-type-text[_ngcontent-%COMP%]{display:flex;align-items:center}.print-type-select-area[_ngcontent-%COMP%]   .select-type-text[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer;margin:2px 2px 0;width:40px;text-align:right;background-color:#ffffff80;border:none;border-radius:4px;line-height:18px}.print-type-select-area[_ngcontent-%COMP%]   .select-type-text[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus-visible{outline:none}@media print{.close-view[_ngcontent-%COMP%], .remove-image[_ngcontent-%COMP%], .informartion-text[_ngcontent-%COMP%]{display:none!important}}"]
                    })
                }
                function Xz(n, t) {
                    if (1 & n && (g(0, "div", 18)(1, "div"), S(2), b()()), 2 & n) {
                        const e = $(2);
                        w(2),
                        jn(e.numberInternalPrintElements + e.numberExternalPrintElements)
                    }
                }
                function Qz(n, t) {
                    if (1 & n && (g(0, "div", 18)(1, "div"), S(2), b()()), 2 & n) {
                        const e = $(2);
                        w(2),
                        jn(e.numberExternalPrintElements)
                    }
                }
                function Jz(n, t) {
                    1 & n && V(0, "app-table")
                }
                function e5(n, t) {
                    1 & n && (g(0, "div", 19)(1, "div", 20), V(2, "mat-spinner"), b()())
                }
                const t5 = function (n) {
                    return {
                        disabled: n
                    }
                };
                function n5(n, t) {
                    if (1 & n) {
                        const e = un();
                        g(0, "mat-sidenav-container", 2)(1, "mat-sidenav", 3, 4),
                        O("openedChange", function (r) {
                            return He(e),
                            Ue($().isVisibleLeft = r)
                        }),
                        g(3, "app-sidenav-left", 5),
                        O("isVisibleChange", function (r) {
                            return He(e),
                            Ue($().isVisibleLeft = r)
                        }),
                        b()(),
                        g(4, "mat-sidenav", 6, 7),
                        O("openedChange", function (r) {
                            return He(e),
                            Ue($().isVisibleRight = r)
                        }),
                        g(6, "app-sidenav-right", 5),
                        O("isVisibleChange", function (r) {
                            return He(e),
                            Ue($().isVisibleRight = r)
                        }),
                        b()(),
                        g(7, "mat-sidenav-content")(8, "div", 8)(9, "mat-toolbar")(10, "mat-toolbar-row")(11, "button", 9),
                        O("click", function () {
                            return He(e),
                            Ue(qo(2).toggle())
                        }),
                        g(12, "mat-icon"),
                        S(13, "more_vert"),
                        b()(),
                        V(14, "app-title", 10)(15, "span", 11)(16, "app-global-filter-input"),
                        g(17, "button", 12),
                        O("click", function () {
                            return He(e),
                            Ue($().toggleToPrintView())
                        }),
                        g(18, "mat-icon", 13),
                        S(19, "print "),
                        b(),
                        I(20, Xz, 3, 1, "div", 14),
                        b(),
                        g(21, "button", 9),
                        O("click", function () {
                            return He(e),
                            Ue($().openDialog())
                        }),
                        g(22, "mat-icon"),
                        S(23, "link"),
                        b(),
                        I(24, Qz, 3, 1, "div", 14),
                        b(),
                        V(25, "app-add-all", 15),
                        g(26, "button", 16),
                        O("click", function () {
                            return He(e),
                            Ue(qo(5).toggle())
                        }),
                        g(27, "mat-icon"),
                        S(28, "filter_list"),
                        b()()()()(),
                        I(29, Jz, 1, 0, "app-table", 1),
                        I(30, e5, 3, 0, "div", 17),
                        b()()
                    }
                    if (2 & n) {
                        const e = $();
                        w(1),
                        y("mode", e.mode.value)("opened", e.isVisibleLeft),
                        w(2),
                        y("isVisible", e.isVisibleLeft),
                        w(1),
                        y("mode", e.mode.value)("opened", e.isVisibleRight),
                        w(2),
                        y("isVisible", e.isVisibleRight),
                        w(11),
                        y("disabled", e.numberInternalPrintElements + e.numberExternalPrintElements === 0),
                        w(1),
                        y("ngClass", jt(12, t5, e.numberInternalPrintElements + e.numberExternalPrintElements === 0)),
                        w(2),
                        y("ngIf", e.numberInternalPrintElements + e.numberExternalPrintElements !== 0),
                        w(4),
                        y("ngIf", 0 !== e.numberExternalPrintElements),
                        w(5),
                        y("ngIf", 0 === e.activeDownloads),
                        w(1),
                        y("ngIf", 0 !== e.activeDownloads)
                    }
                }
                function r5(n, t) {
                    1 & n && V(0, "app-view-print")
                }
                class Pu {
                    dialog;
                    _route;
                    _downloadService;
                    _parameterService;
                    _printInternalService;
                    _printExternalService;
                    _mainViewButtonService;
                    _mode = new QV("over");
                    _activeDownloads = 0;
                    _isVisibleLeft = !1;
                    _isVisibleRight = !1;
                    constructor(t, e, i, r, o, s, a) {
                        this.dialog = t,
                        this._route = e,
                        this._downloadService = i,
                        this._parameterService = r,
                        this._printInternalService = o,
                        this._printExternalService = s,
                        this._mainViewButtonService = a
                    }
                    ngOnInit() {
                        this._route.queryParamMap.subscribe(t => {
                            this._parameterService.parameter = t
                        }),
                        this._downloadService.listen([ms.MAIN]).subscribe(t => {
                            this._activeDownloads = t
                        })
                    }
                    toggleToPrintView() {
                        this._mainViewButtonService.mainView = Wr.PRINT
                    }
                    openDialog() {
                        this.dialog.open(qd, {
                            panelClass: "dialog-add-link-class",
                            width: "80%"
                        })
                    }
                    get numberInternalPrintElements() {
                        return this._printInternalService.printListValue.length
                    }
                    get enumMainViewList() {
                        return Wr
                    }
                    get enumMainViewSelected() {
                        return this._mainViewButtonService.mainView
                    }
                    get mode() {
                        return this._mode
                    }
                    get numberExternalPrintElements() {
                        return this._printExternalService.printListValue.length
                    }
                    get activeDownloads() {
                        return this._activeDownloads
                    }
                    get isVisibleLeft() {
                        return this._isVisibleLeft
                    }
                    set isVisibleLeft(t) {
                        this._isVisibleLeft = t
                    }
                    get isVisibleRight() {
                        return this._isVisibleRight
                    }
                    set isVisibleRight(t) {
                        this._isVisibleRight = t
                    }
                    static \u0275fac = function (e) {
                        return new(e || Pu)(p(Vd), p(ro), p(Jr), p(Sn), p(ui), p(Ri), p(os))
                    };
                    static \u0275cmp = Z({
                        type: Pu,
                        selectors: [["app-root"]],
                        decls: 2,
                        vars: 2,
                        consts: [["id", "view-area-list", 4, "ngIf"], [4, "ngIf"], ["id", "view-area-list"], [1, "sidenav-left", "mat-elevation-z20", 3, "mode", "opened", "openedChange"], ["sidenavLeft", ""], [3, "isVisible", "isVisibleChange"], ["position", "end", 1, "sidenav-right", "mat-elevation-z20", 3, "mode", "opened", "openedChange"], ["sidenavRight", ""], [1, "toolbar-holder", "mat-elevation-z4"], ["mat-icon-button", "", 3, "click"], [1, "name"], [1, "flex-expand"], ["mat-icon-button", "", 3, "disabled", "click"], [3, "ngClass"], ["primaray", "", "class", "numbers", 4, "ngIf"], [1, "add-all"], ["mat-icon-button", "", 1, "open-filter-sidenav", 3, "click"], ["class", "load", 4, "ngIf"], ["primaray", "", 1, "numbers"], [1, "load"], [2, "position", "relative"]],
                        template: function (e, i) {
                            1 & e && (I(0, n5, 31, 14, "mat-sidenav-container", 0), I(1, r5, 1, 0, "app-view-print", 1)),
                            2 & e && (y("ngIf", i.enumMainViewSelected === i.enumMainViewList.LIST), w(1), y("ngIf", i.enumMainViewSelected === i.enumMainViewList.PRINT))
                        },
                        dependencies: [Gn, Zt, mE, xt, v3, AM, kM, n_, N3, IM, vc, yc, vu, wu, Su, Mu, Ru],
                        styles: ["#view-area-list[_ngcontent-%COMP%]{height:100%;position:relative}#view-area-list[_ngcontent-%COMP%]   .toolbar-holder[_ngcontent-%COMP%]{width:100%;position:sticky;top:0;z-index:1000}#view-area-list[_ngcontent-%COMP%]   .toolbar-holder[_ngcontent-%COMP%]   .mat-toolbar-row[_ngcontent-%COMP%]{background-color:#000;color:#fff}#view-area-list[_ngcontent-%COMP%]   .load[_ngcontent-%COMP%]{width:100%;height:calc(100% - 60px);display:flex;justify-content:center;align-items:center}#view-area-list[_ngcontent-%COMP%]   .load[_ngcontent-%COMP%]   .percent-number[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center}#view-area-list[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{margin-left:20px}#view-area-list[_ngcontent-%COMP%]   .mat-drawer-content[_ngcontent-%COMP%]{background-color:#2a3942;color:#fff}#view-area-list[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]{background-color:#111b21;color:#fff}#view-area-list[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%]{background-color:#000000e6}#view-area-list[_ngcontent-%COMP%]   .mat-sidenav-container[_ngcontent-%COMP%]{margin-top:64px;height:calc(100% - 64px);width:100%;position:absolute;bottom:0;overflow:auto;z-index:500}mat-icon.disabled[_ngcontent-%COMP%]{color:#323232!important}.flex-expand[_ngcontent-%COMP%]{flex:1 1 auto}.numbers[_ngcontent-%COMP%]{position:absolute;bottom:0;right:0;background-color:green;height:18px;min-width:18px;font-size:12px;border-radius:9px;padding:0 2px}.numbers[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:100%;height:100%;border-radius:50%}.sidenav-left[_ngcontent-%COMP%]{border:0 solid rgb(100,100,100);border-right-width:1px}.sidenav-right[_ngcontent-%COMP%]{width:calc(100% - 50px);border:0 solid rgb(100,100,100);border-left-width:1px}@media screen and (width < 970px){app-global-filter-input[_ngcontent-%COMP%]{display:none}.mat-toolbar-row[_ngcontent-%COMP%]{padding:0;height:48px}.mat-toolbar-multiple-rows[_ngcontent-%COMP%]{min-height:48px}}@media screen and (width > 969px){.open-filter-sidenav[_ngcontent-%COMP%], .add-all[_ngcontent-%COMP%]{display:none}}@media screen and (width < 530px){#view-area-list[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{margin-left:0!important}}"]
                    })
                }
                const o5 = [];
                class Fu {
                    static \u0275fac = function (e) {
                        return new(e || Fu)
                    };
                    static \u0275mod = me({
                        type: Fu
                    });
                    static \u0275inj = he({
                        imports: [CM.forRoot(o5), CM]
                    })
                }
                function zM(n) {
                    return new E(3e3, !1)
                }
                function j5() {
                    return typeof window < "u" && typeof window.document < "u"
                }
                function l_() {
                    return typeof process < "u" && "[object process]" === {}
                    .toString.call(process)
                }
                function mr(n) {
                    switch (n.length) {
                    case 0:
                        return new Ja;
                    case 1:
                        return n[0];
                    default:
                        return new BE(n)
                    }
                }
                function GM(n, t, e, i, r = new Map, o = new Map) {
                    const s = [],
                    a = [];
                    let c = -1,
                    l = null;
                    if (i.forEach(d => {
                            const u = d.get("offset"),
                            h = u == c,
                            f = h && l || new Map;
                            d.forEach((m, _) => {
                                let C = _,
                                D = m;
                                if ("offset" !== _)
                                    switch (C = t.normalizePropertyName(C, s), D) {
                                    case "!":
                                        D = r.get(_);
                                        break;
                                    case Fi:
                                        D = o.get(_);
                                        break;
                                    default:
                                        D = t.normalizeStyleValue(_, C, D, s)
                                    }
                                f.set(C, D)
                            }),
                            h || a.push(f),
                            l = f,
                            c = u
                        }), s.length)
                        throw function T5(n) {
                            return new E(3502, !1)
                        }
                    ();
                    return a
                }
                function d_(n, t, e, i) {
                    switch (t) {
                    case "start":
                        n.onStart(() => i(e && u_(e, "start", n)));
                        break;
                    case "done":
                        n.onDone(() => i(e && u_(e, "done", n)));
                        break;
                    case "destroy":
                        n.onDestroy(() => i(e && u_(e, "destroy", n)))
                    }
                }
                function u_(n, t, e) {
                    const o = h_(n.element, n.triggerName, n.fromState, n.toState, t || n.phaseName, e.totalTime ?? n.totalTime, !!e.disabled),
                    s = n._data;
                    return null != s && (o._data = s),
                    o
                }
                function h_(n, t, e, i, r = "", o = 0, s) {
                    return {
                        element: n,
                        triggerName: t,
                        fromState: e,
                        toState: i,
                        phaseName: r,
                        totalTime: o,
                        disabled: !!s
                    }
                }
                function hn(n, t, e) {
                    let i = n.get(t);
                    return i || n.set(t, i = e),
                    i
                }
                function WM(n) {
                    const t = n.indexOf(":");
                    return [n.substring(1, t), n.slice(t + 1)]
                }
                let f_ = (n, t) => !1,
                qM = (n, t, e) => [],
                YM = null;
                function p_(n) {
                    const t = n.parentNode || n.host;
                    return t === YM ? null : t
                }
                (l_() || typeof Element < "u") && (j5() ? (YM = (() => document.documentElement)(), f_ = (n, t) => {
                        for (; t; ) {
                            if (t === n)
                                return !0;
                            t = p_(t)
                        }
                        return !1
                    }) : f_ = (n, t) => n.contains(t), qM = (n, t, e) => {
                    if (e)
                        return Array.from(n.querySelectorAll(t));
                    const i = n.querySelector(t);
                    return i ? [i] : []
                });
                let ao = null,
                KM = !1;
                const ZM = f_,
                XM = qM;
                let QM = (() => {
                    class n {
                        validateStyleProperty(e) {
                            return function U5(n) {
                                ao || (ao = function $5() {
                                    return typeof document < "u" ? document.body : null
                                }
                                    () || {}, KM = !!ao.style && "WebkitAppearance" in ao.style);
                                let t = !0;
                                return ao.style && !function H5(n) {
                                    return "ebkit" == n.substring(1, 6)
                                }
                                (n) && (t = n in ao.style, !t && KM && (t = "Webkit" + n.charAt(0).toUpperCase() + n.slice(1)in ao.style)),
                                t
                            }
                            (e)
                        }
                        matchesElement(e, i) {
                            return !1
                        }
                        containsElement(e, i) {
                            return ZM(e, i)
                        }
                        getParentElement(e) {
                            return p_(e)
                        }
                        query(e, i, r) {
                            return XM(e, i, r)
                        }
                        computeStyle(e, i, r) {
                            return r || ""
                        }
                        animate(e, i, r, o, s, a = [], c) {
                            return new Ja(r, o)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                m_ = (() => {
                    class n {}
                    return n.NOOP = new QM,
                    n
                })();
                const g_ = "ng-enter",
                Nu = "ng-leave",
                Lu = "ng-trigger",
                Vu = ".ng-trigger",
                eT = "ng-animating",
                __ = ".ng-animating";
                function Bi(n) {
                    if ("number" == typeof n)
                        return n;
                    const t = n.match(/^(-?[\.\d]+)(m?s)/);
                    return !t || t.length < 2 ? 0 : b_(parseFloat(t[1]), t[2])
                }
                function b_(n, t) {
                    return "s" === t ? 1e3 * n : n
                }
                function Bu(n, t, e) {
                    return n.hasOwnProperty("duration") ? n : function W5(n, t, e) {
                        let r,
                        o = 0,
                        s = "";
                        if ("string" == typeof n) {
                            const a = n.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                            if (null === a)
                                return t.push(zM()), {
                                    duration: 0,
                                    delay: 0,
                                    easing: ""
                                };
                            r = b_(parseFloat(a[1]), a[2]);
                            const c = a[3];
                            null != c && (o = b_(parseFloat(c), a[4]));
                            const l = a[5];
                            l && (s = l)
                        } else
                            r = n;
                        if (!e) {
                            let a = !1,
                            c = t.length;
                            r < 0 && (t.push(function s5() {
                                    return new E(3100, !1)
                                }
                                    ()), a = !0),
                            o < 0 && (t.push(function a5() {
                                    return new E(3101, !1)
                                }
                                    ()), a = !0),
                            a && t.splice(c, 0, zM())
                        }
                        return {
                            duration: r,
                            delay: o,
                            easing: s
                        }
                    }
                    (n, t, e)
                }
                function Mc(n, t = {}) {
                    return Object.keys(n).forEach(e => {
                        t[e] = n[e]
                    }),
                    t
                }
                function tT(n) {
                    const t = new Map;
                    return Object.keys(n).forEach(e => {
                        t.set(e, n[e])
                    }),
                    t
                }
                function gr(n, t = new Map, e) {
                    if (e)
                        for (let [i, r] of e)
                            t.set(i, r);
                    for (let [i, r] of n)
                        t.set(i, r);
                    return t
                }
                function iT(n, t, e) {
                    return e ? t + ":" + e + ";" : ""
                }
                function rT(n) {
                    let t = "";
                    for (let e = 0; e < n.style.length; e++) {
                        const i = n.style.item(e);
                        t += iT(0, i, n.style.getPropertyValue(i))
                    }
                    for (const e in n.style)
                        n.style.hasOwnProperty(e) && !e.startsWith("_") && (t += iT(0, Z5(e), n.style[e]));
                    n.setAttribute("style", t)
                }
                function mi(n, t, e) {
                    n.style && (t.forEach((i, r) => {
                            const o = y_(r);
                            e && !e.has(r) && e.set(r, n.style[o]),
                            n.style[o] = i
                        }), l_() && rT(n))
                }
                function co(n, t) {
                    n.style && (t.forEach((e, i) => {
                            const r = y_(i);
                            n.style[r] = ""
                        }), l_() && rT(n))
                }
                function Tc(n) {
                    return Array.isArray(n) ? 1 == n.length ? n[0] : FE(n) : n
                }
                const v_ = new RegExp("{{\\s*(.+?)\\s*}}", "g");
                function oT(n) {
                    let t = [];
                    if ("string" == typeof n) {
                        let e;
                        for (; e = v_.exec(n); )
                            t.push(e[1]);
                        v_.lastIndex = 0
                    }
                    return t
                }
                function Ac(n, t, e) {
                    const i = n.toString(),
                    r = i.replace(v_, (o, s) => {
                        let a = t[s];
                        return null == a && (e.push(function l5(n) {
                                return new E(3003, !1)
                            }
                                ()), a = ""),
                        a.toString()
                    });
                    return r == i ? n : r
                }
                function ju(n) {
                    const t = [];
                    let e = n.next();
                    for (; !e.done; )
                        t.push(e.value), e = n.next();
                    return t
                }
                const K5 = /-+([a-z0-9])/g;
                function y_(n) {
                    return n.replace(K5, (...t) => t[1].toUpperCase())
                }
                function Z5(n) {
                    return n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
                }
                function fn(n, t, e) {
                    switch (t.type) {
                    case 7:
                        return n.visitTrigger(t, e);
                    case 0:
                        return n.visitState(t, e);
                    case 1:
                        return n.visitTransition(t, e);
                    case 2:
                        return n.visitSequence(t, e);
                    case 3:
                        return n.visitGroup(t, e);
                    case 4:
                        return n.visitAnimate(t, e);
                    case 5:
                        return n.visitKeyframes(t, e);
                    case 6:
                        return n.visitStyle(t, e);
                    case 8:
                        return n.visitReference(t, e);
                    case 9:
                        return n.visitAnimateChild(t, e);
                    case 10:
                        return n.visitAnimateRef(t, e);
                    case 11:
                        return n.visitQuery(t, e);
                    case 12:
                        return n.visitStagger(t, e);
                    default:
                        throw function d5(n) {
                            return new E(3004, !1)
                        }
                        ()
                    }
                }
                function sT(n, t) {
                    return window.getComputedStyle(n)[t]
                }
                function nG(n, t) {
                    const e = [];
                    return "string" == typeof n ? n.split(/\s*,\s*/).forEach(i => function iG(n, t, e) {
                        if (":" == n[0]) {
                            const c = function rG(n, t) {
                                switch (n) {
                                case ":enter":
                                    return "void => *";
                                case ":leave":
                                    return "* => void";
                                case ":increment":
                                    return (e, i) => parseFloat(i) > parseFloat(e);
                                case ":decrement":
                                    return (e, i) => parseFloat(i) < parseFloat(e);
                                default:
                                    return t.push(function x5(n) {
                                        return new E(3016, !1)
                                    }
                                        ()),
                                    "* => *"
                                }
                            }
                            (n, e);
                            if ("function" == typeof c)
                                return void t.push(c);
                            n = c
                        }
                        const i = n.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                        if (null == i || i.length < 4)
                            return e.push(function D5(n) {
                                return new E(3015, !1)
                            }
                                ()), t;
                        const r = i[1],
                        o = i[2],
                        s = i[3];
                        t.push(aT(r, s));
                        "<" == o[0] && !("*" == r && "*" == s) && t.push(aT(s, r))
                    }
                        (i, e, t)) : e.push(n),
                    e
                }
                const zu = new Set(["true", "1"]),
                Gu = new Set(["false", "0"]);
                function aT(n, t) {
                    const e = zu.has(n) || Gu.has(n),
                    i = zu.has(t) || Gu.has(t);
                    return (r, o) => {
                        let s = "*" == n || n == r,
                        a = "*" == t || t == o;
                        return !s && e && "boolean" == typeof r && (s = r ? zu.has(n) : Gu.has(n)),
                        !a && i && "boolean" == typeof o && (a = o ? zu.has(t) : Gu.has(t)),
                        s && a
                    }
                }
                const oG = new RegExp("s*:selfs*,?", "g");
                function w_(n, t, e, i) {
                    return new sG(n).build(t, e, i)
                }
                class sG {
                    constructor(t) {
                        this._driver = t
                    }
                    build(t, e, i) {
                        const r = new lG(e);
                        return this._resetContextStyleTimingState(r),
                        fn(this, Tc(t), r)
                    }
                    _resetContextStyleTimingState(t) {
                        t.currentQuerySelector = "",
                        t.collectedStyles = new Map,
                        t.collectedStyles.set("", new Map),
                        t.currentTime = 0
                    }
                    visitTrigger(t, e) {
                        let i = e.queryCount = 0,
                        r = e.depCount = 0;
                        const o = [],
                        s = [];
                        return "@" == t.name.charAt(0) && e.errors.push(function h5() {
                            return new E(3006, !1)
                        }
                            ()),
                        t.definitions.forEach(a => {
                            if (this._resetContextStyleTimingState(e), 0 == a.type) {
                                const c = a,
                                l = c.name;
                                l.toString().split(/\s*,\s*/).forEach(d => {
                                    c.name = d,
                                    o.push(this.visitState(c, e))
                                }),
                                c.name = l
                            } else if (1 == a.type) {
                                const c = this.visitTransition(a, e);
                                i += c.queryCount,
                                r += c.depCount,
                                s.push(c)
                            } else
                                e.errors.push(function f5() {
                                    return new E(3007, !1)
                                }
                                    ())
                        }), {
                            type: 7,
                            name: t.name,
                            states: o,
                            transitions: s,
                            queryCount: i,
                            depCount: r,
                            options: null
                        }
                    }
                    visitState(t, e) {
                        const i = this.visitStyle(t.styles, e),
                        r = t.options && t.options.params || null;
                        if (i.containsDynamicStyles) {
                            const o = new Set,
                            s = r || {};
                            i.styles.forEach(a => {
                                a instanceof Map && a.forEach(c => {
                                    oT(c).forEach(l => {
                                        s.hasOwnProperty(l) || o.add(l)
                                    })
                                })
                            }),
                            o.size && (ju(o.values()), e.errors.push(function p5(n, t) {
                                    return new E(3008, !1)
                                }
                                    ()))
                        }
                        return {
                            type: 0,
                            name: t.name,
                            style: i,
                            options: r ? {
                                params: r
                            }
                             : null
                        }
                    }
                    visitTransition(t, e) {
                        e.queryCount = 0,
                        e.depCount = 0;
                        const i = fn(this, Tc(t.animation), e);
                        return {
                            type: 1,
                            matchers: nG(t.expr, e.errors),
                            animation: i,
                            queryCount: e.queryCount,
                            depCount: e.depCount,
                            options: lo(t.options)
                        }
                    }
                    visitSequence(t, e) {
                        return {
                            type: 2,
                            steps: t.steps.map(i => fn(this, i, e)),
                            options: lo(t.options)
                        }
                    }
                    visitGroup(t, e) {
                        const i = e.currentTime;
                        let r = 0;
                        const o = t.steps.map(s => {
                            e.currentTime = i;
                            const a = fn(this, s, e);
                            return r = Math.max(r, e.currentTime),
                            a
                        });
                        return e.currentTime = r, {
                            type: 3,
                            steps: o,
                            options: lo(t.options)
                        }
                    }
                    visitAnimate(t, e) {
                        const i = function uG(n, t) {
                            if (n.hasOwnProperty("duration"))
                                return n;
                            if ("number" == typeof n)
                                return C_(Bu(n, t).duration, 0, "");
                            const e = n;
                            if (e.split(/\s+/).some(o => "{" == o.charAt(0) && "{" == o.charAt(1))) {
                                const o = C_(0, 0, "");
                                return o.dynamic = !0,
                                o.strValue = e,
                                o
                            }
                            const r = Bu(e, t);
                            return C_(r.duration, r.delay, r.easing)
                        }
                        (t.timings, e.errors);
                        e.currentAnimateTimings = i;
                        let r,
                        o = t.styles ? t.styles : Xt({});
                        if (5 == o.type)
                            r = this.visitKeyframes(o, e);
                        else {
                            let s = t.styles,
                            a = !1;
                            if (!s) {
                                a = !0;
                                const l = {};
                                i.easing && (l.easing = i.easing),
                                s = Xt(l)
                            }
                            e.currentTime += i.duration + i.delay;
                            const c = this.visitStyle(s, e);
                            c.isEmptyStep = a,
                            r = c
                        }
                        return e.currentAnimateTimings = null, {
                            type: 4,
                            timings: i,
                            style: r,
                            options: null
                        }
                    }
                    visitStyle(t, e) {
                        const i = this._makeStyleAst(t, e);
                        return this._validateStyleAst(i, e),
                        i
                    }
                    _makeStyleAst(t, e) {
                        const i = [],
                        r = Array.isArray(t.styles) ? t.styles : [t.styles];
                        for (let a of r)
                            "string" == typeof a ? a === Fi ? i.push(a) : e.errors.push(new E(3002, !1)) : i.push(tT(a));
                        let o = !1,
                        s = null;
                        return i.forEach(a => {
                            if (a instanceof Map && (a.has("easing") && (s = a.get("easing"), a.delete("easing")), !o))
                                for (let c of a.values())
                                    if (c.toString().indexOf("{{") >= 0) {
                                        o = !0;
                                        break
                                    }
                        }), {
                            type: 6,
                            styles: i,
                            easing: s,
                            offset: t.offset,
                            containsDynamicStyles: o,
                            options: null
                        }
                    }
                    _validateStyleAst(t, e) {
                        const i = e.currentAnimateTimings;
                        let r = e.currentTime,
                        o = e.currentTime;
                        i && o > 0 && (o -= i.duration + i.delay),
                        t.styles.forEach(s => {
                            "string" != typeof s && s.forEach((a, c) => {
                                const l = e.collectedStyles.get(e.currentQuerySelector),
                                d = l.get(c);
                                let u = !0;
                                d && (o != r && o >= d.startTime && r <= d.endTime && (e.errors.push(function g5(n, t, e, i, r) {
                                            return new E(3010, !1)
                                        }
                                            ()), u = !1), o = d.startTime),
                                u && l.set(c, {
                                    startTime: o,
                                    endTime: r
                                }),
                                e.options && function Y5(n, t, e) {
                                    const i = t.params || {},
                                    r = oT(n);
                                    r.length && r.forEach(o => {
                                        i.hasOwnProperty(o) || e.push(function c5(n) {
                                            return new E(3001, !1)
                                        }
                                            ())
                                    })
                                }
                                (a, e.options, e.errors)
                            })
                        })
                    }
                    visitKeyframes(t, e) {
                        const i = {
                            type: 5,
                            styles: [],
                            options: null
                        };
                        if (!e.currentAnimateTimings)
                            return e.errors.push(function _5() {
                                return new E(3011, !1)
                            }
                                ()), i;
                        let o = 0;
                        const s = [];
                        let a = !1,
                        c = !1,
                        l = 0;
                        const d = t.steps.map(D => {
                            const A = this._makeStyleAst(D, e);
                            let x = null != A.offset ? A.offset : function dG(n) {
                                if ("string" == typeof n)
                                    return null;
                                let t = null;
                                if (Array.isArray(n))
                                    n.forEach(e => {
                                        if (e instanceof Map && e.has("offset")) {
                                            const i = e;
                                            t = parseFloat(i.get("offset")),
                                            i.delete("offset")
                                        }
                                    });
                                else if (n instanceof Map && n.has("offset")) {
                                    const e = n;
                                    t = parseFloat(e.get("offset")),
                                    e.delete("offset")
                                }
                                return t
                            }
                            (A.styles),
                            P = 0;
                            return null != x && (o++, P = A.offset = x),
                            c = c || P < 0 || P > 1,
                            a = a || P < l,
                            l = P,
                            s.push(P),
                            A
                        });
                        c && e.errors.push(function b5() {
                            return new E(3012, !1)
                        }
                            ()),
                        a && e.errors.push(function v5() {
                            return new E(3200, !1)
                        }
                            ());
                        const u = t.steps.length;
                        let h = 0;
                        o > 0 && o < u ? e.errors.push(function y5() {
                            return new E(3202, !1)
                        }
                            ()) : 0 == o && (h = 1 / (u - 1));
                        const f = u - 1,
                        m = e.currentTime,
                        _ = e.currentAnimateTimings,
                        C = _.duration;
                        return d.forEach((D, A) => {
                            const x = h > 0 ? A == f ? 1 : h * A : s[A],
                            P = x * C;
                            e.currentTime = m + _.delay + P,
                            _.duration = P,
                            this._validateStyleAst(D, e),
                            D.offset = x,
                            i.styles.push(D)
                        }),
                        i
                    }
                    visitReference(t, e) {
                        return {
                            type: 8,
                            animation: fn(this, Tc(t.animation), e),
                            options: lo(t.options)
                        }
                    }
                    visitAnimateChild(t, e) {
                        return e.depCount++, {
                            type: 9,
                            options: lo(t.options)
                        }
                    }
                    visitAnimateRef(t, e) {
                        return {
                            type: 10,
                            animation: this.visitReference(t.animation, e),
                            options: lo(t.options)
                        }
                    }
                    visitQuery(t, e) {
                        const i = e.currentQuerySelector,
                        r = t.options || {};
                        e.queryCount++,
                        e.currentQuery = t;
                        const [o, s] = function aG(n) {
                            const t = !!n.split(/\s*,\s*/).find(e => ":self" == e);
                            return t && (n = n.replace(oG, "")),
                            n = n.replace(/@\*/g, Vu).replace(/@\w+/g, e => Vu + "-" + e.slice(1)).replace(/:animating/g, __),
                            [n, t]
                        }
                        (t.selector);
                        e.currentQuerySelector = i.length ? i + " " + o : o,
                        hn(e.collectedStyles, e.currentQuerySelector, new Map);
                        const a = fn(this, Tc(t.animation), e);
                        return e.currentQuery = null,
                        e.currentQuerySelector = i, {
                            type: 11,
                            selector: o,
                            limit: r.limit || 0,
                            optional: !!r.optional,
                            includeSelf: s,
                            animation: a,
                            originalSelector: t.selector,
                            options: lo(t.options)
                        }
                    }
                    visitStagger(t, e) {
                        e.currentQuery || e.errors.push(function w5() {
                            return new E(3013, !1)
                        }
                            ());
                        const i = "full" === t.timings ? {
                            duration: 0,
                            delay: 0,
                            easing: "full"
                        }
                         : Bu(t.timings, e.errors, !0);
                        return {
                            type: 12,
                            animation: fn(this, Tc(t.animation), e),
                            timings: i,
                            options: null
                        }
                    }
                }
                class lG {
                    constructor(t) {
                        this.errors = t,
                        this.queryCount = 0,
                        this.depCount = 0,
                        this.currentTransition = null,
                        this.currentQuery = null,
                        this.currentQuerySelector = null,
                        this.currentAnimateTimings = null,
                        this.currentTime = 0,
                        this.collectedStyles = new Map,
                        this.options = null,
                        this.unsupportedCSSPropertiesFound = new Set
                    }
                }
                function lo(n) {
                    return n ? (n = Mc(n)).params && (n.params = function cG(n) {
                        return n ? Mc(n) : null
                    }
                        (n.params)) : n = {},
                    n
                }
                function C_(n, t, e) {
                    return {
                        duration: n,
                        delay: t,
                        easing: e
                    }
                }
                function D_(n, t, e, i, r, o, s = null, a = !1) {
                    return {
                        type: 1,
                        element: n,
                        keyframes: t,
                        preStyleProps: e,
                        postStyleProps: i,
                        duration: r,
                        delay: o,
                        totalTime: r + o,
                        easing: s,
                        subTimeline: a
                    }
                }
                class Wu {
                    constructor() {
                        this._map = new Map
                    }
                    get(t) {
                        return this._map.get(t) || []
                    }
                    append(t, e) {
                        let i = this._map.get(t);
                        i || this._map.set(t, i = []),
                        i.push(...e)
                    }
                    has(t) {
                        return this._map.has(t)
                    }
                    clear() {
                        this._map.clear()
                    }
                }
                const pG = new RegExp(":enter", "g"),
                gG = new RegExp(":leave", "g");
                function x_(n, t, e, i, r, o = new Map, s = new Map, a, c, l = []) {
                    return (new _G).buildKeyframes(n, t, e, i, r, o, s, a, c, l)
                }
                class _G {
                    buildKeyframes(t, e, i, r, o, s, a, c, l, d = []) {
                        l = l || new Wu;
                        const u = new E_(t, e, l, r, o, d, []);
                        u.options = c;
                        const h = c.delay ? Bi(c.delay) : 0;
                        u.currentTimeline.delayNextStep(h),
                        u.currentTimeline.setStyles([s], null, u.errors, c),
                        fn(this, i, u);
                        const f = u.timelines.filter(m => m.containsAnimation());
                        if (f.length && a.size) {
                            let m;
                            for (let _ = f.length - 1; _ >= 0; _--) {
                                const C = f[_];
                                if (C.element === e) {
                                    m = C;
                                    break
                                }
                            }
                            m && !m.allowOnlyTimelineStyles() && m.setStyles([a], null, u.errors, c)
                        }
                        return f.length ? f.map(m => m.buildKeyframes()) : [D_(e, [], [], [], 0, h, "", !1)]
                    }
                    visitTrigger(t, e) {}
                    visitState(t, e) {}
                    visitTransition(t, e) {}
                    visitAnimateChild(t, e) {
                        const i = e.subInstructions.get(e.element);
                        if (i) {
                            const r = e.createSubContext(t.options),
                            o = e.currentTimeline.currentTime,
                            s = this._visitSubInstructions(i, r, r.options);
                            o != s && e.transformIntoNewTimeline(s)
                        }
                        e.previousNode = t
                    }
                    visitAnimateRef(t, e) {
                        const i = e.createSubContext(t.options);
                        i.transformIntoNewTimeline(),
                        this._applyAnimationRefDelays([t.options, t.animation.options], e, i),
                        this.visitReference(t.animation, i),
                        e.transformIntoNewTimeline(i.currentTimeline.currentTime),
                        e.previousNode = t
                    }
                    _applyAnimationRefDelays(t, e, i) {
                        for (const r of t) {
                            const o = r?.delay;
                            if (o) {
                                const s = "number" == typeof o ? o : Bi(Ac(o, r?.params ?? {}, e.errors));
                                i.delayNextStep(s)
                            }
                        }
                    }
                    _visitSubInstructions(t, e, i) {
                        let o = e.currentTimeline.currentTime;
                        const s = null != i.duration ? Bi(i.duration) : null,
                        a = null != i.delay ? Bi(i.delay) : null;
                        return 0 !== s && t.forEach(c => {
                            const l = e.appendInstructionToTimeline(c, s, a);
                            o = Math.max(o, l.duration + l.delay)
                        }),
                        o
                    }
                    visitReference(t, e) {
                        e.updateOptions(t.options, !0),
                        fn(this, t.animation, e),
                        e.previousNode = t
                    }
                    visitSequence(t, e) {
                        const i = e.subContextCount;
                        let r = e;
                        const o = t.options;
                        if (o && (o.params || o.delay) && (r = e.createSubContext(o), r.transformIntoNewTimeline(), null != o.delay)) {
                            6 == r.previousNode.type && (r.currentTimeline.snapshotCurrentStyles(), r.previousNode = qu);
                            const s = Bi(o.delay);
                            r.delayNextStep(s)
                        }
                        t.steps.length && (t.steps.forEach(s => fn(this, s, r)), r.currentTimeline.applyStylesToKeyframe(), r.subContextCount > i && r.transformIntoNewTimeline()),
                        e.previousNode = t
                    }
                    visitGroup(t, e) {
                        const i = [];
                        let r = e.currentTimeline.currentTime;
                        const o = t.options && t.options.delay ? Bi(t.options.delay) : 0;
                        t.steps.forEach(s => {
                            const a = e.createSubContext(t.options);
                            o && a.delayNextStep(o),
                            fn(this, s, a),
                            r = Math.max(r, a.currentTimeline.currentTime),
                            i.push(a.currentTimeline)
                        }),
                        i.forEach(s => e.currentTimeline.mergeTimelineCollectedStyles(s)),
                        e.transformIntoNewTimeline(r),
                        e.previousNode = t
                    }
                    _visitTiming(t, e) {
                        if (t.dynamic) {
                            const i = t.strValue;
                            return Bu(e.params ? Ac(i, e.params, e.errors) : i, e.errors)
                        }
                        return {
                            duration: t.duration,
                            delay: t.delay,
                            easing: t.easing
                        }
                    }
                    visitAnimate(t, e) {
                        const i = e.currentAnimateTimings = this._visitTiming(t.timings, e),
                        r = e.currentTimeline;
                        i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
                        const o = t.style;
                        5 == o.type ? this.visitKeyframes(o, e) : (e.incrementTime(i.duration), this.visitStyle(o, e), r.applyStylesToKeyframe()),
                        e.currentAnimateTimings = null,
                        e.previousNode = t
                    }
                    visitStyle(t, e) {
                        const i = e.currentTimeline,
                        r = e.currentAnimateTimings;
                        !r && i.hasCurrentStyleProperties() && i.forwardFrame();
                        const o = r && r.easing || t.easing;
                        t.isEmptyStep ? i.applyEmptyStep(o) : i.setStyles(t.styles, o, e.errors, e.options),
                        e.previousNode = t
                    }
                    visitKeyframes(t, e) {
                        const i = e.currentAnimateTimings,
                        r = e.currentTimeline.duration,
                        o = i.duration,
                        a = e.createSubContext().currentTimeline;
                        a.easing = i.easing,
                        t.styles.forEach(c => {
                            a.forwardTime((c.offset || 0) * o),
                            a.setStyles(c.styles, c.easing, e.errors, e.options),
                            a.applyStylesToKeyframe()
                        }),
                        e.currentTimeline.mergeTimelineCollectedStyles(a),
                        e.transformIntoNewTimeline(r + o),
                        e.previousNode = t
                    }
                    visitQuery(t, e) {
                        const i = e.currentTimeline.currentTime,
                        r = t.options || {},
                        o = r.delay ? Bi(r.delay) : 0;
                        o && (6 === e.previousNode.type || 0 == i && e.currentTimeline.hasCurrentStyleProperties()) && (e.currentTimeline.snapshotCurrentStyles(), e.previousNode = qu);
                        let s = i;
                        const a = e.invokeQuery(t.selector, t.originalSelector, t.limit, t.includeSelf, !!r.optional, e.errors);
                        e.currentQueryTotal = a.length;
                        let c = null;
                        a.forEach((l, d) => {
                            e.currentQueryIndex = d;
                            const u = e.createSubContext(t.options, l);
                            o && u.delayNextStep(o),
                            l === e.element && (c = u.currentTimeline),
                            fn(this, t.animation, u),
                            u.currentTimeline.applyStylesToKeyframe(),
                            s = Math.max(s, u.currentTimeline.currentTime)
                        }),
                        e.currentQueryIndex = 0,
                        e.currentQueryTotal = 0,
                        e.transformIntoNewTimeline(s),
                        c && (e.currentTimeline.mergeTimelineCollectedStyles(c), e.currentTimeline.snapshotCurrentStyles()),
                        e.previousNode = t
                    }
                    visitStagger(t, e) {
                        const i = e.parentContext,
                        r = e.currentTimeline,
                        o = t.timings,
                        s = Math.abs(o.duration),
                        a = s * (e.currentQueryTotal - 1);
                        let c = s * e.currentQueryIndex;
                        switch (o.duration < 0 ? "reverse" : o.easing) {
                        case "reverse":
                            c = a - c;
                            break;
                        case "full":
                            c = i.currentStaggerTime
                        }
                        const d = e.currentTimeline;
                        c && d.delayNextStep(c);
                        const u = d.currentTime;
                        fn(this, t.animation, e),
                        e.previousNode = t,
                        i.currentStaggerTime = r.currentTime - u + (r.startTime - i.currentTimeline.startTime)
                    }
                }
                const qu = {};
                class E_ {
                    constructor(t, e, i, r, o, s, a, c) {
                        this._driver = t,
                        this.element = e,
                        this.subInstructions = i,
                        this._enterClassName = r,
                        this._leaveClassName = o,
                        this.errors = s,
                        this.timelines = a,
                        this.parentContext = null,
                        this.currentAnimateTimings = null,
                        this.previousNode = qu,
                        this.subContextCount = 0,
                        this.options = {},
                        this.currentQueryIndex = 0,
                        this.currentQueryTotal = 0,
                        this.currentStaggerTime = 0,
                        this.currentTimeline = c || new Yu(this._driver, e, 0),
                        a.push(this.currentTimeline)
                    }
                    get params() {
                        return this.options.params
                    }
                    updateOptions(t, e) {
                        if (!t)
                            return;
                        const i = t;
                        let r = this.options;
                        null != i.duration && (r.duration = Bi(i.duration)),
                        null != i.delay && (r.delay = Bi(i.delay));
                        const o = i.params;
                        if (o) {
                            let s = r.params;
                            s || (s = this.options.params = {}),
                            Object.keys(o).forEach(a => {
                                (!e || !s.hasOwnProperty(a)) && (s[a] = Ac(o[a], s, this.errors))
                            })
                        }
                    }
                    _copyOptions() {
                        const t = {};
                        if (this.options) {
                            const e = this.options.params;
                            if (e) {
                                const i = t.params = {};
                                Object.keys(e).forEach(r => {
                                    i[r] = e[r]
                                })
                            }
                        }
                        return t
                    }
                    createSubContext(t = null, e, i) {
                        const r = e || this.element,
                        o = new E_(this._driver, r, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(r, i || 0));
                        return o.previousNode = this.previousNode,
                        o.currentAnimateTimings = this.currentAnimateTimings,
                        o.options = this._copyOptions(),
                        o.updateOptions(t),
                        o.currentQueryIndex = this.currentQueryIndex,
                        o.currentQueryTotal = this.currentQueryTotal,
                        o.parentContext = this,
                        this.subContextCount++,
                        o
                    }
                    transformIntoNewTimeline(t) {
                        return this.previousNode = qu,
                        this.currentTimeline = this.currentTimeline.fork(this.element, t),
                        this.timelines.push(this.currentTimeline),
                        this.currentTimeline
                    }
                    appendInstructionToTimeline(t, e, i) {
                        const r = {
                            duration: e ?? t.duration,
                            delay: this.currentTimeline.currentTime + (i ?? 0) + t.delay,
                            easing: ""
                        },
                        o = new bG(this._driver, t.element, t.keyframes, t.preStyleProps, t.postStyleProps, r, t.stretchStartingKeyframe);
                        return this.timelines.push(o),
                        r
                    }
                    incrementTime(t) {
                        this.currentTimeline.forwardTime(this.currentTimeline.duration + t)
                    }
                    delayNextStep(t) {
                        t > 0 && this.currentTimeline.delayNextStep(t)
                    }
                    invokeQuery(t, e, i, r, o, s) {
                        let a = [];
                        if (r && a.push(this.element), t.length > 0) {
                            t = (t = t.replace(pG, "." + this._enterClassName)).replace(gG, "." + this._leaveClassName);
                            let l = this._driver.query(this.element, t, 1 != i);
                            0 !== i && (l = i < 0 ? l.slice(l.length + i, l.length) : l.slice(0, i)),
                            a.push(...l)
                        }
                        return !o && 0 == a.length && s.push(function C5(n) {
                            return new E(3014, !1)
                        }
                            ()),
                        a
                    }
                }
                class Yu {
                    constructor(t, e, i, r) {
                        this._driver = t,
                        this.element = e,
                        this.startTime = i,
                        this._elementTimelineStylesLookup = r,
                        this.duration = 0,
                        this._previousKeyframe = new Map,
                        this._currentKeyframe = new Map,
                        this._keyframes = new Map,
                        this._styleSummary = new Map,
                        this._localTimelineStyles = new Map,
                        this._pendingStyles = new Map,
                        this._backFill = new Map,
                        this._currentEmptyStepKeyframe = null,
                        this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map),
                        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e),
                        this._globalTimelineStyles || (this._globalTimelineStyles = this._localTimelineStyles, this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)),
                        this._loadKeyframe()
                    }
                    containsAnimation() {
                        switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.hasCurrentStyleProperties();
                        default:
                            return !0
                        }
                    }
                    hasCurrentStyleProperties() {
                        return this._currentKeyframe.size > 0
                    }
                    get currentTime() {
                        return this.startTime + this.duration
                    }
                    delayNextStep(t) {
                        const e = 1 === this._keyframes.size && this._pendingStyles.size;
                        this.duration || e ? (this.forwardTime(this.currentTime + t), e && this.snapshotCurrentStyles()) : this.startTime += t
                    }
                    fork(t, e) {
                        return this.applyStylesToKeyframe(),
                        new Yu(this._driver, t, e || this.currentTime, this._elementTimelineStylesLookup)
                    }
                    _loadKeyframe() {
                        this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
                        this._currentKeyframe = this._keyframes.get(this.duration),
                        this._currentKeyframe || (this._currentKeyframe = new Map, this._keyframes.set(this.duration, this._currentKeyframe))
                    }
                    forwardFrame() {
                        this.duration += 1,
                        this._loadKeyframe()
                    }
                    forwardTime(t) {
                        this.applyStylesToKeyframe(),
                        this.duration = t,
                        this._loadKeyframe()
                    }
                    _updateStyle(t, e) {
                        this._localTimelineStyles.set(t, e),
                        this._globalTimelineStyles.set(t, e),
                        this._styleSummary.set(t, {
                            time: this.currentTime,
                            value: e
                        })
                    }
                    allowOnlyTimelineStyles() {
                        return this._currentEmptyStepKeyframe !== this._currentKeyframe
                    }
                    applyEmptyStep(t) {
                        t && this._previousKeyframe.set("easing", t);
                        for (let [e, i] of this._globalTimelineStyles)
                            this._backFill.set(e, i || Fi), this._currentKeyframe.set(e, Fi);
                        this._currentEmptyStepKeyframe = this._currentKeyframe
                    }
                    setStyles(t, e, i, r) {
                        e && this._previousKeyframe.set("easing", e);
                        const o = r && r.params || {},
                        s = function vG(n, t) {
                            const e = new Map;
                            let i;
                            return n.forEach(r => {
                                if ("*" === r) {
                                    i = i || t.keys();
                                    for (let o of i)
                                        e.set(o, Fi)
                                } else
                                    gr(r, e)
                            }),
                            e
                        }
                        (t, this._globalTimelineStyles);
                        for (let [a, c] of s) {
                            const l = Ac(c, o, i);
                            this._pendingStyles.set(a, l),
                            this._localTimelineStyles.has(a) || this._backFill.set(a, this._globalTimelineStyles.get(a) ?? Fi),
                            this._updateStyle(a, l)
                        }
                    }
                    applyStylesToKeyframe() {
                        0 != this._pendingStyles.size && (this._pendingStyles.forEach((t, e) => {
                                this._currentKeyframe.set(e, t)
                            }), this._pendingStyles.clear(), this._localTimelineStyles.forEach((t, e) => {
                                this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t)
                            }))
                    }
                    snapshotCurrentStyles() {
                        for (let [t, e] of this._localTimelineStyles)
                            this._pendingStyles.set(t, e), this._updateStyle(t, e)
                    }
                    getFinalKeyframe() {
                        return this._keyframes.get(this.duration)
                    }
                    get properties() {
                        const t = [];
                        for (let e in this._currentKeyframe)
                            t.push(e);
                        return t
                    }
                    mergeTimelineCollectedStyles(t) {
                        t._styleSummary.forEach((e, i) => {
                            const r = this._styleSummary.get(i);
                            (!r || e.time > r.time) && this._updateStyle(i, e.value)
                        })
                    }
                    buildKeyframes() {
                        this.applyStylesToKeyframe();
                        const t = new Set,
                        e = new Set,
                        i = 1 === this._keyframes.size && 0 === this.duration;
                        let r = [];
                        this._keyframes.forEach((a, c) => {
                            const l = gr(a, new Map, this._backFill);
                            l.forEach((d, u) => {
                                "!" === d ? t.add(u) : d === Fi && e.add(u)
                            }),
                            i || l.set("offset", c / this.duration),
                            r.push(l)
                        });
                        const o = t.size ? ju(t.values()) : [],
                        s = e.size ? ju(e.values()) : [];
                        if (i) {
                            const a = r[0],
                            c = new Map(a);
                            a.set("offset", 0),
                            c.set("offset", 1),
                            r = [a, c]
                        }
                        return D_(this.element, r, o, s, this.duration, this.startTime, this.easing, !1)
                    }
                }
                class bG extends Yu {
                    constructor(t, e, i, r, o, s, a = !1) {
                        super(t, e, s.delay),
                        this.keyframes = i,
                        this.preStyleProps = r,
                        this.postStyleProps = o,
                        this._stretchStartingKeyframe = a,
                        this.timings = {
                            duration: s.duration,
                            delay: s.delay,
                            easing: s.easing
                        }
                    }
                    containsAnimation() {
                        return this.keyframes.length > 1
                    }
                    buildKeyframes() {
                        let t = this.keyframes, {
                            delay: e,
                            duration: i,
                            easing: r
                        } = this.timings;
                        if (this._stretchStartingKeyframe && e) {
                            const o = [],
                            s = i + e,
                            a = e / s,
                            c = gr(t[0]);
                            c.set("offset", 0),
                            o.push(c);
                            const l = gr(t[0]);
                            l.set("offset", dT(a)),
                            o.push(l);
                            const d = t.length - 1;
                            for (let u = 1; u <= d; u++) {
                                let h = gr(t[u]);
                                const f = h.get("offset");
                                h.set("offset", dT((e + f * i) / s)),
                                o.push(h)
                            }
                            i = s,
                            e = 0,
                            r = "",
                            t = o
                        }
                        return D_(this.element, t, this.preStyleProps, this.postStyleProps, i, e, r, !0)
                    }
                }
                function dT(n, t = 3) {
                    const e = Math.pow(10, t - 1);
                    return Math.round(n * e) / e
                }
                class S_ {}
                const yG = new Set(["width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "left", "top", "bottom", "right", "fontSize", "outlineWidth", "outlineOffset", "paddingTop", "paddingLeft", "paddingBottom", "paddingRight", "marginTop", "marginLeft", "marginBottom", "marginRight", "borderRadius", "borderWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "borderBottomWidth", "textIndent", "perspective"]);
                class wG extends S_ {
                    normalizePropertyName(t, e) {
                        return y_(t)
                    }
                    normalizeStyleValue(t, e, i, r) {
                        let o = "";
                        const s = i.toString().trim();
                        if (yG.has(e) && 0 !== i && "0" !== i)
                            if ("number" == typeof i)
                                o = "px";
                            else {
                                const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
                                a && 0 == a[1].length && r.push(function u5(n, t) {
                                    return new E(3005, !1)
                                }
                                    ())
                            }
                        return s + o
                    }
                }
                function uT(n, t, e, i, r, o, s, a, c, l, d, u, h) {
                    return {
                        type: 0,
                        element: n,
                        triggerName: t,
                        isRemovalTransition: r,
                        fromState: e,
                        fromStyles: o,
                        toState: i,
                        toStyles: s,
                        timelines: a,
                        queriedElements: c,
                        preStyleProps: l,
                        postStyleProps: d,
                        totalTime: u,
                        errors: h
                    }
                }
                const M_ = {};
                class hT {
                    constructor(t, e, i) {
                        this._triggerName = t,
                        this.ast = e,
                        this._stateStyles = i
                    }
                    match(t, e, i, r) {
                        return function CG(n, t, e, i, r) {
                            return n.some(o => o(t, e, i, r))
                        }
                        (this.ast.matchers, t, e, i, r)
                    }
                    buildStyles(t, e, i) {
                        let r = this._stateStyles.get("*");
                        return void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
                        r ? r.buildStyles(e, i) : new Map
                    }
                    build(t, e, i, r, o, s, a, c, l, d) {
                        const u = [],
                        h = this.ast.options && this.ast.options.params || M_,
                        m = this.buildStyles(i, a && a.params || M_, u),
                        _ = c && c.params || M_,
                        C = this.buildStyles(r, _, u),
                        D = new Set,
                        A = new Map,
                        x = new Map,
                        P = "void" === r,
                        de = {
                            params: DG(_, h),
                            delay: this.ast.options?.delay
                        },
                        fe = d ? [] : x_(t, e, this.ast.animation, o, s, m, C, de, l, u);
                        let dt = 0;
                        if (fe.forEach(mn => {
                                dt = Math.max(mn.duration + mn.delay, dt)
                            }), u.length)
                            return uT(e, this._triggerName, i, r, P, m, C, [], [], A, x, dt, u);
                        fe.forEach(mn => {
                            const gn = mn.element,
                            Is = hn(A, gn, new Set);
                            mn.preStyleProps.forEach(Zn => Is.add(Zn));
                            const ji = hn(x, gn, new Set);
                            mn.postStyleProps.forEach(Zn => ji.add(Zn)),
                            gn !== e && D.add(gn)
                        });
                        const pn = ju(D.values());
                        return uT(e, this._triggerName, i, r, P, m, C, fe, pn, A, x, dt)
                    }
                }
                function DG(n, t) {
                    const e = Mc(t);
                    for (const i in n)
                        n.hasOwnProperty(i) && null != n[i] && (e[i] = n[i]);
                    return e
                }
                class xG {
                    constructor(t, e, i) {
                        this.styles = t,
                        this.defaultParams = e,
                        this.normalizer = i
                    }
                    buildStyles(t, e) {
                        const i = new Map,
                        r = Mc(this.defaultParams);
                        return Object.keys(t).forEach(o => {
                            const s = t[o];
                            null !== s && (r[o] = s)
                        }),
                        this.styles.styles.forEach(o => {
                            "string" != typeof o && o.forEach((s, a) => {
                                s && (s = Ac(s, r, e));
                                const c = this.normalizer.normalizePropertyName(a, e);
                                s = this.normalizer.normalizeStyleValue(a, c, s, e),
                                i.set(c, s)
                            })
                        }),
                        i
                    }
                }
                class SG {
                    constructor(t, e, i) {
                        this.name = t,
                        this.ast = e,
                        this._normalizer = i,
                        this.transitionFactories = [],
                        this.states = new Map,
                        e.states.forEach(r => {
                            this.states.set(r.name, new xG(r.style, r.options && r.options.params || {}, i))
                        }),
                        fT(this.states, "true", "1"),
                        fT(this.states, "false", "0"),
                        e.transitions.forEach(r => {
                            this.transitionFactories.push(new hT(t, r, this.states))
                        }),
                        this.fallbackTransition = function MG(n, t, e) {
                            return new hT(n, {
                                type: 1,
                                animation: {
                                    type: 2,
                                    steps: [],
                                    options: null
                                },
                                matchers: [(s, a) => !0],
                                options: null,
                                queryCount: 0,
                                depCount: 0
                            }, t)
                        }
                        (t, this.states)
                    }
                    get containsQueries() {
                        return this.ast.queryCount > 0
                    }
                    matchTransition(t, e, i, r) {
                        return this.transitionFactories.find(s => s.match(t, e, i, r)) || null
                    }
                    matchStyles(t, e, i) {
                        return this.fallbackTransition.buildStyles(t, e, i)
                    }
                }
                function fT(n, t, e) {
                    n.has(t) ? n.has(e) || n.set(e, n.get(t)) : n.has(e) && n.set(t, n.get(e))
                }
                const TG = new Wu;
                class AG {
                    constructor(t, e, i) {
                        this.bodyNode = t,
                        this._driver = e,
                        this._normalizer = i,
                        this._animations = new Map,
                        this._playersById = new Map,
                        this.players = []
                    }
                    register(t, e) {
                        const i = [],
                        o = w_(this._driver, e, i, []);
                        if (i.length)
                            throw function A5(n) {
                                return new E(3503, !1)
                            }
                        ();
                        this._animations.set(t, o)
                    }
                    _buildPlayer(t, e, i) {
                        const r = t.element,
                        o = GM(0, this._normalizer, 0, t.keyframes, e, i);
                        return this._driver.animate(r, o, t.duration, t.delay, t.easing, [], !0)
                    }
                    create(t, e, i = {}) {
                        const r = [],
                        o = this._animations.get(t);
                        let s;
                        const a = new Map;
                        if (o ? (s = x_(this._driver, e, o, g_, Nu, new Map, new Map, i, TG, r), s.forEach(d => {
                                    const u = hn(a, d.element, new Map);
                                    d.postStyleProps.forEach(h => u.set(h, null))
                                })) : (r.push(function k5() {
                                    return new E(3300, !1)
                                }
                                    ()), s = []), r.length)
                            throw function I5(n) {
                                return new E(3504, !1)
                            }
                        ();
                        a.forEach((d, u) => {
                            d.forEach((h, f) => {
                                d.set(f, this._driver.computeStyle(u, f, Fi))
                            })
                        });
                        const l = mr(s.map(d => {
                                    const u = a.get(d.element);
                                    return this._buildPlayer(d, new Map, u)
                                }));
                        return this._playersById.set(t, l),
                        l.onDestroy(() => this.destroy(t)),
                        this.players.push(l),
                        l
                    }
                    destroy(t) {
                        const e = this._getPlayer(t);
                        e.destroy(),
                        this._playersById.delete(t);
                        const i = this.players.indexOf(e);
                        i >= 0 && this.players.splice(i, 1)
                    }
                    _getPlayer(t) {
                        const e = this._playersById.get(t);
                        if (!e)
                            throw function O5(n) {
                                return new E(3301, !1)
                            }
                        ();
                        return e
                    }
                    listen(t, e, i, r) {
                        const o = h_(e, "", "", "");
                        return d_(this._getPlayer(t), i, o, r),
                        () => {}
                    }
                    command(t, e, i, r) {
                        if ("register" == i)
                            return void this.register(t, r[0]);
                        if ("create" == i)
                            return void this.create(t, e, r[0] || {});
                        const o = this._getPlayer(t);
                        switch (i) {
                        case "play":
                            o.play();
                            break;
                        case "pause":
                            o.pause();
                            break;
                        case "reset":
                            o.reset();
                            break;
                        case "restart":
                            o.restart();
                            break;
                        case "finish":
                            o.finish();
                            break;
                        case "init":
                            o.init();
                            break;
                        case "setPosition":
                            o.setPosition(parseFloat(r[0]));
                            break;
                        case "destroy":
                            this.destroy(t)
                        }
                    }
                }
                const pT = "ng-animate-queued",
                T_ = "ng-animate-disabled",
                PG = [],
                mT = {
                    namespaceId: "",
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1
                },
                FG = {
                    namespaceId: "",
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0
                },
                Tn = "__ng_removed";
                class A_ {
                    constructor(t, e = "") {
                        this.namespaceId = e;
                        const i = t && t.hasOwnProperty("value");
                        if (this.value = function BG(n) {
                            return n ?? null
                        }
                            (i ? t.value : t), i) {
                            const o = Mc(t);
                            delete o.value,
                            this.options = o
                        } else
                            this.options = {};
                        this.options.params || (this.options.params = {})
                    }
                    get params() {
                        return this.options.params
                    }
                    absorbOptions(t) {
                        const e = t.params;
                        if (e) {
                            const i = this.options.params;
                            Object.keys(e).forEach(r => {
                                null == i[r] && (i[r] = e[r])
                            })
                        }
                    }
                }
                const kc = "void",
                k_ = new A_(kc);
                class NG {
                    constructor(t, e, i) {
                        this.id = t,
                        this.hostElement = e,
                        this._engine = i,
                        this.players = [],
                        this._triggers = new Map,
                        this._queue = [],
                        this._elementListeners = new Map,
                        this._hostClassName = "ng-tns-" + t,
                        An(e, this._hostClassName)
                    }
                    listen(t, e, i, r) {
                        if (!this._triggers.has(e))
                            throw function R5(n, t) {
                                return new E(3302, !1)
                            }
                        ();
                        if (null == i || 0 == i.length)
                            throw function P5(n) {
                                return new E(3303, !1)
                            }
                        ();
                        if (!function jG(n) {
                            return "start" == n || "done" == n
                        }
                            (i))
                            throw function F5(n, t) {
                                return new E(3400, !1)
                            }
                        ();
                        const o = hn(this._elementListeners, t, []),
                        s = {
                            name: e,
                            phase: i,
                            callback: r
                        };
                        o.push(s);
                        const a = hn(this._engine.statesByElement, t, new Map);
                        return a.has(e) || (An(t, Lu), An(t, Lu + "-" + e), a.set(e, k_)),
                        () => {
                            this._engine.afterFlush(() => {
                                const c = o.indexOf(s);
                                c >= 0 && o.splice(c, 1),
                                this._triggers.has(e) || a.delete(e)
                            })
                        }
                    }
                    register(t, e) {
                        return !this._triggers.has(t) && (this._triggers.set(t, e), !0)
                    }
                    _getTrigger(t) {
                        const e = this._triggers.get(t);
                        if (!e)
                            throw function N5(n) {
                                return new E(3401, !1)
                            }
                        ();
                        return e
                    }
                    trigger(t, e, i, r = !0) {
                        const o = this._getTrigger(e),
                        s = new I_(this.id, e, t);
                        let a = this._engine.statesByElement.get(t);
                        a || (An(t, Lu), An(t, Lu + "-" + e), this._engine.statesByElement.set(t, a = new Map));
                        let c = a.get(e);
                        const l = new A_(i, this.id);
                        if (!(i && i.hasOwnProperty("value")) && c && l.absorbOptions(c.options), a.set(e, l), c || (c = k_), l.value !== kc && c.value === l.value) {
                            if (!function $G(n, t) {
                                const e = Object.keys(n),
                                i = Object.keys(t);
                                if (e.length != i.length)
                                    return !1;
                                for (let r = 0; r < e.length; r++) {
                                    const o = e[r];
                                    if (!t.hasOwnProperty(o) || n[o] !== t[o])
                                        return !1
                                }
                                return !0
                            }
                                (c.params, l.params)) {
                                const _ = [],
                                C = o.matchStyles(c.value, c.params, _),
                                D = o.matchStyles(l.value, l.params, _);
                                _.length ? this._engine.reportError(_) : this._engine.afterFlush(() => {
                                    co(t, C),
                                    mi(t, D)
                                })
                            }
                            return
                        }
                        const h = hn(this._engine.playersByElement, t, []);
                        h.forEach(_ => {
                            _.namespaceId == this.id && _.triggerName == e && _.queued && _.destroy()
                        });
                        let f = o.matchTransition(c.value, l.value, t, l.params),
                        m = !1;
                        if (!f) {
                            if (!r)
                                return;
                            f = o.fallbackTransition,
                            m = !0
                        }
                        return this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: t,
                            triggerName: e,
                            transition: f,
                            fromState: c,
                            toState: l,
                            player: s,
                            isFallbackTransition: m
                        }),
                        m || (An(t, pT), s.onStart(() => {
                                ks(t, pT)
                            })),
                        s.onDone(() => {
                            let _ = this.players.indexOf(s);
                            _ >= 0 && this.players.splice(_, 1);
                            const C = this._engine.playersByElement.get(t);
                            if (C) {
                                let D = C.indexOf(s);
                                D >= 0 && C.splice(D, 1)
                            }
                        }),
                        this.players.push(s),
                        h.push(s),
                        s
                    }
                    deregister(t) {
                        this._triggers.delete(t),
                        this._engine.statesByElement.forEach(e => e.delete(t)),
                        this._elementListeners.forEach((e, i) => {
                            this._elementListeners.set(i, e.filter(r => r.name != t))
                        })
                    }
                    clearElementCache(t) {
                        this._engine.statesByElement.delete(t),
                        this._elementListeners.delete(t);
                        const e = this._engine.playersByElement.get(t);
                        e && (e.forEach(i => i.destroy()), this._engine.playersByElement.delete(t))
                    }
                    _signalRemovalForInnerTriggers(t, e) {
                        const i = this._engine.driver.query(t, Vu, !0);
                        i.forEach(r => {
                            if (r[Tn])
                                return;
                            const o = this._engine.fetchNamespacesByElement(r);
                            o.size ? o.forEach(s => s.triggerLeaveAnimation(r, e, !1, !0)) : this.clearElementCache(r)
                        }),
                        this._engine.afterFlushAnimationsDone(() => i.forEach(r => this.clearElementCache(r)))
                    }
                    triggerLeaveAnimation(t, e, i, r) {
                        const o = this._engine.statesByElement.get(t),
                        s = new Map;
                        if (o) {
                            const a = [];
                            if (o.forEach((c, l) => {
                                    if (s.set(l, c.value), this._triggers.has(l)) {
                                        const d = this.trigger(t, l, kc, r);
                                        d && a.push(d)
                                    }
                                }), a.length)
                                return this._engine.markElementAsRemoved(this.id, t, !0, e, s), i && mr(a).onDone(() => this._engine.processLeaveNode(t)), !0
                        }
                        return !1
                    }
                    prepareLeaveAnimationListeners(t) {
                        const e = this._elementListeners.get(t),
                        i = this._engine.statesByElement.get(t);
                        if (e && i) {
                            const r = new Set;
                            e.forEach(o => {
                                const s = o.name;
                                if (r.has(s))
                                    return;
                                r.add(s);
                                const c = this._triggers.get(s).fallbackTransition,
                                l = i.get(s) || k_,
                                d = new A_(kc),
                                u = new I_(this.id, s, t);
                                this._engine.totalQueuedPlayers++,
                                this._queue.push({
                                    element: t,
                                    triggerName: s,
                                    transition: c,
                                    fromState: l,
                                    toState: d,
                                    player: u,
                                    isFallbackTransition: !0
                                })
                            })
                        }
                    }
                    removeNode(t, e) {
                        const i = this._engine;
                        if (t.childElementCount && this._signalRemovalForInnerTriggers(t, e), this.triggerLeaveAnimation(t, e, !0))
                            return;
                        let r = !1;
                        if (i.totalAnimations) {
                            const o = i.players.length ? i.playersByQueriedElement.get(t) : [];
                            if (o && o.length)
                                r = !0;
                            else {
                                let s = t;
                                for (; s = s.parentNode; )
                                    if (i.statesByElement.get(s)) {
                                        r = !0;
                                        break
                                    }
                            }
                        }
                        if (this.prepareLeaveAnimationListeners(t), r)
                            i.markElementAsRemoved(this.id, t, !1, e);
                        else {
                            const o = t[Tn];
                            (!o || o === mT) && (i.afterFlush(() => this.clearElementCache(t)), i.destroyInnerAnimations(t), i._onRemovalComplete(t, e))
                        }
                    }
                    insertNode(t, e) {
                        An(t, this._hostClassName)
                    }
                    drainQueuedTransitions(t) {
                        const e = [];
                        return this._queue.forEach(i => {
                            const r = i.player;
                            if (r.destroyed)
                                return;
                            const o = i.element,
                            s = this._elementListeners.get(o);
                            s && s.forEach(a => {
                                if (a.name == i.triggerName) {
                                    const c = h_(o, i.triggerName, i.fromState.value, i.toState.value);
                                    c._data = t,
                                    d_(i.player, a.phase, c, a.callback)
                                }
                            }),
                            r.markedForDestroy ? this._engine.afterFlush(() => {
                                r.destroy()
                            }) : e.push(i)
                        }),
                        this._queue = [],
                        e.sort((i, r) => {
                            const o = i.transition.ast.depCount,
                            s = r.transition.ast.depCount;
                            return 0 == o || 0 == s ? o - s : this._engine.driver.containsElement(i.element, r.element) ? 1 : -1
                        })
                    }
                    destroy(t) {
                        this.players.forEach(e => e.destroy()),
                        this._signalRemovalForInnerTriggers(this.hostElement, t)
                    }
                    elementContainsData(t) {
                        let e = !1;
                        return this._elementListeners.has(t) && (e = !0),
                        e = !!this._queue.find(i => i.element === t) || e,
                        e
                    }
                }
                class LG {
                    constructor(t, e, i) {
                        this.bodyNode = t,
                        this.driver = e,
                        this._normalizer = i,
                        this.players = [],
                        this.newHostElements = new Map,
                        this.playersByElement = new Map,
                        this.playersByQueriedElement = new Map,
                        this.statesByElement = new Map,
                        this.disabledNodes = new Set,
                        this.totalAnimations = 0,
                        this.totalQueuedPlayers = 0,
                        this._namespaceLookup = {},
                        this._namespaceList = [],
                        this._flushFns = [],
                        this._whenQuietFns = [],
                        this.namespacesByHostElement = new Map,
                        this.collectedEnterElements = [],
                        this.collectedLeaveElements = [],
                        this.onRemovalComplete = (r, o) => {}
                    }
                    _onRemovalComplete(t, e) {
                        this.onRemovalComplete(t, e)
                    }
                    get queuedPlayers() {
                        const t = [];
                        return this._namespaceList.forEach(e => {
                            e.players.forEach(i => {
                                i.queued && t.push(i)
                            })
                        }),
                        t
                    }
                    createNamespace(t, e) {
                        const i = new NG(t, e, this);
                        return this.bodyNode && this.driver.containsElement(this.bodyNode, e) ? this._balanceNamespaceList(i, e) : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
                        this._namespaceLookup[t] = i
                    }
                    _balanceNamespaceList(t, e) {
                        const i = this._namespaceList,
                        r = this.namespacesByHostElement;
                        if (i.length - 1 >= 0) {
                            let s = !1,
                            a = this.driver.getParentElement(e);
                            for (; a; ) {
                                const c = r.get(a);
                                if (c) {
                                    const l = i.indexOf(c);
                                    i.splice(l + 1, 0, t),
                                    s = !0;
                                    break
                                }
                                a = this.driver.getParentElement(a)
                            }
                            s || i.unshift(t)
                        } else
                            i.push(t);
                        return r.set(e, t),
                        t
                    }
                    register(t, e) {
                        let i = this._namespaceLookup[t];
                        return i || (i = this.createNamespace(t, e)),
                        i
                    }
                    registerTrigger(t, e, i) {
                        let r = this._namespaceLookup[t];
                        r && r.register(e, i) && this.totalAnimations++
                    }
                    destroy(t, e) {
                        if (!t)
                            return;
                        const i = this._fetchNamespace(t);
                        this.afterFlush(() => {
                            this.namespacesByHostElement.delete(i.hostElement),
                            delete this._namespaceLookup[t];
                            const r = this._namespaceList.indexOf(i);
                            r >= 0 && this._namespaceList.splice(r, 1)
                        }),
                        this.afterFlushAnimationsDone(() => i.destroy(e))
                    }
                    _fetchNamespace(t) {
                        return this._namespaceLookup[t]
                    }
                    fetchNamespacesByElement(t) {
                        const e = new Set,
                        i = this.statesByElement.get(t);
                        if (i)
                            for (let r of i.values())
                                if (r.namespaceId) {
                                    const o = this._fetchNamespace(r.namespaceId);
                                    o && e.add(o)
                                }
                        return e
                    }
                    trigger(t, e, i, r) {
                        if (Ku(e)) {
                            const o = this._fetchNamespace(t);
                            if (o)
                                return o.trigger(e, i, r), !0
                        }
                        return !1
                    }
                    insertNode(t, e, i, r) {
                        if (!Ku(e))
                            return;
                        const o = e[Tn];
                        if (o && o.setForRemoval) {
                            o.setForRemoval = !1,
                            o.setForMove = !0;
                            const s = this.collectedLeaveElements.indexOf(e);
                            s >= 0 && this.collectedLeaveElements.splice(s, 1)
                        }
                        if (t) {
                            const s = this._fetchNamespace(t);
                            s && s.insertNode(e, i)
                        }
                        r && this.collectEnterElement(e)
                    }
                    collectEnterElement(t) {
                        this.collectedEnterElements.push(t)
                    }
                    markElementAsDisabled(t, e) {
                        e ? this.disabledNodes.has(t) || (this.disabledNodes.add(t), An(t, T_)) : this.disabledNodes.has(t) && (this.disabledNodes.delete(t), ks(t, T_))
                    }
                    removeNode(t, e, i, r) {
                        if (Ku(e)) {
                            const o = t ? this._fetchNamespace(t) : null;
                            if (o ? o.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r), i) {
                                const s = this.namespacesByHostElement.get(e);
                                s && s.id !== t && s.removeNode(e, r)
                            }
                        } else
                            this._onRemovalComplete(e, r)
                    }
                    markElementAsRemoved(t, e, i, r, o) {
                        this.collectedLeaveElements.push(e),
                        e[Tn] = {
                            namespaceId: t,
                            setForRemoval: r,
                            hasAnimation: i,
                            removedBeforeQueried: !1,
                            previousTriggersValues: o
                        }
                    }
                    listen(t, e, i, r, o) {
                        return Ku(e) ? this._fetchNamespace(t).listen(e, i, r, o) : () => {}
                    }
                    _buildInstruction(t, e, i, r, o) {
                        return t.transition.build(this.driver, t.element, t.fromState.value, t.toState.value, i, r, t.fromState.options, t.toState.options, e, o)
                    }
                    destroyInnerAnimations(t) {
                        let e = this.driver.query(t, Vu, !0);
                        e.forEach(i => this.destroyActiveAnimationsForElement(i)),
                        0 != this.playersByQueriedElement.size && (e = this.driver.query(t, __, !0), e.forEach(i => this.finishActiveQueriedAnimationOnElement(i)))
                    }
                    destroyActiveAnimationsForElement(t) {
                        const e = this.playersByElement.get(t);
                        e && e.forEach(i => {
                            i.queued ? i.markedForDestroy = !0 : i.destroy()
                        })
                    }
                    finishActiveQueriedAnimationOnElement(t) {
                        const e = this.playersByQueriedElement.get(t);
                        e && e.forEach(i => i.finish())
                    }
                    whenRenderingDone() {
                        return new Promise(t => {
                            if (this.players.length)
                                return mr(this.players).onDone(() => t());
                            t()
                        })
                    }
                    processLeaveNode(t) {
                        const e = t[Tn];
                        if (e && e.setForRemoval) {
                            if (t[Tn] = mT, e.namespaceId) {
                                this.destroyInnerAnimations(t);
                                const i = this._fetchNamespace(e.namespaceId);
                                i && i.clearElementCache(t)
                            }
                            this._onRemovalComplete(t, e.setForRemoval)
                        }
                        t.classList?.contains(T_) && this.markElementAsDisabled(t, !1),
                        this.driver.query(t, ".ng-animate-disabled", !0).forEach(i => {
                            this.markElementAsDisabled(i, !1)
                        })
                    }
                    flush(t = -1) {
                        let e = [];
                        if (this.newHostElements.size && (this.newHostElements.forEach((i, r) => this._balanceNamespaceList(i, r)), this.newHostElements.clear()), this.totalAnimations && this.collectedEnterElements.length)
                            for (let i = 0; i < this.collectedEnterElements.length; i++)
                                An(this.collectedEnterElements[i], "ng-star-inserted");
                        if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
                            const i = [];
                            try {
                                e = this._flushAnimations(i, t)
                            } finally {
                                for (let r = 0; r < i.length; r++)
                                    i[r]()
                            }
                        } else
                            for (let i = 0; i < this.collectedLeaveElements.length; i++)
                                this.processLeaveNode(this.collectedLeaveElements[i]);
                        if (this.totalQueuedPlayers = 0, this.collectedEnterElements.length = 0, this.collectedLeaveElements.length = 0, this._flushFns.forEach(i => i()), this._flushFns = [], this._whenQuietFns.length) {
                            const i = this._whenQuietFns;
                            this._whenQuietFns = [],
                            e.length ? mr(e).onDone(() => {
                                i.forEach(r => r())
                            }) : i.forEach(r => r())
                        }
                    }
                    reportError(t) {
                        throw function L5(n) {
                            return new E(3402, !1)
                        }
                        ()
                    }
                    _flushAnimations(t, e) {
                        const i = new Wu,
                        r = [],
                        o = new Map,
                        s = [],
                        a = new Map,
                        c = new Map,
                        l = new Map,
                        d = new Set;
                        this.disabledNodes.forEach(L => {
                            d.add(L);
                            const U = this.driver.query(L, ".ng-animate-queued", !0);
                            for (let Y = 0; Y < U.length; Y++)
                                d.add(U[Y])
                        });
                        const u = this.bodyNode,
                        h = Array.from(this.statesByElement.keys()),
                        f = bT(h, this.collectedEnterElements),
                        m = new Map;
                        let _ = 0;
                        f.forEach((L, U) => {
                            const Y = g_ + _++;
                            m.set(U, Y),
                            L.forEach(we => An(we, Y))
                        });
                        const C = [],
                        D = new Set,
                        A = new Set;
                        for (let L = 0; L < this.collectedLeaveElements.length; L++) {
                            const U = this.collectedLeaveElements[L],
                            Y = U[Tn];
                            Y && Y.setForRemoval && (C.push(U), D.add(U), Y.hasAnimation ? this.driver.query(U, ".ng-star-inserted", !0).forEach(we => D.add(we)) : A.add(U))
                        }
                        const x = new Map,
                        P = bT(h, Array.from(D));
                        P.forEach((L, U) => {
                            const Y = Nu + _++;
                            x.set(U, Y),
                            L.forEach(we => An(we, Y))
                        }),
                        t.push(() => {
                            f.forEach((L, U) => {
                                const Y = m.get(U);
                                L.forEach(we => ks(we, Y))
                            }),
                            P.forEach((L, U) => {
                                const Y = x.get(U);
                                L.forEach(we => ks(we, Y))
                            }),
                            C.forEach(L => {
                                this.processLeaveNode(L)
                            })
                        });
                        const de = [],
                        fe = [];
                        for (let L = this._namespaceList.length - 1; L >= 0; L--)
                            this._namespaceList[L].drainQueuedTransitions(e).forEach(Y => {
                                const we = Y.player,
                                wt = Y.element;
                                if (de.push(we), this.collectedEnterElements.length) {
                                    const Ot = wt[Tn];
                                    if (Ot && Ot.setForMove) {
                                        if (Ot.previousTriggersValues && Ot.previousTriggersValues.has(Y.triggerName)) {
                                            const uo = Ot.previousTriggersValues.get(Y.triggerName),
                                            kn = this.statesByElement.get(Y.element);
                                            if (kn && kn.has(Y.triggerName)) {
                                                const eh = kn.get(Y.triggerName);
                                                eh.value = uo,
                                                kn.set(Y.triggerName, eh)
                                            }
                                        }
                                        return void we.destroy()
                                    }
                                }
                                const gi = !u || !this.driver.containsElement(u, wt),
                                _n = x.get(wt),
                                br = m.get(wt),
                                Ye = this._buildInstruction(Y, i, br, _n, gi);
                                if (Ye.errors && Ye.errors.length)
                                    return void fe.push(Ye);
                                if (gi)
                                    return we.onStart(() => co(wt, Ye.fromStyles)), we.onDestroy(() => mi(wt, Ye.toStyles)), void r.push(we);
                                if (Y.isFallbackTransition)
                                    return we.onStart(() => co(wt, Ye.fromStyles)), we.onDestroy(() => mi(wt, Ye.toStyles)), void r.push(we);
                                const FT = [];
                                Ye.timelines.forEach(Ot => {
                                    Ot.stretchStartingKeyframe = !0,
                                    this.disabledNodes.has(Ot.element) || FT.push(Ot)
                                }),
                                Ye.timelines = FT,
                                i.append(wt, Ye.timelines),
                                s.push({
                                    instruction: Ye,
                                    player: we,
                                    element: wt
                                }),
                                Ye.queriedElements.forEach(Ot => hn(a, Ot, []).push(we)),
                                Ye.preStyleProps.forEach((Ot, uo) => {
                                    if (Ot.size) {
                                        let kn = c.get(uo);
                                        kn || c.set(uo, kn = new Set),
                                        Ot.forEach((eh, F_) => kn.add(F_))
                                    }
                                }),
                                Ye.postStyleProps.forEach((Ot, uo) => {
                                    let kn = l.get(uo);
                                    kn || l.set(uo, kn = new Set),
                                    Ot.forEach((eh, F_) => kn.add(F_))
                                })
                            });
                        if (fe.length) {
                            const L = [];
                            fe.forEach(U => {
                                L.push(function V5(n, t) {
                                    return new E(3505, !1)
                                }
                                    ())
                            }),
                            de.forEach(U => U.destroy()),
                            this.reportError(L)
                        }
                        const dt = new Map,
                        pn = new Map;
                        s.forEach(L => {
                            const U = L.element;
                            i.has(U) && (pn.set(U, U), this._beforeAnimationBuild(L.player.namespaceId, L.instruction, dt))
                        }),
                        r.forEach(L => {
                            const U = L.element;
                            this._getPreviousPlayers(U, !1, L.namespaceId, L.triggerName, null).forEach(we => {
                                hn(dt, U, []).push(we),
                                we.destroy()
                            })
                        });
                        const mn = C.filter(L => yT(L, c, l)),
                        gn = new Map;
                        _T(gn, this.driver, A, l, Fi).forEach(L => {
                            yT(L, c, l) && mn.push(L)
                        });
                        const ji = new Map;
                        f.forEach((L, U) => {
                            _T(ji, this.driver, new Set(L), c, "!")
                        }),
                        mn.forEach(L => {
                            const U = gn.get(L),
                            Y = ji.get(L);
                            gn.set(L, new Map([...Array.from(U?.entries() ?? []), ...Array.from(Y?.entries() ?? [])]))
                        });
                        const Zn = [],
                        Os = [],
                        Rs = {};
                        s.forEach(L => {
                            const {
                                element: U,
                                player: Y,
                                instruction: we
                            } = L;
                            if (i.has(U)) {
                                if (d.has(U))
                                    return Y.onDestroy(() => mi(U, we.toStyles)), Y.disabled = !0, Y.overrideTotalTime(we.totalTime), void r.push(Y);
                                let wt = Rs;
                                if (pn.size > 1) {
                                    let _n = U;
                                    const br = [];
                                    for (; _n = _n.parentNode; ) {
                                        const Ye = pn.get(_n);
                                        if (Ye) {
                                            wt = Ye;
                                            break
                                        }
                                        br.push(_n)
                                    }
                                    br.forEach(Ye => pn.set(Ye, wt))
                                }
                                const gi = this._buildAnimation(Y.namespaceId, we, dt, o, ji, gn);
                                if (Y.setRealPlayer(gi), wt === Rs)
                                    Zn.push(Y);
                                else {
                                    const _n = this.playersByElement.get(wt);
                                    _n && _n.length && (Y.parentPlayer = mr(_n)),
                                    r.push(Y)
                                }
                            } else
                                co(U, we.fromStyles), Y.onDestroy(() => mi(U, we.toStyles)), Os.push(Y), d.has(U) && r.push(Y)
                        }),
                        Os.forEach(L => {
                            const U = o.get(L.element);
                            if (U && U.length) {
                                const Y = mr(U);
                                L.setRealPlayer(Y)
                            }
                        }),
                        r.forEach(L => {
                            L.parentPlayer ? L.syncPlayerEvents(L.parentPlayer) : L.destroy()
                        });
                        for (let L = 0; L < C.length; L++) {
                            const U = C[L],
                            Y = U[Tn];
                            if (ks(U, Nu), Y && Y.hasAnimation)
                                continue;
                            let we = [];
                            if (a.size) {
                                let gi = a.get(U);
                                gi && gi.length && we.push(...gi);
                                let _n = this.driver.query(U, __, !0);
                                for (let br = 0; br < _n.length; br++) {
                                    let Ye = a.get(_n[br]);
                                    Ye && Ye.length && we.push(...Ye)
                                }
                            }
                            const wt = we.filter(gi => !gi.destroyed);
                            wt.length ? HG(this, U, wt) : this.processLeaveNode(U)
                        }
                        return C.length = 0,
                        Zn.forEach(L => {
                            this.players.push(L),
                            L.onDone(() => {
                                L.destroy();
                                const U = this.players.indexOf(L);
                                this.players.splice(U, 1)
                            }),
                            L.play()
                        }),
                        Zn
                    }
                    elementContainsData(t, e) {
                        let i = !1;
                        const r = e[Tn];
                        return r && r.setForRemoval && (i = !0),
                        this.playersByElement.has(e) && (i = !0),
                        this.playersByQueriedElement.has(e) && (i = !0),
                        this.statesByElement.has(e) && (i = !0),
                        this._fetchNamespace(t).elementContainsData(e) || i
                    }
                    afterFlush(t) {
                        this._flushFns.push(t)
                    }
                    afterFlushAnimationsDone(t) {
                        this._whenQuietFns.push(t)
                    }
                    _getPreviousPlayers(t, e, i, r, o) {
                        let s = [];
                        if (e) {
                            const a = this.playersByQueriedElement.get(t);
                            a && (s = a)
                        } else {
                            const a = this.playersByElement.get(t);
                            if (a) {
                                const c = !o || o == kc;
                                a.forEach(l => {
                                    l.queued || !c && l.triggerName != r || s.push(l)
                                })
                            }
                        }
                        return (i || r) && (s = s.filter(a => !(i && i != a.namespaceId || r && r != a.triggerName))),
                        s
                    }
                    _beforeAnimationBuild(t, e, i) {
                        const o = e.element,
                        s = e.isRemovalTransition ? void 0 : t,
                        a = e.isRemovalTransition ? void 0 : e.triggerName;
                        for (const c of e.timelines) {
                            const l = c.element,
                            d = l !== o,
                            u = hn(i, l, []);
                            this._getPreviousPlayers(l, d, s, a, e.toState).forEach(f => {
                                const m = f.getRealPlayer();
                                m.beforeDestroy && m.beforeDestroy(),
                                f.destroy(),
                                u.push(f)
                            })
                        }
                        co(o, e.fromStyles)
                    }
                    _buildAnimation(t, e, i, r, o, s) {
                        const a = e.triggerName,
                        c = e.element,
                        l = [],
                        d = new Set,
                        u = new Set,
                        h = e.timelines.map(m => {
                            const _ = m.element;
                            d.add(_);
                            const C = _[Tn];
                            if (C && C.removedBeforeQueried)
                                return new Ja(m.duration, m.delay);
                            const D = _ !== c,
                            A = function UG(n) {
                                const t = [];
                                return vT(n, t),
                                t
                            }
                            ((i.get(_) || PG).map(dt => dt.getRealPlayer())).filter(dt => !!dt.element && dt.element === _),
                            x = o.get(_),
                            P = s.get(_),
                            de = GM(0, this._normalizer, 0, m.keyframes, x, P),
                            fe = this._buildPlayer(m, de, A);
                            if (m.subTimeline && r && u.add(_), D) {
                                const dt = new I_(t, a, _);
                                dt.setRealPlayer(fe),
                                l.push(dt)
                            }
                            return fe
                        });
                        l.forEach(m => {
                            hn(this.playersByQueriedElement, m.element, []).push(m),
                            m.onDone(() => function VG(n, t, e) {
                                let i = n.get(t);
                                if (i) {
                                    if (i.length) {
                                        const r = i.indexOf(e);
                                        i.splice(r, 1)
                                    }
                                    0 == i.length && n.delete(t)
                                }
                                return i
                            }
                                (this.playersByQueriedElement, m.element, m))
                        }),
                        d.forEach(m => An(m, eT));
                        const f = mr(h);
                        return f.onDestroy(() => {
                            d.forEach(m => ks(m, eT)),
                            mi(c, e.toStyles)
                        }),
                        u.forEach(m => {
                            hn(r, m, []).push(f)
                        }),
                        f
                    }
                    _buildPlayer(t, e, i) {
                        return e.length > 0 ? this.driver.animate(t.element, e, t.duration, t.delay, t.easing, i) : new Ja(t.duration, t.delay)
                    }
                }
                class I_ {
                    constructor(t, e, i) {
                        this.namespaceId = t,
                        this.triggerName = e,
                        this.element = i,
                        this._player = new Ja,
                        this._containsRealPlayer = !1,
                        this._queuedCallbacks = new Map,
                        this.destroyed = !1,
                        this.markedForDestroy = !1,
                        this.disabled = !1,
                        this.queued = !0,
                        this.totalTime = 0
                    }
                    setRealPlayer(t) {
                        this._containsRealPlayer || (this._player = t, this._queuedCallbacks.forEach((e, i) => {
                                e.forEach(r => d_(t, i, void 0, r))
                            }), this._queuedCallbacks.clear(), this._containsRealPlayer = !0, this.overrideTotalTime(t.totalTime), this.queued = !1)
                    }
                    getRealPlayer() {
                        return this._player
                    }
                    overrideTotalTime(t) {
                        this.totalTime = t
                    }
                    syncPlayerEvents(t) {
                        const e = this._player;
                        e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
                        t.onDone(() => this.finish()),
                        t.onDestroy(() => this.destroy())
                    }
                    _queueEvent(t, e) {
                        hn(this._queuedCallbacks, t, []).push(e)
                    }
                    onDone(t) {
                        this.queued && this._queueEvent("done", t),
                        this._player.onDone(t)
                    }
                    onStart(t) {
                        this.queued && this._queueEvent("start", t),
                        this._player.onStart(t)
                    }
                    onDestroy(t) {
                        this.queued && this._queueEvent("destroy", t),
                        this._player.onDestroy(t)
                    }
                    init() {
                        this._player.init()
                    }
                    hasStarted() {
                        return !this.queued && this._player.hasStarted()
                    }
                    play() {
                        !this.queued && this._player.play()
                    }
                    pause() {
                        !this.queued && this._player.pause()
                    }
                    restart() {
                        !this.queued && this._player.restart()
                    }
                    finish() {
                        this._player.finish()
                    }
                    destroy() {
                        this.destroyed = !0,
                        this._player.destroy()
                    }
                    reset() {
                        !this.queued && this._player.reset()
                    }
                    setPosition(t) {
                        this.queued || this._player.setPosition(t)
                    }
                    getPosition() {
                        return this.queued ? 0 : this._player.getPosition()
                    }
                    triggerCallback(t) {
                        const e = this._player;
                        e.triggerCallback && e.triggerCallback(t)
                    }
                }
                function Ku(n) {
                    return n && 1 === n.nodeType
                }
                function gT(n, t) {
                    const e = n.style.display;
                    return n.style.display = t ?? "none",
                    e
                }
                function _T(n, t, e, i, r) {
                    const o = [];
                    e.forEach(c => o.push(gT(c)));
                    const s = [];
                    i.forEach((c, l) => {
                        const d = new Map;
                        c.forEach(u => {
                            const h = t.computeStyle(l, u, r);
                            d.set(u, h),
                            (!h || 0 == h.length) && (l[Tn] = FG, s.push(l))
                        }),
                        n.set(l, d)
                    });
                    let a = 0;
                    return e.forEach(c => gT(c, o[a++])),
                    s
                }
                function bT(n, t) {
                    const e = new Map;
                    if (n.forEach(a => e.set(a, [])), 0 == t.length)
                        return e;
                    const r = new Set(t),
                    o = new Map;
                    function s(a) {
                        if (!a)
                            return 1;
                        let c = o.get(a);
                        if (c)
                            return c;
                        const l = a.parentNode;
                        return c = e.has(l) ? l : r.has(l) ? 1 : s(l),
                        o.set(a, c),
                        c
                    }
                    return t.forEach(a => {
                        const c = s(a);
                        1 !== c && e.get(c).push(a)
                    }),
                    e
                }
                function An(n, t) {
                    n.classList?.add(t)
                }
                function ks(n, t) {
                    n.classList?.remove(t)
                }
                function HG(n, t, e) {
                    mr(e).onDone(() => n.processLeaveNode(t))
                }
                function vT(n, t) {
                    for (let e = 0; e < n.length; e++) {
                        const i = n[e];
                        i instanceof BE ? vT(i.players, t) : t.push(i)
                    }
                }
                function yT(n, t, e) {
                    const i = e.get(n);
                    if (!i)
                        return !1;
                    let r = t.get(n);
                    return r ? i.forEach(o => r.add(o)) : t.set(n, i),
                    e.delete(n),
                    !0
                }
                class Zu {
                    constructor(t, e, i) {
                        this.bodyNode = t,
                        this._driver = e,
                        this._normalizer = i,
                        this._triggerCache = {},
                        this.onRemovalComplete = (r, o) => {},
                        this._transitionEngine = new LG(t, e, i),
                        this._timelineEngine = new AG(t, e, i),
                        this._transitionEngine.onRemovalComplete = (r, o) => this.onRemovalComplete(r, o)
                    }
                    registerTrigger(t, e, i, r, o) {
                        const s = t + "-" + r;
                        let a = this._triggerCache[s];
                        if (!a) {
                            const c = [],
                            d = w_(this._driver, o, c, []);
                            if (c.length)
                                throw function M5(n, t) {
                                    return new E(3404, !1)
                                }
                            ();
                            a = function EG(n, t, e) {
                                return new SG(n, t, e)
                            }
                            (r, d, this._normalizer),
                            this._triggerCache[s] = a
                        }
                        this._transitionEngine.registerTrigger(e, r, a)
                    }
                    register(t, e) {
                        this._transitionEngine.register(t, e)
                    }
                    destroy(t, e) {
                        this._transitionEngine.destroy(t, e)
                    }
                    onInsert(t, e, i, r) {
                        this._transitionEngine.insertNode(t, e, i, r)
                    }
                    onRemove(t, e, i, r) {
                        this._transitionEngine.removeNode(t, e, r || !1, i)
                    }
                    disableAnimations(t, e) {
                        this._transitionEngine.markElementAsDisabled(t, e)
                    }
                    process(t, e, i, r) {
                        if ("@" == i.charAt(0)) {
                            const [o, s] = WM(i);
                            this._timelineEngine.command(o, e, s, r)
                        } else
                            this._transitionEngine.trigger(t, e, i, r)
                    }
                    listen(t, e, i, r, o) {
                        if ("@" == i.charAt(0)) {
                            const [s, a] = WM(i);
                            return this._timelineEngine.listen(s, e, a, o)
                        }
                        return this._transitionEngine.listen(t, e, i, r, o)
                    }
                    flush(t = -1) {
                        this._transitionEngine.flush(t)
                    }
                    get players() {
                        return this._transitionEngine.players.concat(this._timelineEngine.players)
                    }
                    whenRenderingDone() {
                        return this._transitionEngine.whenRenderingDone()
                    }
                }
                let GG = (() => {
                    class n {
                        constructor(e, i, r) {
                            this._element = e,
                            this._startStyles = i,
                            this._endStyles = r,
                            this._state = 0;
                            let o = n.initialStylesByElement.get(e);
                            o || n.initialStylesByElement.set(e, o = new Map),
                            this._initialStyles = o
                        }
                        start() {
                            this._state < 1 && (this._startStyles && mi(this._element, this._startStyles, this._initialStyles), this._state = 1)
                        }
                        finish() {
                            this.start(),
                            this._state < 2 && (mi(this._element, this._initialStyles), this._endStyles && (mi(this._element, this._endStyles), this._endStyles = null), this._state = 1)
                        }
                        destroy() {
                            this.finish(),
                            this._state < 3 && (n.initialStylesByElement.delete(this._element), this._startStyles && (co(this._element, this._startStyles), this._endStyles = null), this._endStyles && (co(this._element, this._endStyles), this._endStyles = null), mi(this._element, this._initialStyles), this._state = 3)
                        }
                    }
                    return n.initialStylesByElement = new WeakMap,
                    n
                })();
                function O_(n) {
                    let t = null;
                    return n.forEach((e, i) => {
                        (function WG(n) {
                            return "display" === n || "position" === n
                        })(i) && (t = t || new Map, t.set(i, e))
                    }),
                    t
                }
                class wT {
                    constructor(t, e, i, r) {
                        this.element = t,
                        this.keyframes = e,
                        this.options = i,
                        this._specialStyles = r,
                        this._onDoneFns = [],
                        this._onStartFns = [],
                        this._onDestroyFns = [],
                        this._initialized = !1,
                        this._finished = !1,
                        this._started = !1,
                        this._destroyed = !1,
                        this._originalOnDoneFns = [],
                        this._originalOnStartFns = [],
                        this.time = 0,
                        this.parentPlayer = null,
                        this.currentSnapshot = new Map,
                        this._duration = i.duration,
                        this._delay = i.delay || 0,
                        this.time = this._duration + this._delay
                    }
                    _onFinish() {
                        this._finished || (this._finished = !0, this._onDoneFns.forEach(t => t()), this._onDoneFns = [])
                    }
                    init() {
                        this._buildPlayer(),
                        this._preparePlayerBeforeStart()
                    }
                    _buildPlayer() {
                        if (this._initialized)
                            return;
                        this._initialized = !0;
                        const t = this.keyframes;
                        this.domPlayer = this._triggerWebAnimation(this.element, t, this.options),
                        this._finalKeyframe = t.length ? t[t.length - 1] : new Map,
                        this.domPlayer.addEventListener("finish", () => this._onFinish())
                    }
                    _preparePlayerBeforeStart() {
                        this._delay ? this._resetDomPlayerState() : this.domPlayer.pause()
                    }
                    _convertKeyframesToObject(t) {
                        const e = [];
                        return t.forEach(i => {
                            e.push(Object.fromEntries(i))
                        }),
                        e
                    }
                    _triggerWebAnimation(t, e, i) {
                        return t.animate(this._convertKeyframesToObject(e), i)
                    }
                    onStart(t) {
                        this._originalOnStartFns.push(t),
                        this._onStartFns.push(t)
                    }
                    onDone(t) {
                        this._originalOnDoneFns.push(t),
                        this._onDoneFns.push(t)
                    }
                    onDestroy(t) {
                        this._onDestroyFns.push(t)
                    }
                    play() {
                        this._buildPlayer(),
                        this.hasStarted() || (this._onStartFns.forEach(t => t()), this._onStartFns = [], this._started = !0, this._specialStyles && this._specialStyles.start()),
                        this.domPlayer.play()
                    }
                    pause() {
                        this.init(),
                        this.domPlayer.pause()
                    }
                    finish() {
                        this.init(),
                        this._specialStyles && this._specialStyles.finish(),
                        this._onFinish(),
                        this.domPlayer.finish()
                    }
                    reset() {
                        this._resetDomPlayerState(),
                        this._destroyed = !1,
                        this._finished = !1,
                        this._started = !1,
                        this._onStartFns = this._originalOnStartFns,
                        this._onDoneFns = this._originalOnDoneFns
                    }
                    _resetDomPlayerState() {
                        this.domPlayer && this.domPlayer.cancel()
                    }
                    restart() {
                        this.reset(),
                        this.play()
                    }
                    hasStarted() {
                        return this._started
                    }
                    destroy() {
                        this._destroyed || (this._destroyed = !0, this._resetDomPlayerState(), this._onFinish(), this._specialStyles && this._specialStyles.destroy(), this._onDestroyFns.forEach(t => t()), this._onDestroyFns = [])
                    }
                    setPosition(t) {
                        void 0 === this.domPlayer && this.init(),
                        this.domPlayer.currentTime = t * this.time
                    }
                    getPosition() {
                        return this.domPlayer.currentTime / this.time
                    }
                    get totalTime() {
                        return this._delay + this._duration
                    }
                    beforeDestroy() {
                        const t = new Map;
                        this.hasStarted() && this._finalKeyframe.forEach((i, r) => {
                            "offset" !== r && t.set(r, this._finished ? i : sT(this.element, r))
                        }),
                        this.currentSnapshot = t
                    }
                    triggerCallback(t) {
                        const e = "start" === t ? this._onStartFns : this._onDoneFns;
                        e.forEach(i => i()),
                        e.length = 0
                    }
                }
                class qG {
                    validateStyleProperty(t) {
                        return !0
                    }
                    validateAnimatableStyleProperty(t) {
                        return !0
                    }
                    matchesElement(t, e) {
                        return !1
                    }
                    containsElement(t, e) {
                        return ZM(t, e)
                    }
                    getParentElement(t) {
                        return p_(t)
                    }
                    query(t, e, i) {
                        return XM(t, e, i)
                    }
                    computeStyle(t, e, i) {
                        return window.getComputedStyle(t)[e]
                    }
                    animate(t, e, i, r, o, s = []) {
                        const c = {
                            duration: i,
                            delay: r,
                            fill: 0 == r ? "both" : "forwards"
                        };
                        o && (c.easing = o);
                        const l = new Map,
                        d = s.filter(f => f instanceof wT);
                        (function X5(n, t) {
                            return 0 === n || 0 === t
                        })(i, r) && d.forEach(f => {
                            f.currentSnapshot.forEach((m, _) => l.set(_, m))
                        });
                        let u = function q5(n) {
                            return n.length ? n[0]instanceof Map ? n : n.map(t => tT(t)) : []
                        }
                        (e).map(f => gr(f));
                        u = function Q5(n, t, e) {
                            if (e.size && t.length) {
                                let i = t[0],
                                r = [];
                                if (e.forEach((o, s) => {
                                        i.has(s) || r.push(s),
                                        i.set(s, o)
                                    }), r.length)
                                    for (let o = 1; o < t.length; o++) {
                                        let s = t[o];
                                        r.forEach(a => s.set(a, sT(n, a)))
                                    }
                            }
                            return t
                        }
                        (t, u, l);
                        const h = function zG(n, t) {
                            let e = null,
                            i = null;
                            return Array.isArray(t) && t.length ? (e = O_(t[0]), t.length > 1 && (i = O_(t[t.length - 1]))) : t instanceof Map && (e = O_(t)),
                            e || i ? new GG(n, e, i) : null
                        }
                        (t, u);
                        return new wT(t, u, c, h)
                    }
                }
                let YG = (() => {
                    class n extends RE {
                        constructor(e, i) {
                            super(),
                            this._nextAnimationId = 0,
                            this._renderer = e.createRenderer(i.body, {
                                id: "0",
                                encapsulation: On.None,
                                styles: [],
                                data: {
                                    animation: []
                                }
                            })
                        }
                        build(e) {
                            const i = this._nextAnimationId.toString();
                            this._nextAnimationId++;
                            const r = Array.isArray(e) ? FE(e) : e;
                            return CT(this._renderer, null, i, "register", [r]),
                            new KG(i, this._renderer)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(sa), v(Q))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                class KG extends GH {
                    constructor(t, e) {
                        super(),
                        this._id = t,
                        this._renderer = e
                    }
                    create(t, e) {
                        return new ZG(this._id, t, e || {}, this._renderer)
                    }
                }
                class ZG {
                    constructor(t, e, i, r) {
                        this.id = t,
                        this.element = e,
                        this._renderer = r,
                        this.parentPlayer = null,
                        this._started = !1,
                        this.totalTime = 0,
                        this._command("create", i)
                    }
                    _listen(t, e) {
                        return this._renderer.listen(this.element, `@@${this.id}:${t}`, e)
                    }
                    _command(t, ...e) {
                        return CT(this._renderer, this.element, this.id, t, e)
                    }
                    onDone(t) {
                        this._listen("done", t)
                    }
                    onStart(t) {
                        this._listen("start", t)
                    }
                    onDestroy(t) {
                        this._listen("destroy", t)
                    }
                    init() {
                        this._command("init")
                    }
                    hasStarted() {
                        return this._started
                    }
                    play() {
                        this._command("play"),
                        this._started = !0
                    }
                    pause() {
                        this._command("pause")
                    }
                    restart() {
                        this._command("restart")
                    }
                    finish() {
                        this._command("finish")
                    }
                    destroy() {
                        this._command("destroy")
                    }
                    reset() {
                        this._command("reset"),
                        this._started = !1
                    }
                    setPosition(t) {
                        this._command("setPosition", t)
                    }
                    getPosition() {
                        return this._renderer.engine.players[+this.id]?.getPosition() ?? 0
                    }
                }
                function CT(n, t, e, i, r) {
                    return n.setProperty(t, `@@${e}:${i}`, r)
                }
                const DT = "@.disabled";
                let XG = (() => {
                    class n {
                        constructor(e, i, r) {
                            this.delegate = e,
                            this.engine = i,
                            this._zone = r,
                            this._currentId = 0,
                            this._microtaskId = 1,
                            this._animationCallbacksBuffer = [],
                            this._rendererCache = new Map,
                            this._cdRecurDepth = 0,
                            this.promise = Promise.resolve(0),
                            i.onRemovalComplete = (o, s) => {
                                const a = s?.parentNode(o);
                                a && s.removeChild(a, o)
                            }
                        }
                        createRenderer(e, i) {
                            const o = this.delegate.createRenderer(e, i);
                            if (!(e && i && i.data && i.data.animation)) {
                                let d = this._rendererCache.get(o);
                                return d || (d = new xT("", o, this.engine, () => this._rendererCache.delete(o)), this._rendererCache.set(o, d)),
                                d
                            }
                            const s = i.id,
                            a = i.id + "-" + this._currentId;
                            this._currentId++,
                            this.engine.register(a, e);
                            const c = d => {
                                Array.isArray(d) ? d.forEach(c) : this.engine.registerTrigger(s, a, e, d.name, d)
                            };
                            return i.data.animation.forEach(c),
                            new QG(this, a, o, this.engine)
                        }
                        begin() {
                            this._cdRecurDepth++,
                            this.delegate.begin && this.delegate.begin()
                        }
                        _scheduleCountTask() {
                            this.promise.then(() => {
                                this._microtaskId++
                            })
                        }
                        scheduleListenerCallback(e, i, r) {
                            e >= 0 && e < this._microtaskId ? this._zone.run(() => i(r)) : (0 == this._animationCallbacksBuffer.length && Promise.resolve(null).then(() => {
                                    this._zone.run(() => {
                                        this._animationCallbacksBuffer.forEach(o => {
                                            const [s, a] = o;
                                            s(a)
                                        }),
                                        this._animationCallbacksBuffer = []
                                    })
                                }), this._animationCallbacksBuffer.push([i, r]))
                        }
                        end() {
                            this._cdRecurDepth--,
                            0 == this._cdRecurDepth && this._zone.runOutsideAngular(() => {
                                this._scheduleCountTask(),
                                this.engine.flush(this._microtaskId)
                            }),
                            this.delegate.end && this.delegate.end()
                        }
                        whenRenderingDone() {
                            return this.engine.whenRenderingDone()
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(sa), v(Zu), v(X))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                class xT {
                    constructor(t, e, i, r) {
                        this.namespaceId = t,
                        this.delegate = e,
                        this.engine = i,
                        this._onDestroy = r,
                        this.destroyNode = this.delegate.destroyNode ? o => e.destroyNode(o) : null
                    }
                    get data() {
                        return this.delegate.data
                    }
                    destroy() {
                        this.engine.destroy(this.namespaceId, this.delegate),
                        this.delegate.destroy(),
                        this._onDestroy?.()
                    }
                    createElement(t, e) {
                        return this.delegate.createElement(t, e)
                    }
                    createComment(t) {
                        return this.delegate.createComment(t)
                    }
                    createText(t) {
                        return this.delegate.createText(t)
                    }
                    appendChild(t, e) {
                        this.delegate.appendChild(t, e),
                        this.engine.onInsert(this.namespaceId, e, t, !1)
                    }
                    insertBefore(t, e, i, r = !0) {
                        this.delegate.insertBefore(t, e, i),
                        this.engine.onInsert(this.namespaceId, e, t, r)
                    }
                    removeChild(t, e, i) {
                        this.engine.onRemove(this.namespaceId, e, this.delegate, i)
                    }
                    selectRootElement(t, e) {
                        return this.delegate.selectRootElement(t, e)
                    }
                    parentNode(t) {
                        return this.delegate.parentNode(t)
                    }
                    nextSibling(t) {
                        return this.delegate.nextSibling(t)
                    }
                    setAttribute(t, e, i, r) {
                        this.delegate.setAttribute(t, e, i, r)
                    }
                    removeAttribute(t, e, i) {
                        this.delegate.removeAttribute(t, e, i)
                    }
                    addClass(t, e) {
                        this.delegate.addClass(t, e)
                    }
                    removeClass(t, e) {
                        this.delegate.removeClass(t, e)
                    }
                    setStyle(t, e, i, r) {
                        this.delegate.setStyle(t, e, i, r)
                    }
                    removeStyle(t, e, i) {
                        this.delegate.removeStyle(t, e, i)
                    }
                    setProperty(t, e, i) {
                        "@" == e.charAt(0) && e == DT ? this.disableAnimations(t, !!i) : this.delegate.setProperty(t, e, i)
                    }
                    setValue(t, e) {
                        this.delegate.setValue(t, e)
                    }
                    listen(t, e, i) {
                        return this.delegate.listen(t, e, i)
                    }
                    disableAnimations(t, e) {
                        this.engine.disableAnimations(t, e)
                    }
                }
                class QG extends xT {
                    constructor(t, e, i, r, o) {
                        super(e, i, r, o),
                        this.factory = t,
                        this.namespaceId = e
                    }
                    setProperty(t, e, i) {
                        "@" == e.charAt(0) ? "." == e.charAt(1) && e == DT ? this.disableAnimations(t, i = void 0 === i || !!i) : this.engine.process(this.namespaceId, t, e.slice(1), i) : this.delegate.setProperty(t, e, i)
                    }
                    listen(t, e, i) {
                        if ("@" == e.charAt(0)) {
                            const r = function JG(n) {
                                switch (n) {
                                case "body":
                                    return document.body;
                                case "document":
                                    return document;
                                case "window":
                                    return window;
                                default:
                                    return n
                                }
                            }
                            (t);
                            let o = e.slice(1),
                            s = "";
                            return "@" != o.charAt(0) && ([o, s] = function e6(n) {
                                const t = n.indexOf(".");
                                return [n.substring(0, t), n.slice(t + 1)]
                            }
                                (o)),
                            this.engine.listen(this.namespaceId, r, o, s, a => {
                                this.factory.scheduleListenerCallback(a._data || -1, i, a)
                            })
                        }
                        return this.delegate.listen(t, e, i)
                    }
                }
                const ET = [{
                        provide: RE,
                        useClass: YG
                    }, {
                        provide: S_,
                        useFactory: function n6() {
                            return new wG
                        }
                    }, {
                        provide: Zu,
                        useClass: (() => {
                            class n extends Zu {
                                constructor(e, i, r, o) {
                                    super(e.body, i, r)
                                }
                                ngOnDestroy() {
                                    this.flush()
                                }
                            }
                            return n. \u0275fac = function (e) {
                                return new(e || n)(v(Q), v(m_), v(S_), v(Hr))
                            },
                            n. \u0275prov = k({
                                token: n,
                                factory: n. \u0275fac
                            }),
                            n
                        })()
                    }, {
                        provide: sa,
                        useFactory: function i6(n, t, e) {
                            return new XG(n, t, e)
                        },
                        deps: [ld, Zu, X]
                    }
                ],
                R_ = [{
                        provide: m_,
                        useFactory: () => new qG
                    }, {
                        provide: yt,
                        useValue: "BrowserAnimations"
                    }, ...ET],
                ST = [{
                        provide: m_,
                        useClass: QM
                    }, {
                        provide: yt,
                        useValue: "NoopAnimations"
                    }, ...ET];
                let r6 = (() => {
                    class n {
                        static withConfig(e) {
                            return {
                                ngModule: n,
                                providers: e.disableAnimations ? ST : R_
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: R_,
                        imports: [OD]
                    }),
                    n
                })(),
                AT = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({}),
                    n
                })(),
                _6 = (() => {
                    class n {}
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        imports: [ct, sg, AT, ct, AT]
                    }),
                    n
                })();
                const _r = new Ae(Fs),
                v6 = {
                    connector: () => new K
                };
                function kT(n, t = v6) {
                    const {
                        connector: e
                    } = t;
                    return Be((i, r) => {
                        const o = e();
                        Rt(n(function b6(n) {
                                return new Ae(t => n.subscribe(t))
                            }
                                (o))).subscribe(r),
                        r.add(i.subscribe(o))
                    })
                }
                function IT(n, t) {
                    return t ? e => ls(t.pipe(Ge(1), function C6() {
                            return Be((n, t) => {
                                n.subscribe(Ve(t, Fs))
                            })
                        }
                            ()), e.pipe(IT(n))) : ut((e, i) => n(e, i).pipe(Ge(1), Zd(e)))
                }
                const Ic = "Service workers are disabled or not supported by this browser";
                class Qu {
                    constructor(t) {
                        if (this.serviceWorker = t, t) {
                            const i = Pi(t, "controllerchange").pipe(j(() => t.controller)),
                            o = ls(fs(() => B(t.controller)), i);
                            this.worker = o.pipe(ve(d => !!d)),
                            this.registration = this.worker.pipe(Qt(() => t.getRegistration()));
                            const l = Pi(t, "message").pipe(j(d => d.data)).pipe(ve(d => d && d.type)).pipe(function w6(n) {
                                return n ? t => kT(n)(t) : t => function y6(n, t) {
                                    const e = pe(n) ? n : () => n;
                                    return pe(t) ? kT(t, {
                                        connector: e
                                    }) : i => new Tg(i, e)
                                }
                                (new K)(t)
                            }
                                    ());
                            l.connect(),
                            this.events = l
                        } else
                            this.worker = this.events = this.registration = function x6(n) {
                                return fs(() => Xr(new Error(n)))
                            }
                        (Ic)
                    }
                    postMessage(t, e) {
                        return this.worker.pipe(Ge(1), Je(i => {
                                i.postMessage({
                                    action: t,
                                    ...e
                                })
                            })).toPromise().then(() => {})
                    }
                    postMessageWithOperation(t, e, i) {
                        const r = this.waitForOperationCompleted(i),
                        o = this.postMessage(t, e);
                        return Promise.all([o, r]).then(([, s]) => s)
                    }
                    generateNonce() {
                        return Math.round(1e7 * Math.random())
                    }
                    eventsOfType(t) {
                        let e;
                        return e = "string" == typeof t ? i => i.type === t : i => t.includes(i.type),
                        this.events.pipe(ve(e))
                    }
                    nextEventOfType(t) {
                        return this.eventsOfType(t).pipe(Ge(1))
                    }
                    waitForOperationCompleted(t) {
                        return this.eventsOfType("OPERATION_COMPLETED").pipe(ve(e => e.nonce === t), Ge(1), j(e => {
                                if (void 0 !== e.result)
                                    return e.result;
                                throw new Error(e.error)
                            })).toPromise()
                    }
                    get isEnabled() {
                        return !!this.serviceWorker
                    }
                }
                let E6 = (() => {
                    class n {
                        constructor(e) {
                            if (this.sw = e, this.subscriptionChanges = new K, !e.isEnabled)
                                return this.messages = _r, this.notificationClicks = _r, void(this.subscription = _r);
                            this.messages = this.sw.eventsOfType("PUSH").pipe(j(r => r.data)),
                            this.notificationClicks = this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(j(r => r.data)),
                            this.pushManager = this.sw.registration.pipe(j(r => r.pushManager));
                            const i = this.pushManager.pipe(Qt(r => r.getSubscription()));
                            this.subscription = Cr(i, this.subscriptionChanges)
                        }
                        get isEnabled() {
                            return this.sw.isEnabled
                        }
                        requestSubscription(e) {
                            if (!this.sw.isEnabled)
                                return Promise.reject(new Error(Ic));
                            const i = {
                                userVisibleOnly: !0
                            };
                            let r = this.decodeBase64(e.serverPublicKey.replace(/_/g, "/").replace(/-/g, "+")),
                            o = new Uint8Array(new ArrayBuffer(r.length));
                            for (let s = 0; s < r.length; s++)
                                o[s] = r.charCodeAt(s);
                            return i.applicationServerKey = o,
                            this.pushManager.pipe(Qt(s => s.subscribe(i)), Ge(1)).toPromise().then(s => (this.subscriptionChanges.next(s), s))
                        }
                        unsubscribe() {
                            return this.sw.isEnabled ? this.subscription.pipe(Ge(1), Qt(i => {
                                    if (null === i)
                                        throw new Error("Not subscribed to push notifications.");
                                    return i.unsubscribe().then(r => {
                                        if (!r)
                                            throw new Error("Unsubscribe failed!");
                                        this.subscriptionChanges.next(null)
                                    })
                                })).toPromise() : Promise.reject(new Error(Ic))
                        }
                        decodeBase64(e) {
                            return atob(e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Qu))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })(),
                S6 = (() => {
                    class n {
                        constructor(e) {
                            if (this.sw = e, !e.isEnabled)
                                return this.versionUpdates = _r, this.available = _r, this.activated = _r, void(this.unrecoverable = _r);
                            this.versionUpdates = this.sw.eventsOfType(["VERSION_DETECTED", "VERSION_INSTALLATION_FAILED", "VERSION_READY", "NO_NEW_VERSION_DETECTED"]),
                            this.available = this.versionUpdates.pipe(ve(i => "VERSION_READY" === i.type), j(i => ({
                                            type: "UPDATE_AVAILABLE",
                                            current: i.currentVersion,
                                            available: i.latestVersion
                                        }))),
                            this.activated = this.sw.eventsOfType("UPDATE_ACTIVATED"),
                            this.unrecoverable = this.sw.eventsOfType("UNRECOVERABLE_STATE")
                        }
                        get isEnabled() {
                            return this.sw.isEnabled
                        }
                        checkForUpdate() {
                            if (!this.sw.isEnabled)
                                return Promise.reject(new Error(Ic));
                            const e = this.sw.generateNonce();
                            return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES", {
                                nonce: e
                            }, e)
                        }
                        activateUpdate() {
                            if (!this.sw.isEnabled)
                                return Promise.reject(new Error(Ic));
                            const e = this.sw.generateNonce();
                            return this.sw.postMessageWithOperation("ACTIVATE_UPDATE", {
                                nonce: e
                            }, e)
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)(v(Qu))
                    },
                    n. \u0275prov = k({
                        token: n,
                        factory: n. \u0275fac
                    }),
                    n
                })();
                class P_ {}
                const OT = new T("NGSW_REGISTER_SCRIPT");
                function M6(n, t, e, i) {
                    return () => {
                        if (!um(i) || !("serviceWorker" in navigator) || !1 === e.enabled)
                            return;
                        let r;
                        if (navigator.serviceWorker.addEventListener("controllerchange", () => {
                                null !== navigator.serviceWorker.controller && navigator.serviceWorker.controller.postMessage({
                                    action: "INITIALIZE"
                                })
                            }), "function" == typeof e.registrationStrategy)
                            r = e.registrationStrategy();
                        else {
                            const [s, ...a] = (e.registrationStrategy || "registerWhenStable:30000").split(":");
                            switch (s) {
                            case "registerImmediately":
                                r = B(null);
                                break;
                            case "registerWithDelay":
                                r = RT(+a[0] || 0);
                                break;
                            case "registerWhenStable":
                                r = a[0] ? Cr(PT(n), RT(+a[0])) : PT(n);
                                break;
                            default:
                                throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)
                            }
                        }
                        n.get(X).runOutsideAngular(() => r.pipe(Ge(1)).subscribe(() => navigator.serviceWorker.register(t, {
                                    scope: e.scope
                                }).catch(s => console.error("Service worker registration failed with:", s))))
                    }
                }
                function RT(n) {
                    return B(null).pipe(function D6(n, t = Dd) {
                        const e = bE(n, t);
                        return IT(() => e)
                    }
                        (n))
                }
                function PT(n) {
                    return n.get(Hr).isStable.pipe(ve(e => e))
                }
                function T6(n, t) {
                    return new Qu(um(t) && !1 !== n.enabled ? navigator.serviceWorker : void 0)
                }
                let A6 = (() => {
                    class n {
                        static register(e, i = {}) {
                            return {
                                ngModule: n,
                                providers: [{
                                        provide: OT,
                                        useValue: e
                                    }, {
                                        provide: P_,
                                        useValue: i
                                    }, {
                                        provide: Qu,
                                        useFactory: T6,
                                        deps: [P_, ts]
                                    }, {
                                        provide: xa,
                                        useFactory: M6,
                                        deps: [rt, OT, P_, ts],
                                        multi: !0
                                    }
                                ]
                            }
                        }
                    }
                    return n. \u0275fac = function (e) {
                        return new(e || n)
                    },
                    n. \u0275mod = me({
                        type: n
                    }),
                    n. \u0275inj = he({
                        providers: [E6, S6]
                    }),
                    n
                })();
                class Ju {
                    static \u0275fac = function (e) {
                        return new(e || Ju)
                    };
                    static \u0275mod = me({
                        type: Ju,
                        bootstrap: [Pu]
                    });
                    static \u0275inj = he({
                        imports: [Fu, r6, OD, MB, TU, eH, _6, sU, _$, jU, EM, Bz, O3, L3, J3, hg, A6.register("./Skylanders-List/scripts/ngsw-worker.js", {
                                enabled: !0,
                                registrationStrategy: "registerWhenStable:30000"
                            }), EM]
                    })
                }
                lV().bootstrapModule(Ju).catch(n => console.error(n))
            }
        }, pe => {
            pe(pe.s = 728)
        }
    ]);
